{
  "openapi": "3.0.0",
  "paths": {
    "/assistant": {
      "post": {
        "operationId": "AssistantController_create",
        "summary": "Create Assistant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssistantDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "AssistantController_findAll",
        "summary": "List Assistants",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "This is the maximum number of items to return. Defaults to 100.",
            "schema": {
              "minimum": 0,
              "maximum": 1000,
              "type": "number"
            }
          },
          {
            "name": "createdAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/assistant/{id}": {
      "get": {
        "operationId": "AssistantController_findOne",
        "summary": "Get Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "AssistantController_update",
        "summary": "Update Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssistantDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "AssistantController_replace",
        "summary": "Replace Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssistantDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "AssistantController_remove",
        "summary": "Delete Assistant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/call": {
      "get": {
        "operationId": "CallController_findAll",
        "summary": "List Calls",
        "parameters": [
          {
            "name": "assistantId",
            "required": false,
            "in": "query",
            "description": "This will return calls with the specified assistantId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "This is the maximum number of items to return. Defaults to 100.",
            "schema": {
              "minimum": 0,
              "maximum": 1000,
              "type": "number"
            }
          },
          {
            "name": "createdAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Calls"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/call/{id}": {
      "get": {
        "operationId": "CallController_findOne",
        "summary": "Get Call",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        },
        "tags": [
          "Calls"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/call/phone": {
      "post": {
        "operationId": "CallController_createPhoneCall",
        "summary": "Create Phone Call",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOutboundCallDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        },
        "tags": [
          "Calls"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/credential": {
      "post": {
        "operationId": "CredentialController_create",
        "summary": "Create Credential",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateTwilioCredentialDTO",
                    "title": "TwilioCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateDeepgramCredentialDTO",
                    "title": "DeepgramCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateOpenAICredentialDTO",
                    "title": "OpenAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateTogetherAICredentialDTO",
                    "title": "TogetherAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateAnyscaleCredentialDTO",
                    "title": "AnyscaleCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateOpenRouterCredentialDTO",
                    "title": "OpenRouterCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreatePerplexityAICredentialDTO",
                    "title": "PerplexityAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateDeepInfraCredentialDTO",
                    "title": "DeepInfraCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateCustomLLMCredentialDTO",
                    "title": "CustomLLMCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateElevenLabsCredentialDTO",
                    "title": "ElevenLabsCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreatePlayHTCredentialDTO",
                    "title": "PlayHTCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateRimeAICredentialDTO",
                    "title": "RimeAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateRunpodCredentialDTO",
                    "title": "RunpodCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateGroqCredentialDTO",
                    "title": "GroqCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateAnthropicCredentialDTO",
                    "title": "AnthropicCredential"
                  },
                  {
                    "$ref": "#/components/schemas/CreateVonageCredentialDTO",
                    "title": "VonageCredential"
                  }
                ],
                "discriminator": {
                  "propertyName": "provider",
                  "mapping": {
                    "twilio": "#/components/schemas/CreateTwilioCredentialDTO",
                    "deepgram": "#/components/schemas/CreateDeepgramCredentialDTO",
                    "openai": "#/components/schemas/CreateOpenAICredentialDTO",
                    "together-ai": "#/components/schemas/CreateTogetherAICredentialDTO",
                    "anyscale": "#/components/schemas/CreateAnyscaleCredentialDTO",
                    "openrouter": "#/components/schemas/CreateOpenRouterCredentialDTO",
                    "perplexity-ai": "#/components/schemas/CreatePerplexityAICredentialDTO",
                    "deepinfra": "#/components/schemas/CreateDeepInfraCredentialDTO",
                    "custom-llm": "#/components/schemas/CreateCustomLLMCredentialDTO",
                    "11labs": "#/components/schemas/CreateElevenLabsCredentialDTO",
                    "playht": "#/components/schemas/CreatePlayHTCredentialDTO",
                    "rime-ai": "#/components/schemas/CreateRimeAICredentialDTO",
                    "runpod": "#/components/schemas/CreateRunpodCredentialDTO",
                    "groq": "#/components/schemas/CreateGroqCredentialDTO",
                    "anthropic": "#/components/schemas/CreateAnthropicCredentialDTO",
                    "vonage": "#/components/schemas/CreateVonageCredentialDTO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRunpodCredentialDTO",
                      "title": "RunpodCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateGroqCredentialDTO",
                      "title": "GroqCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAnthropicCredentialDTO",
                      "title": "AnthropicCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateVonageCredentialDTO",
                      "title": "VonageCredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rime-ai": "#/components/schemas/RimeAICredential",
                      "runpod": "#/components/schemas/RunpodCredential",
                      "groq": "#/components/schemas/GroqCredential",
                      "anthropic": "#/components/schemas/AnthropicCredential",
                      "vonage": "#/components/schemas/VonageCredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CredentialController_findAll",
        "summary": "List Credentials",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "This is the maximum number of items to return. Defaults to 100.",
            "schema": {
              "minimum": 0,
              "maximum": 1000,
              "type": "number"
            }
          },
          {
            "name": "createdAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/TwilioCredential",
                        "title": "TwilioCredential"
                      },
                      {
                        "$ref": "#/components/schemas/DeepgramCredential",
                        "title": "DeepgramCredential"
                      },
                      {
                        "$ref": "#/components/schemas/OpenAICredential",
                        "title": "OpenAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/TogetherAICredential",
                        "title": "TogetherAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/AnyscaleCredential",
                        "title": "AnyscaleCredential"
                      },
                      {
                        "$ref": "#/components/schemas/OpenRouterCredential",
                        "title": "OpenRouterCredential"
                      },
                      {
                        "$ref": "#/components/schemas/PerplexityAICredential",
                        "title": "PerplexityAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/DeepInfraCredential",
                        "title": "DeepInfraCredential"
                      },
                      {
                        "$ref": "#/components/schemas/CustomLLMCredential",
                        "title": "CustomLLMCredential"
                      },
                      {
                        "$ref": "#/components/schemas/ElevenLabsCredential",
                        "title": "ElevenLabsCredential"
                      },
                      {
                        "$ref": "#/components/schemas/PlayHTCredential",
                        "title": "PlayHTCredential"
                      },
                      {
                        "$ref": "#/components/schemas/RimeAICredential",
                        "title": "RimeAICredential"
                      },
                      {
                        "$ref": "#/components/schemas/UpdateRunpodCredentialDTO",
                        "title": "RunpodCredential"
                      },
                      {
                        "$ref": "#/components/schemas/UpdateGroqCredentialDTO",
                        "title": "GroqCredential"
                      },
                      {
                        "$ref": "#/components/schemas/UpdateAnthropicCredentialDTO",
                        "title": "AnthropicCredential"
                      },
                      {
                        "$ref": "#/components/schemas/UpdateVonageCredentialDTO",
                        "title": "VonageCredential"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "provider",
                      "mapping": {
                        "twilio": "#/components/schemas/TwilioCredential",
                        "deepgram": "#/components/schemas/DeepgramCredential",
                        "openai": "#/components/schemas/OpenAICredential",
                        "together-ai": "#/components/schemas/TogetherAICredential",
                        "anyscale": "#/components/schemas/AnyscaleCredential",
                        "openrouter": "#/components/schemas/OpenRouterCredential",
                        "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                        "deepinfra": "#/components/schemas/DeepInfraCredential",
                        "custom-llm": "#/components/schemas/CustomLLMCredential",
                        "11labs": "#/components/schemas/ElevenLabsCredential",
                        "playht": "#/components/schemas/PlayHTCredential",
                        "rime-ai": "#/components/schemas/RimeAICredential",
                        "runpod": "#/components/schemas/RunpodCredential",
                        "groq": "#/components/schemas/GroqCredential",
                        "anthropic": "#/components/schemas/AnthropicCredential",
                        "vonage": "#/components/schemas/VonageCredential"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/credential/{id}": {
      "get": {
        "operationId": "CredentialController_findOne",
        "summary": "Get Credential",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRunpodCredentialDTO",
                      "title": "RunpodCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateGroqCredentialDTO",
                      "title": "GroqCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAnthropicCredentialDTO",
                      "title": "AnthropicCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateVonageCredentialDTO",
                      "title": "VonageCredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rime-ai": "#/components/schemas/RimeAICredential",
                      "runpod": "#/components/schemas/RunpodCredential",
                      "groq": "#/components/schemas/GroqCredential",
                      "anthropic": "#/components/schemas/AnthropicCredential",
                      "vonage": "#/components/schemas/VonageCredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "CredentialController_update",
        "summary": "Update Credential",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTwilioCredentialDTO",
                    "title": "TwilioCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateDeepgramCredentialDTO",
                    "title": "DeepgramCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateOpenAICredentialDTO",
                    "title": "OpenAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateTogetherAICredentialDTO",
                    "title": "TogetherAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateAnyscaleCredentialDTO",
                    "title": "AnyscaleCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateOpenRouterCredentialDTO",
                    "title": "OpenRouterCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdatePerplexityAICredentialDTO",
                    "title": "PerplexityAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateDeepInfraCredentialDTO",
                    "title": "DeepInfraCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateCustomLLMCredentialDTO",
                    "title": "CustomLLMCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateElevenLabsCredentialDTO",
                    "title": "ElevenLabsCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdatePlayHTCredentialDTO",
                    "title": "PlayHTCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateRimeAICredentialDTO",
                    "title": "RimeAICredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateRunpodCredentialDTO",
                    "title": "RunpodCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateGroqCredentialDTO",
                    "title": "GroqCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateAnthropicCredentialDTO",
                    "title": "AnthropicCredential"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateVonageCredentialDTO",
                    "title": "VonageCredential"
                  }
                ],
                "discriminator": {
                  "propertyName": "provider",
                  "mapping": {
                    "twilio": "#/components/schemas/UpdateTwilioCredentialDTO",
                    "deepgram": "#/components/schemas/UpdateDeepgramCredentialDTO",
                    "openai": "#/components/schemas/UpdateOpenAICredentialDTO",
                    "together-ai": "#/components/schemas/UpdateTogetherAICredentialDTO",
                    "anyscale": "#/components/schemas/UpdateAnyscaleCredentialDTO",
                    "openrouter": "#/components/schemas/UpdateOpenRouterCredentialDTO",
                    "perplexity-ai": "#/components/schemas/UpdatePerplexityAICredentialDTO",
                    "deepinfra": "#/components/schemas/UpdateDeepInfraCredentialDTO",
                    "custom-llm": "#/components/schemas/UpdateCustomLLMCredentialDTO",
                    "11labs": "#/components/schemas/UpdateElevenLabsCredentialDTO",
                    "playht": "#/components/schemas/UpdatePlayHTCredentialDTO",
                    "rime-ai": "#/components/schemas/UpdateRimeAICredentialDTO",
                    "runpod": "#/components/schemas/UpdateRunpodCredentialDTO",
                    "groq": "#/components/schemas/UpdateGroqCredentialDTO",
                    "anthropic": "#/components/schemas/UpdateAnthropicCredentialDTO",
                    "vonage": "#/components/schemas/UpdateVonageCredentialDTO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRunpodCredentialDTO",
                      "title": "RunpodCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateGroqCredentialDTO",
                      "title": "GroqCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAnthropicCredentialDTO",
                      "title": "AnthropicCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateVonageCredentialDTO",
                      "title": "VonageCredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rime-ai": "#/components/schemas/RimeAICredential",
                      "runpod": "#/components/schemas/RunpodCredential",
                      "groq": "#/components/schemas/GroqCredential",
                      "anthropic": "#/components/schemas/AnthropicCredential",
                      "vonage": "#/components/schemas/VonageCredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "CredentialController_remove",
        "summary": "Delete Credential",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TwilioCredential",
                      "title": "TwilioCredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepgramCredential",
                      "title": "DeepgramCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenAICredential",
                      "title": "OpenAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/TogetherAICredential",
                      "title": "TogetherAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/AnyscaleCredential",
                      "title": "AnyscaleCredential"
                    },
                    {
                      "$ref": "#/components/schemas/OpenRouterCredential",
                      "title": "OpenRouterCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PerplexityAICredential",
                      "title": "PerplexityAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/DeepInfraCredential",
                      "title": "DeepInfraCredential"
                    },
                    {
                      "$ref": "#/components/schemas/CustomLLMCredential",
                      "title": "CustomLLMCredential"
                    },
                    {
                      "$ref": "#/components/schemas/ElevenLabsCredential",
                      "title": "ElevenLabsCredential"
                    },
                    {
                      "$ref": "#/components/schemas/PlayHTCredential",
                      "title": "PlayHTCredential"
                    },
                    {
                      "$ref": "#/components/schemas/RimeAICredential",
                      "title": "RimeAICredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateRunpodCredentialDTO",
                      "title": "RunpodCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateGroqCredentialDTO",
                      "title": "GroqCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAnthropicCredentialDTO",
                      "title": "AnthropicCredential"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateVonageCredentialDTO",
                      "title": "VonageCredential"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/TwilioCredential",
                      "deepgram": "#/components/schemas/DeepgramCredential",
                      "openai": "#/components/schemas/OpenAICredential",
                      "together-ai": "#/components/schemas/TogetherAICredential",
                      "anyscale": "#/components/schemas/AnyscaleCredential",
                      "openrouter": "#/components/schemas/OpenRouterCredential",
                      "perplexity-ai": "#/components/schemas/PerplexityAICredential",
                      "deepinfra": "#/components/schemas/DeepInfraCredential",
                      "custom-llm": "#/components/schemas/CustomLLMCredential",
                      "11labs": "#/components/schemas/ElevenLabsCredential",
                      "playht": "#/components/schemas/PlayHTCredential",
                      "rime-ai": "#/components/schemas/RimeAICredential",
                      "runpod": "#/components/schemas/RunpodCredential",
                      "groq": "#/components/schemas/GroqCredential",
                      "anthropic": "#/components/schemas/AnthropicCredential",
                      "vonage": "#/components/schemas/VonageCredential"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/phone-number/buy": {
      "post": {
        "operationId": "PhoneNumberController_buy",
        "summary": "Buy Phone Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuyPhoneNumberDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/phone-number/import/twilio": {
      "post": {
        "operationId": "PhoneNumberController_importTwilio",
        "summary": "Import Twilio Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportTwilioPhoneNumberDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/phone-number/import/vonage": {
      "post": {
        "operationId": "PhoneNumberController_importVonage",
        "summary": "Import Vonage Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportVonagePhoneNumberDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/phone-number": {
      "get": {
        "operationId": "PhoneNumberController_findAll",
        "summary": "List Phone Numbers",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "This is the maximum number of items to return. Defaults to 100.",
            "schema": {
              "minimum": 0,
              "maximum": 1000,
              "type": "number"
            }
          },
          {
            "name": "createdAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the createdAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLt",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtGe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is greater than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedAtLe",
            "required": false,
            "in": "query",
            "description": "This will return items where the updatedAt is less than or equal to the specified value.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumber"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/phone-number/{id}": {
      "get": {
        "operationId": "PhoneNumberController_findOne",
        "summary": "Get Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "PhoneNumberController_update",
        "summary": "Update Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneNumberDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PhoneNumberController_remove",
        "summary": "Delete Phone Number",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "tags": [
          "Phone Numbers"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "MetricsController_findAll",
        "summary": "List Metrics",
        "parameters": [
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "example": "PST",
            "description": "Convert date & and time to provided timezone. https://popsql.com/learn-sql/postgresql/how-to-convert-utc-to-local-time-zone-in-postgresql",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rangeStart",
            "required": false,
            "in": "query",
            "description": "This will include calls with a createdAt timestamp greater than or equal to the specified value.\n\nIf not provided, defaults to the org's current period start.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "rangeEnd",
            "required": false,
            "in": "query",
            "description": "This will include calls with a createdAt timestamp less than the specified value.\n\nIf not provided, the default value will be the current timestamp.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metrics"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/voice-library/{provider}": {
      "get": {
        "operationId": "VoiceLibraryController_voiceGetByProvider",
        "summary": "Get voices in Voice Library by Providers",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "11labs",
                "playht",
                "rime-ai",
                "deepgram",
                "openai",
                "azure",
                "lmnt",
                "neets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceLibrary"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Voice Library"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/voice-library/sync/{provider}": {
      "post": {
        "operationId": "VoiceLibraryController_voiceLibrarySyncByProvider",
        "summary": "List Preset Voices by Providers",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "11labs",
                "playht",
                "rime-ai",
                "deepgram",
                "openai",
                "azure",
                "lmnt",
                "neets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceLibrary"
                  }
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceLibrary"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Voice Library"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Vapi API",
    "description": "API for building voice assistants",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "description": "Proxy server",
      "url": "https://vapi.dataman.ai"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "Bearer",
        "type": "http",
        "description": "Retrieve your key from [Dashboard](dashboard.vapi.ai)."
      }
    },
    "schemas": {
      "DeepgramVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "deepgram"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "asteria",
                  "luna",
                  "stella",
                  "athena",
                  "hera",
                  "orion",
                  "arcas",
                  "perseus",
                  "angus",
                  "orpheus",
                  "helios",
                  "zeus"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "Deepgram Voice ID"
              }
            ]
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "OpenAIMessage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "enum": [
              "assistant",
              "function",
              "user",
              "system"
            ]
          },
          "function_call": {
            "type": "object"
          },
          "tool_calls": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "content",
          "role"
        ]
      },
      "JsonSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "integer",
              "boolean",
              "array",
              "object"
            ]
          },
          "items": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "prefixItems": {
            "type": "object",
            "description": "This is an array of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "contains": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "properties": {
            "type": "object",
            "description": "This is a map of string to JsonSchema. However, Swagger doesn't support circular references."
          },
          "patternProperties": {
            "type": "object",
            "description": "This is a map of string to JsonSchema objects. However, Swagger doesn't support circular references."
          },
          "additionalProperties": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "dependentSchemas": {
            "type": "object",
            "description": "This is a map of string to JsonSchema objects. However, Swagger doesn't support circular references."
          },
          "propertyNames": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "unevaluatedProperties": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "const": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "not": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "oneOf": {
            "type": "object",
            "description": "This is an array of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "anyOf": {
            "type": "object",
            "description": "This is an array of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "allOf": {
            "type": "object",
            "description": "This is an array of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "if": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "then": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "else": {
            "type": "object",
            "description": "This is of type JsonSchema. However, Swagger doesn't support circular references."
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "multipleOf": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMaximum": {
            "type": "number"
          },
          "minimum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number",
            "minimum": 0
          },
          "pattern": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "maxItems": {
            "type": "number"
          },
          "minItems": {
            "type": "number",
            "minimum": 0
          },
          "minContains": {
            "type": "number"
          },
          "maxContains": {
            "type": "number"
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number",
            "minimum": 0
          },
          "required": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "dependentRequired": {
            "type": "object"
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "$id": {
            "type": "string"
          },
          "$ref": {
            "type": "string"
          },
          "$schema": {
            "type": "string"
          },
          "$comment": {
            "type": "string"
          },
          "default": {
            "type": "object"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "readOnly": {
            "type": "boolean"
          },
          "writeOnly": {
            "type": "boolean"
          },
          "contentEncoding": {
            "type": "string"
          },
          "contentMediaType": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenAIFunctionParameters": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "This must be set to 'object'. It instructs the model to return a JSON object containing the function call properties.",
            "enum": [
              "object"
            ]
          },
          "properties": {
            "type": "object",
            "description": "This provides a description of the properties required by the function.\nJSON Schema can be used to specify expectations for each property.\nRefer to [this doc](https://ajv.js.org/json-schema.html#json-data-type) for a comprehensive guide on JSON Schema.",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonSchema"
            }
          },
          "required": {
            "description": "This specifies the properties that are required by the function.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "OpenAIFunction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the the name of the function to be called.\n\nMust be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.",
            "maxLength": 64,
            "pattern": "/^[a-zA-Z0-9_-]{1,64}$/"
          },
          "async": {
            "type": "boolean",
            "description": "Setting async: true will cause the function to be called asynchronously, meaning that the Assistant will not wait for the function to return before continuing."
          },
          "description": {
            "type": "string",
            "description": "This is the description of what the function does, used by the AI to choose when and how to call the function.",
            "maxLength": 1000
          },
          "parameters": {
            "description": "These are the parameters the functions accepts, described as a JSON Schema object.\n\nSee the [OpenAI guide](https://platform.openai.com/docs/guides/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema) for documentation about the format.\n\nOmitting parameters defines a function with an empty parameter list.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpenAIFunctionParameters"
              }
            ]
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the URL Vapi will communicate with via HTTP GET and POST Requests. This is used for retrieving context, function calling, and end-of-call reports.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org and the phoneNumber. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl"
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        },
        "required": [
          "name"
        ]
      },
      "TogetherAIModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "enum": [
              "together-ai"
            ]
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "AnyscaleModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "enum": [
              "anyscale"
            ]
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "OpenRouterModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "enum": [
              "openrouter"
            ]
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "PerplexityAIModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "enum": [
              "perplexity-ai"
            ]
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "DeepInfraModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "enum": [
              "deepinfra"
            ]
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "CustomLLMModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "description": "This is the provider that will be used for the model. Any service, including your own server, that is compatible with the OpenAI API can be used.",
            "enum": [
              "custom-llm"
            ]
          },
          "url": {
            "type": "string",
            "description": "These is the URL we'll use for the OpenAI client's `baseURL`. Ex. https://openrouter.ai/api/v1"
          },
          "urlRequestMetadataEnabled": {
            "type": "boolean",
            "description": "This sets whether the call object is sent in requests to the custom provider. Default is true."
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b"
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "url",
          "urlRequestMetadataEnabled",
          "model"
        ]
      },
      "GroqModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "model": {
            "type": "string",
            "description": "The key of the model from the custom provider. Ex. cognitivecomputations/dolphin-mixtral-8x7b",
            "enum": [
              "mixtral-8x7b-32768",
              "llama3-8b-8192",
              "llama3-70b-8192"
            ]
          },
          "provider": {
            "type": "string",
            "enum": [
              "groq"
            ]
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "model",
          "provider"
        ]
      },
      "AnthropicModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "model": {
            "type": "string",
            "description": "This is the Anthropic/Claude models that will be used.",
            "enum": [
              "claude-3-opus-20240229",
              "claude-3-sonnet-20240229",
              "claude-3-haiku-20240307"
            ]
          },
          "provider": {
            "type": "string",
            "enum": [
              "anthropic"
            ]
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "model",
          "provider"
        ]
      },
      "DeepgramTranscriber": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the transcription provider that will be used.",
            "enum": [
              "deepgram"
            ]
          },
          "model": {
            "description": "This is the Deepgram model that will be used. A list of models can be found here: https://developers.deepgram.com/docs/models-languages-overview",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "nova-2",
                  "nova-2-general",
                  "nova-2-meeting",
                  "nova-2-phonecall",
                  "nova-2-finance",
                  "nova-2-conversationalai",
                  "nova-2-voicemail",
                  "nova-2-video",
                  "nova-2-medical",
                  "nova-2-drivethru",
                  "nova-2-automotive"
                ]
              },
              {
                "type": "string"
              }
            ]
          },
          "language": {
            "type": "string",
            "description": "This is the language that will be set for the transcription. The list of languages Deepgram supports can be found here: https://developers.deepgram.com/docs/models-languages-overview",
            "enum": [
              "cs",
              "da",
              "da-DK",
              "de-CH",
              "nl",
              "en",
              "en-US",
              "en-AU",
              "en-GB",
              "en-NZ",
              "en-IN",
              "nl-BE",
              "fr",
              "fr-CA",
              "de",
              "el",
              "hi",
              "hi-Latn",
              "id",
              "it",
              "ja",
              "ko",
              "ko-KR",
              "no",
              "pl",
              "pt",
              "pt-BR",
              "ru",
              "es",
              "es-419",
              "sv",
              "sv-SE",
              "tr",
              "uk",
              "ja",
              "zh",
              "zh-CN",
              "zh-TW"
            ]
          },
          "smartFormat": {
            "type": "boolean",
            "description": "This will be use smart format option provided by Deepgram. It's default disabled because it can sometimes format numbers as times sometimes but it's getting better.",
            "example": false
          },
          "keywords": {
            "description": "These keywords are passed to the transcription model to help it pick up use-case specific words. Anything that may not be a common word, like your company name, should be added here.",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "/^\\p{L}[\\p{L}\\d]*(?::[+-]?\\d+)?$/u"
            }
          }
        },
        "required": [
          "provider"
        ]
      },
      "TalkscriberTranscriber": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the transcription provider that will be used.",
            "enum": [
              "talkscriber"
            ]
          },
          "model": {
            "type": "string",
            "description": "This is the model that will be used for the transcription.",
            "enum": [
              "whisper"
            ]
          },
          "language": {
            "type": "string",
            "description": "This is the language that will be set for the transcription. The list of languages Whisper supports can be found here: https://github.com/openai/whisper/blob/main/whisper/tokenizer.py",
            "enum": [
              "en",
              "zh",
              "de",
              "es",
              "ru",
              "ko",
              "fr",
              "ja",
              "pt",
              "tr",
              "pl",
              "ca",
              "nl",
              "ar",
              "sv",
              "it",
              "id",
              "hi",
              "fi",
              "vi",
              "he",
              "uk",
              "el",
              "ms",
              "cs",
              "ro",
              "da",
              "hu",
              "ta",
              "no",
              "th",
              "ur",
              "hr",
              "bg",
              "lt",
              "la",
              "mi",
              "ml",
              "cy",
              "sk",
              "te",
              "fa",
              "lv",
              "bn",
              "sr",
              "az",
              "sl",
              "kn",
              "et",
              "mk",
              "br",
              "eu",
              "is",
              "hy",
              "ne",
              "mn",
              "bs",
              "kk",
              "sq",
              "sw",
              "gl",
              "mr",
              "pa",
              "si",
              "km",
              "sn",
              "yo",
              "so",
              "af",
              "oc",
              "ka",
              "be",
              "tg",
              "sd",
              "gu",
              "am",
              "yi",
              "lo",
              "uz",
              "fo",
              "ht",
              "ps",
              "tk",
              "nn",
              "mt",
              "sa",
              "lb",
              "my",
              "bo",
              "tl",
              "mg",
              "as",
              "tt",
              "haw",
              "ln",
              "ha",
              "ba",
              "jw",
              "su",
              "yue"
            ]
          }
        },
        "required": [
          "provider"
        ]
      },
      "ElevenLabsVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "11labs"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used. Ensure the Voice is present in your 11Labs Voice Library.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "burt",
                  "marissa",
                  "andrea",
                  "sarah",
                  "phillip",
                  "steve",
                  "joseph",
                  "myra",
                  "paula",
                  "ryan",
                  "drew",
                  "paul",
                  "mrb",
                  "matilda",
                  "mark"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "11Labs Voice ID"
              }
            ]
          },
          "stability": {
            "type": "number",
            "description": "Defines the stability for voice settings.",
            "minimum": 0,
            "maximum": 1,
            "example": 0.5
          },
          "similarityBoost": {
            "type": "number",
            "description": "Defines the similarity boost for voice settings.",
            "minimum": 0,
            "maximum": 1,
            "example": 0.75
          },
          "style": {
            "type": "number",
            "description": "Defines the style for voice settings.",
            "minimum": 0,
            "maximum": 1,
            "example": 0
          },
          "useSpeakerBoost": {
            "type": "boolean",
            "description": "Defines the use speaker boost for voice settings.",
            "example": false
          },
          "optimizeStreamingLatency": {
            "type": "number",
            "description": "Defines the optimize streaming latency for voice settings.",
            "minimum": 0,
            "maximum": 4,
            "example": 4
          },
          "model": {
            "type": "string",
            "description": "This is the model that will be used. Defaults to 'eleven_multilingual_v2' if transcriber.language is non-English, otherwise 'eleven_turbo_v2'.",
            "enum": [
              "eleven_multilingual_v2",
              "eleven_turbo_v2",
              "eleven_monolingual_v1"
            ],
            "example": "eleven_turbo_v2"
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "OpenAIModel": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "This is the starting state for the conversation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIMessage"
            }
          },
          "provider": {
            "type": "string",
            "description": "This is the provider that will be used for the model.",
            "enum": [
              "openai"
            ]
          },
          "model": {
            "type": "string",
            "description": "This is the OpenAI model that will be used.",
            "enum": [
              "gpt-4-turbo",
              "gpt-4-turbo-2024-04-09",
              "gpt-4-turbo-preview",
              "gpt-4-0125-preview",
              "gpt-4-1106-preview",
              "gpt-4",
              "gpt-4-0613",
              "gpt-3.5-turbo",
              "gpt-3.5-turbo-0125",
              "gpt-3.5-turbo-1106",
              "gpt-3.5-turbo-16k",
              "gpt-3.5-turbo-0613",
              "gpt-4",
              "gpt-3.5-turbo"
            ]
          },
          "fallbackModels": {
            "type": "array",
            "enum": [
              "gpt-4-turbo",
              "gpt-4-turbo-2024-04-09",
              "gpt-4-turbo-preview",
              "gpt-4-0125-preview",
              "gpt-4-1106-preview",
              "gpt-4",
              "gpt-4-0613",
              "gpt-3.5-turbo",
              "gpt-3.5-turbo-0125",
              "gpt-3.5-turbo-1106",
              "gpt-3.5-turbo-16k",
              "gpt-3.5-turbo-0613",
              "gpt-4",
              "gpt-3.5-turbo"
            ],
            "example": [
              "gpt-4-0125-preview",
              "gpt-4-0613"
            ],
            "items": {
              "type": "string",
              "enum": [
                "gpt-4-turbo",
                "gpt-4-turbo-2024-04-09",
                "gpt-4-turbo-preview",
                "gpt-4-0125-preview",
                "gpt-4-1106-preview",
                "gpt-4",
                "gpt-4-0613",
                "gpt-3.5-turbo",
                "gpt-3.5-turbo-0125",
                "gpt-3.5-turbo-1106",
                "gpt-3.5-turbo-16k",
                "gpt-3.5-turbo-0613",
                "gpt-4",
                "gpt-3.5-turbo"
              ]
            }
          },
          "semanticCachingEnabled": {
            "type": "boolean",
            "example": true
          },
          "temperature": {
            "type": "number",
            "description": "This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.",
            "minimum": 0,
            "maximum": 2
          },
          "functions": {
            "description": "These are the functions that the assistant can execute during the call.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAIFunction"
            }
          },
          "maxTokens": {
            "type": "number",
            "description": "This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.",
            "minimum": 50,
            "maximum": 1000
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "PlayHTVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "playht"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "jennifer",
                  "melissa",
                  "will",
                  "chris",
                  "matt",
                  "jack",
                  "ruby",
                  "davis",
                  "donna",
                  "michael"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "PlayHT Voice ID"
              }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0.1,
            "maximum": 5,
            "example": null
          },
          "temperature": {
            "type": "number",
            "description": "A floating point number between 0, exclusive, and 2, inclusive. If equal to null or not provided, the model's default temperature will be used. The temperature parameter controls variance. Lower temperatures result in more predictable results, higher temperatures allow each run to vary more, so the voice may sound less like the baseline voice.",
            "minimum": 0.1,
            "maximum": 2,
            "example": null
          },
          "emotion": {
            "type": "string",
            "description": "An emotion to be applied to the speech.",
            "enum": [
              "female_happy",
              "female_sad",
              "female_angry",
              "female_fearful",
              "female_disgust",
              "female_surprised",
              "male_happy",
              "male_sad",
              "male_angry",
              "male_fearful",
              "male_disgust",
              "male_surprised"
            ],
            "example": null
          },
          "voiceGuidance": {
            "type": "number",
            "description": "A number between 1 and 6. Use lower numbers to reduce how unique your chosen voice will be compared to other voices.",
            "minimum": 1,
            "maximum": 6,
            "example": null
          },
          "styleGuidance": {
            "type": "number",
            "description": "A number between 1 and 30. Use lower numbers to to reduce how strong your chosen emotion will be. Higher numbers will create a very emotional performance.",
            "minimum": 1,
            "maximum": 30,
            "example": null
          },
          "textGuidance": {
            "type": "number",
            "description": "A number between 1 and 2. This number influences how closely the generated speech adheres to the input text. Use lower values to create more fluid speech, but with a higher chance of deviating from the input text. Higher numbers will make the generated speech more accurate to the input text, ensuring that the words spoken align closely with the provided text.",
            "minimum": 1,
            "maximum": 2,
            "example": null
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "RimeAIVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "rime-ai"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "abbie",
                  "allison",
                  "ally",
                  "alona",
                  "amber",
                  "ana",
                  "antoine",
                  "armon",
                  "brenda",
                  "brittany",
                  "carol",
                  "colin",
                  "courtney",
                  "elena",
                  "elliot",
                  "eva",
                  "geoff",
                  "gerald",
                  "hank",
                  "helen",
                  "hera",
                  "jen",
                  "joe",
                  "joy",
                  "juan",
                  "kendra",
                  "kendrick",
                  "kenneth",
                  "kevin",
                  "kris",
                  "linda",
                  "madison",
                  "marge",
                  "marina",
                  "marissa",
                  "marta",
                  "maya",
                  "nicholas",
                  "nyles",
                  "phil",
                  "reba",
                  "rex",
                  "rick",
                  "ritu",
                  "rob",
                  "rodney",
                  "rohan",
                  "rosco",
                  "samantha",
                  "sandy",
                  "selena",
                  "seth",
                  "sharon",
                  "stan",
                  "tamra",
                  "tanya",
                  "tibur",
                  "tj",
                  "tyler",
                  "viv",
                  "yadira"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "RimeAI Voice ID"
              }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0.1,
            "example": null
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "OpenAIVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "openai"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "enum": [
              "alloy",
              "echo",
              "fable",
              "onyx",
              "nova",
              "shimmer"
            ],
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "alloy",
                  "echo",
                  "fable",
                  "onyx",
                  "nova",
                  "shimmer"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "OpenAI Voice ID"
              }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0.25,
            "maximum": 4,
            "example": null
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "AzureVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "azure"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "andrew",
                  "brian",
                  "emma"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "Azure Voice ID"
              }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0.5,
            "maximum": 2
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "LMNTVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "lmnt"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "lily",
                  "daniel"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "LMNT Voice ID"
              }
            ]
          },
          "speed": {
            "type": "number",
            "description": "This is the speed multiplier that will be used.",
            "minimum": 0.25,
            "maximum": 2,
            "example": null
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "NeetsVoice": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "neets"
            ]
          },
          "voiceId": {
            "description": "This is the provider-specific ID that will be used.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "lily",
                  "daniel"
                ],
                "title": "Preset Voice Options"
              },
              {
                "type": "string",
                "title": "Neets Voice ID"
              }
            ]
          }
        },
        "required": [
          "provider",
          "voiceId"
        ]
      },
      "ForwardingPhoneNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "This is the number to forward to. Pass one of `number` or `sipUri`."
          },
          "sipUri": {
            "type": "string",
            "description": "This is the SIP URI to forward to. Pass one of `number` or `sipUri`."
          },
          "message": {
            "type": "string",
            "description": "This is the message that the assistant will say when the call is forwarded to this number."
          }
        }
      },
      "CreateAssistantDTO": {
        "type": "object",
        "properties": {
          "transcriber": {
            "description": "These are the options for the assistant's transcriber.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeepgramTranscriber",
                "title": "DeepgramTranscriber"
              },
              {
                "$ref": "#/components/schemas/TalkscriberTranscriber",
                "title": "TalkscriberTranscriber"
              }
            ]
          },
          "model": {
            "description": "These are the options for the assistant's LLM.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenAIModel",
                "title": "OpenAIModel"
              },
              {
                "$ref": "#/components/schemas/TogetherAIModel",
                "title": "TogetherAIModel"
              },
              {
                "$ref": "#/components/schemas/AnyscaleModel",
                "title": "AnyscaleModel"
              },
              {
                "$ref": "#/components/schemas/OpenRouterModel",
                "title": "OpenRouterModel"
              },
              {
                "$ref": "#/components/schemas/PerplexityAIModel",
                "title": "PerplexityAIModel"
              },
              {
                "$ref": "#/components/schemas/DeepInfraModel",
                "title": "DeepInfraModel"
              },
              {
                "$ref": "#/components/schemas/GroqModel",
                "title": "GroqModel"
              },
              {
                "$ref": "#/components/schemas/AnthropicModel",
                "title": "AnthropicModel"
              },
              {
                "$ref": "#/components/schemas/CustomLLMModel",
                "title": "CustomLLMModel"
              }
            ]
          },
          "voice": {
            "description": "These are the options for the assistant's voice.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AzureVoice",
                "title": "AzureVoice"
              },
              {
                "$ref": "#/components/schemas/ElevenLabsVoice",
                "title": "ElevenLabsVoice"
              },
              {
                "$ref": "#/components/schemas/PlayHTVoice",
                "title": "PlayHTVoice"
              },
              {
                "$ref": "#/components/schemas/RimeAIVoice",
                "title": "RimeAIVoice"
              },
              {
                "$ref": "#/components/schemas/DeepgramVoice",
                "title": "DeepgramVoice"
              },
              {
                "$ref": "#/components/schemas/OpenAIVoice",
                "title": "OpenAIVoice"
              },
              {
                "$ref": "#/components/schemas/LMNTVoice",
                "title": "LMNTVoice"
              },
              {
                "$ref": "#/components/schemas/NeetsVoice",
                "title": "NeetsVoice"
              }
            ],
            "default": {
              "provider": "playht",
              "voiceId": "jennifer"
            }
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number to forward to if assistant runs into issues.",
            "example": null
          },
          "voicemailDetectionTypes": {
            "type": "array",
            "description": "These are the AMD messages from Twilio that are considered as voicemail. Default is ['machine_end_beep', 'machine_end_silence', 'machine_end_other'].",
            "enum": [
              "machine_start",
              "human",
              "fax",
              "unknown",
              "machine_end_beep",
              "machine_end_silence",
              "machine_end_other"
            ],
            "example": [
              "machine_end_beep",
              "machine_end_silence",
              "machine_end_other"
            ],
            "items": {
              "type": "string",
              "enum": [
                "machine_start",
                "human",
                "fax",
                "unknown",
                "machine_end_beep",
                "machine_end_silence",
                "machine_end_other"
              ]
            }
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant's calls are recorded. Defaults to true.",
            "example": true
          },
          "endCallFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will be able to hang up the call. Defaults to false.",
            "example": false
          },
          "dialKeypadFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant can dial digits on the keypad. Defaults to false.",
            "default": null
          },
          "hipaaEnabled": {
            "type": "boolean",
            "description": "When this is enabled, no logs, recordings, or transcriptions will be stored. At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.",
            "example": false
          },
          "clientMessages": {
            "type": "array",
            "description": "These are the messages that will be sent to the Client SDKs. Default is ['transcript', 'hang', 'function-call', 'speech-update', 'metadata', 'conversation-update']",
            "enum": [
              "status-update",
              "speech-update",
              "transcript",
              "hang",
              "function-call",
              "metadata",
              "conversation-update"
            ],
            "example": [
              "transcript",
              "hang",
              "function-call",
              "speech-update",
              "metadata",
              "conversation-update"
            ],
            "items": {
              "type": "string",
              "enum": [
                "status-update",
                "speech-update",
                "transcript",
                "hang",
                "function-call",
                "metadata",
                "conversation-update"
              ]
            }
          },
          "serverMessages": {
            "type": "array",
            "description": "These are the messages that will be sent to your Server URL. Default is ['end-of-call-report', 'status-update', 'hang', 'function-call']",
            "enum": [
              "status-update",
              "transcript",
              "hang",
              "function-call",
              "end-of-call-report",
              "conversation-update",
              "phone-call-control"
            ],
            "example": [
              "end-of-call-report",
              "status-update",
              "hang",
              "function-call"
            ],
            "items": {
              "type": "string",
              "enum": [
                "status-update",
                "transcript",
                "hang",
                "function-call",
                "end-of-call-report",
                "conversation-update",
                "phone-call-control"
              ]
            }
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "description": "How many seconds of silence to wait before ending the call. Defaults to 30.",
            "minimum": 10,
            "maximum": 600,
            "example": 30
          },
          "responseDelaySeconds": {
            "type": "number",
            "description": "The minimum number of seconds after user speech to wait before the assistant starts speaking. Defaults to 0.4.",
            "minimum": 0,
            "maximum": 2,
            "example": 0.4
          },
          "llmRequestDelaySeconds": {
            "type": "number",
            "description": "The minimum number of seconds to wait after punctuation before sending a request to the LLM. Defaults to 0.1.",
            "minimum": 0,
            "maximum": 3,
            "example": 0.1
          },
          "numWordsToInterruptAssistant": {
            "type": "number",
            "description": "The number of words to wait for before interrupting the assistant. Words like \"stop\", \"actually\", \"no\", etc. will always interrupt immediately regardless of this value. Words like \"okay\", \"yeah\", \"right\" will never interrupt. Defaults to 2.",
            "minimum": 1,
            "maximum": 10,
            "example": 2
          },
          "maxDurationSeconds": {
            "type": "number",
            "description": "This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.",
            "minimum": 10,
            "maximum": 3600,
            "example": 1800
          },
          "backgroundSound": {
            "type": "string",
            "description": "This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.",
            "enum": [
              "off",
              "office"
            ],
            "example": "office"
          },
          "name": {
            "type": "string",
            "description": "This is the name of the assistant. This is just for your own reference.",
            "maxLength": 100
          },
          "forwardingPhoneNumbers": {
            "description": "You can provide a set of phone numbers to forward to. You'll want to tell the assistant when to use each of these numbers in the system prompt.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForwardingPhoneNumber"
            }
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).\n\nIf unspecified, it will wait for the user to speak.",
            "maxLength": 1000
          },
          "voicemailDetectionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant should detect voicemail. Defaults to true."
          },
          "voicemailMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if the call is forwarded to voicemail.\n\nIf unspecified, it will hang up.",
            "maxLength": 1000
          },
          "endCallMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if it ends the call.\n\nIf unspecified, it will hang up without saying anything.",
            "maxLength": 400
          },
          "endCallPhrases": {
            "description": "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 25,
              "minLength": 2
            }
          },
          "metadata": {
            "type": "object",
            "description": "This is the metadata associated with the call."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the URL Vapi will communicate with via HTTP GET and POST Requests. This is used for retrieving context, function calling, and end-of-call reports.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org and the phoneNumber. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl"
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        }
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "transcriber": {
            "description": "These are the options for the assistant's transcriber.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeepgramTranscriber",
                "title": "DeepgramTranscriber"
              },
              {
                "$ref": "#/components/schemas/TalkscriberTranscriber",
                "title": "TalkscriberTranscriber"
              }
            ]
          },
          "model": {
            "description": "These are the options for the assistant's LLM.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenAIModel",
                "title": "OpenAIModel"
              },
              {
                "$ref": "#/components/schemas/TogetherAIModel",
                "title": "TogetherAIModel"
              },
              {
                "$ref": "#/components/schemas/AnyscaleModel",
                "title": "AnyscaleModel"
              },
              {
                "$ref": "#/components/schemas/OpenRouterModel",
                "title": "OpenRouterModel"
              },
              {
                "$ref": "#/components/schemas/PerplexityAIModel",
                "title": "PerplexityAIModel"
              },
              {
                "$ref": "#/components/schemas/DeepInfraModel",
                "title": "DeepInfraModel"
              },
              {
                "$ref": "#/components/schemas/GroqModel",
                "title": "GroqModel"
              },
              {
                "$ref": "#/components/schemas/AnthropicModel",
                "title": "AnthropicModel"
              },
              {
                "$ref": "#/components/schemas/CustomLLMModel",
                "title": "CustomLLMModel"
              }
            ]
          },
          "voice": {
            "description": "These are the options for the assistant's voice.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AzureVoice",
                "title": "AzureVoice"
              },
              {
                "$ref": "#/components/schemas/ElevenLabsVoice",
                "title": "ElevenLabsVoice"
              },
              {
                "$ref": "#/components/schemas/PlayHTVoice",
                "title": "PlayHTVoice"
              },
              {
                "$ref": "#/components/schemas/RimeAIVoice",
                "title": "RimeAIVoice"
              },
              {
                "$ref": "#/components/schemas/DeepgramVoice",
                "title": "DeepgramVoice"
              },
              {
                "$ref": "#/components/schemas/OpenAIVoice",
                "title": "OpenAIVoice"
              },
              {
                "$ref": "#/components/schemas/LMNTVoice",
                "title": "LMNTVoice"
              },
              {
                "$ref": "#/components/schemas/NeetsVoice",
                "title": "NeetsVoice"
              }
            ],
            "default": {
              "provider": "playht",
              "voiceId": "jennifer"
            }
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number to forward to if assistant runs into issues.",
            "example": null
          },
          "voicemailDetectionTypes": {
            "type": "array",
            "description": "These are the AMD messages from Twilio that are considered as voicemail. Default is ['machine_end_beep', 'machine_end_silence', 'machine_end_other'].",
            "enum": [
              "machine_start",
              "human",
              "fax",
              "unknown",
              "machine_end_beep",
              "machine_end_silence",
              "machine_end_other"
            ],
            "example": [
              "machine_end_beep",
              "machine_end_silence",
              "machine_end_other"
            ],
            "items": {
              "type": "string",
              "enum": [
                "machine_start",
                "human",
                "fax",
                "unknown",
                "machine_end_beep",
                "machine_end_silence",
                "machine_end_other"
              ]
            }
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant's calls are recorded. Defaults to true.",
            "example": true
          },
          "endCallFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will be able to hang up the call. Defaults to false.",
            "example": false
          },
          "dialKeypadFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant can dial digits on the keypad. Defaults to false.",
            "default": null
          },
          "hipaaEnabled": {
            "type": "boolean",
            "description": "When this is enabled, no logs, recordings, or transcriptions will be stored. At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.",
            "example": false
          },
          "clientMessages": {
            "type": "array",
            "description": "These are the messages that will be sent to the Client SDKs. Default is ['transcript', 'hang', 'function-call', 'speech-update', 'metadata', 'conversation-update']",
            "enum": [
              "status-update",
              "speech-update",
              "transcript",
              "hang",
              "function-call",
              "metadata",
              "conversation-update"
            ],
            "example": [
              "transcript",
              "hang",
              "function-call",
              "speech-update",
              "metadata",
              "conversation-update"
            ],
            "items": {
              "type": "string",
              "enum": [
                "status-update",
                "speech-update",
                "transcript",
                "hang",
                "function-call",
                "metadata",
                "conversation-update"
              ]
            }
          },
          "serverMessages": {
            "type": "array",
            "description": "These are the messages that will be sent to your Server URL. Default is ['end-of-call-report', 'status-update', 'hang', 'function-call']",
            "enum": [
              "status-update",
              "transcript",
              "hang",
              "function-call",
              "end-of-call-report",
              "conversation-update",
              "phone-call-control"
            ],
            "example": [
              "end-of-call-report",
              "status-update",
              "hang",
              "function-call"
            ],
            "items": {
              "type": "string",
              "enum": [
                "status-update",
                "transcript",
                "hang",
                "function-call",
                "end-of-call-report",
                "conversation-update",
                "phone-call-control"
              ]
            }
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "description": "How many seconds of silence to wait before ending the call. Defaults to 30.",
            "minimum": 10,
            "maximum": 600,
            "example": 30
          },
          "responseDelaySeconds": {
            "type": "number",
            "description": "The minimum number of seconds after user speech to wait before the assistant starts speaking. Defaults to 0.4.",
            "minimum": 0,
            "maximum": 2,
            "example": 0.4
          },
          "llmRequestDelaySeconds": {
            "type": "number",
            "description": "The minimum number of seconds to wait after punctuation before sending a request to the LLM. Defaults to 0.1.",
            "minimum": 0,
            "maximum": 3,
            "example": 0.1
          },
          "numWordsToInterruptAssistant": {
            "type": "number",
            "description": "The number of words to wait for before interrupting the assistant. Words like \"stop\", \"actually\", \"no\", etc. will always interrupt immediately regardless of this value. Words like \"okay\", \"yeah\", \"right\" will never interrupt. Defaults to 2.",
            "minimum": 1,
            "maximum": 10,
            "example": 2
          },
          "maxDurationSeconds": {
            "type": "number",
            "description": "This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.",
            "minimum": 10,
            "maximum": 3600,
            "example": 1800
          },
          "backgroundSound": {
            "type": "string",
            "description": "This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.",
            "enum": [
              "off",
              "office"
            ],
            "example": "office"
          },
          "name": {
            "type": "string",
            "description": "This is the name of the assistant. This is just for your own reference.",
            "maxLength": 100
          },
          "forwardingPhoneNumbers": {
            "description": "You can provide a set of phone numbers to forward to. You'll want to tell the assistant when to use each of these numbers in the system prompt.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForwardingPhoneNumber"
            }
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).\n\nIf unspecified, it will wait for the user to speak.",
            "maxLength": 1000
          },
          "voicemailDetectionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant should detect voicemail. Defaults to true."
          },
          "voicemailMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if the call is forwarded to voicemail.\n\nIf unspecified, it will hang up.",
            "maxLength": 1000
          },
          "endCallMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if it ends the call.\n\nIf unspecified, it will hang up without saying anything.",
            "maxLength": 400
          },
          "endCallPhrases": {
            "description": "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 25,
              "minLength": 2
            }
          },
          "metadata": {
            "type": "object",
            "description": "This is the metadata associated with the call."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the URL Vapi will communicate with via HTTP GET and POST Requests. This is used for retrieving context, function calling, and end-of-call reports.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org and the phoneNumber. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl"
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the assistant."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this assistant belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateAssistantDTO": {
        "type": "object",
        "properties": {
          "transcriber": {
            "description": "These are the options for the assistant's transcriber.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeepgramTranscriber",
                "title": "DeepgramTranscriber"
              },
              {
                "$ref": "#/components/schemas/TalkscriberTranscriber",
                "title": "TalkscriberTranscriber"
              }
            ]
          },
          "model": {
            "description": "These are the options for the assistant's LLM.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenAIModel",
                "title": "OpenAIModel"
              },
              {
                "$ref": "#/components/schemas/TogetherAIModel",
                "title": "TogetherAIModel"
              },
              {
                "$ref": "#/components/schemas/AnyscaleModel",
                "title": "AnyscaleModel"
              },
              {
                "$ref": "#/components/schemas/OpenRouterModel",
                "title": "OpenRouterModel"
              },
              {
                "$ref": "#/components/schemas/PerplexityAIModel",
                "title": "PerplexityAIModel"
              },
              {
                "$ref": "#/components/schemas/DeepInfraModel",
                "title": "DeepInfraModel"
              },
              {
                "$ref": "#/components/schemas/GroqModel",
                "title": "GroqModel"
              },
              {
                "$ref": "#/components/schemas/AnthropicModel",
                "title": "AnthropicModel"
              },
              {
                "$ref": "#/components/schemas/CustomLLMModel",
                "title": "CustomLLMModel"
              }
            ]
          },
          "voice": {
            "description": "These are the options for the assistant's voice.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AzureVoice",
                "title": "AzureVoice"
              },
              {
                "$ref": "#/components/schemas/ElevenLabsVoice",
                "title": "ElevenLabsVoice"
              },
              {
                "$ref": "#/components/schemas/PlayHTVoice",
                "title": "PlayHTVoice"
              },
              {
                "$ref": "#/components/schemas/RimeAIVoice",
                "title": "RimeAIVoice"
              },
              {
                "$ref": "#/components/schemas/DeepgramVoice",
                "title": "DeepgramVoice"
              },
              {
                "$ref": "#/components/schemas/OpenAIVoice",
                "title": "OpenAIVoice"
              },
              {
                "$ref": "#/components/schemas/LMNTVoice",
                "title": "LMNTVoice"
              },
              {
                "$ref": "#/components/schemas/NeetsVoice",
                "title": "NeetsVoice"
              }
            ],
            "default": {
              "provider": "playht",
              "voiceId": "jennifer"
            }
          },
          "forwardingPhoneNumber": {
            "type": "string",
            "description": "This is the number to forward to if assistant runs into issues.",
            "example": null
          },
          "voicemailDetectionTypes": {
            "type": "array",
            "description": "These are the AMD messages from Twilio that are considered as voicemail. Default is ['machine_end_beep', 'machine_end_silence', 'machine_end_other'].",
            "enum": [
              "machine_start",
              "human",
              "fax",
              "unknown",
              "machine_end_beep",
              "machine_end_silence",
              "machine_end_other"
            ],
            "example": [
              "machine_end_beep",
              "machine_end_silence",
              "machine_end_other"
            ],
            "items": {
              "type": "string",
              "enum": [
                "machine_start",
                "human",
                "fax",
                "unknown",
                "machine_end_beep",
                "machine_end_silence",
                "machine_end_other"
              ]
            }
          },
          "recordingEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant's calls are recorded. Defaults to true.",
            "example": true
          },
          "endCallFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant will be able to hang up the call. Defaults to false.",
            "example": false
          },
          "dialKeypadFunctionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant can dial digits on the keypad. Defaults to false.",
            "default": null
          },
          "hipaaEnabled": {
            "type": "boolean",
            "description": "When this is enabled, no logs, recordings, or transcriptions will be stored. At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.",
            "example": false
          },
          "clientMessages": {
            "type": "array",
            "description": "These are the messages that will be sent to the Client SDKs. Default is ['transcript', 'hang', 'function-call', 'speech-update', 'metadata', 'conversation-update']",
            "enum": [
              "status-update",
              "speech-update",
              "transcript",
              "hang",
              "function-call",
              "metadata",
              "conversation-update"
            ],
            "example": [
              "transcript",
              "hang",
              "function-call",
              "speech-update",
              "metadata",
              "conversation-update"
            ],
            "items": {
              "type": "string",
              "enum": [
                "status-update",
                "speech-update",
                "transcript",
                "hang",
                "function-call",
                "metadata",
                "conversation-update"
              ]
            }
          },
          "serverMessages": {
            "type": "array",
            "description": "These are the messages that will be sent to your Server URL. Default is ['end-of-call-report', 'status-update', 'hang', 'function-call']",
            "enum": [
              "status-update",
              "transcript",
              "hang",
              "function-call",
              "end-of-call-report",
              "conversation-update",
              "phone-call-control"
            ],
            "example": [
              "end-of-call-report",
              "status-update",
              "hang",
              "function-call"
            ],
            "items": {
              "type": "string",
              "enum": [
                "status-update",
                "transcript",
                "hang",
                "function-call",
                "end-of-call-report",
                "conversation-update",
                "phone-call-control"
              ]
            }
          },
          "silenceTimeoutSeconds": {
            "type": "number",
            "description": "How many seconds of silence to wait before ending the call. Defaults to 30.",
            "minimum": 10,
            "maximum": 600,
            "example": 30
          },
          "responseDelaySeconds": {
            "type": "number",
            "description": "The minimum number of seconds after user speech to wait before the assistant starts speaking. Defaults to 0.4.",
            "minimum": 0,
            "maximum": 2,
            "example": 0.4
          },
          "llmRequestDelaySeconds": {
            "type": "number",
            "description": "The minimum number of seconds to wait after punctuation before sending a request to the LLM. Defaults to 0.1.",
            "minimum": 0,
            "maximum": 3,
            "example": 0.1
          },
          "numWordsToInterruptAssistant": {
            "type": "number",
            "description": "The number of words to wait for before interrupting the assistant. Words like \"stop\", \"actually\", \"no\", etc. will always interrupt immediately regardless of this value. Words like \"okay\", \"yeah\", \"right\" will never interrupt. Defaults to 2.",
            "minimum": 1,
            "maximum": 10,
            "example": 2
          },
          "maxDurationSeconds": {
            "type": "number",
            "description": "This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.",
            "minimum": 10,
            "maximum": 3600,
            "example": 1800
          },
          "backgroundSound": {
            "type": "string",
            "description": "This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.",
            "enum": [
              "off",
              "office"
            ],
            "example": "office"
          },
          "name": {
            "type": "string",
            "description": "This is the name of the assistant. This is just for your own reference.",
            "maxLength": 100
          },
          "forwardingPhoneNumbers": {
            "description": "You can provide a set of phone numbers to forward to. You'll want to tell the assistant when to use each of these numbers in the system prompt.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForwardingPhoneNumber"
            }
          },
          "firstMessage": {
            "type": "string",
            "description": "This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).\n\nIf unspecified, it will wait for the user to speak.",
            "maxLength": 1000
          },
          "voicemailDetectionEnabled": {
            "type": "boolean",
            "description": "This sets whether the assistant should detect voicemail. Defaults to true."
          },
          "voicemailMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if the call is forwarded to voicemail.\n\nIf unspecified, it will hang up.",
            "maxLength": 1000
          },
          "endCallMessage": {
            "type": "string",
            "description": "This is the message that the assistant will say if it ends the call.\n\nIf unspecified, it will hang up without saying anything.",
            "maxLength": 400
          },
          "endCallPhrases": {
            "description": "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 25,
              "minLength": 2
            }
          },
          "metadata": {
            "type": "object",
            "description": "This is the metadata associated with the call."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the URL Vapi will communicate with via HTTP GET and POST Requests. This is used for retrieving context, function calling, and end-of-call reports.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org and the phoneNumber. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl"
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        }
      },
      "CostBreakdown": {
        "type": "object",
        "properties": {
          "transport": {
            "type": "number",
            "description": "This is the cost of the transport provider, like Twilio or Vonage."
          },
          "stt": {
            "type": "number",
            "description": "This is the cost of the speech-to-text service."
          },
          "llm": {
            "type": "number",
            "description": "This is the cost of the language model."
          },
          "tts": {
            "type": "number",
            "description": "This is the cost of the text-to-speech service."
          },
          "vapi": {
            "type": "number",
            "description": "This is the cost of Vapi."
          },
          "total": {
            "type": "number",
            "description": "This is the total cost of the call."
          },
          "llmPromptTokens": {
            "type": "number",
            "description": "This is the LLM prompt tokens used for the call."
          },
          "llmCompletionTokens": {
            "type": "number",
            "description": "This is the LLM completion tokens used for the call."
          },
          "ttsCharacters": {
            "type": "number",
            "description": "This is the TTS characters used for the call."
          }
        }
      },
      "PhoneCallTwilioDetails": {
        "type": "object",
        "properties": {
          "statusCallbackEvent": {
            "type": "string",
            "description": "This is the status events to subscribe to",
            "enum": [
              "initiated",
              "ringing",
              "answered",
              "completed"
            ]
          },
          "machineDetection": {
            "type": "string",
            "description": "This is whether to detect if a human, answering machine, or fax has picked up the call.",
            "enum": [
              "Enable",
              "DetectMessageEnd"
            ]
          },
          "to": {
            "type": "string",
            "description": "This is the phone number, SIP address, or client identifier to call."
          },
          "from": {
            "type": "string",
            "description": "This is the phone number or client identifier to use as the caller id."
          },
          "twiml": {
            "type": "string",
            "description": "This is TwiML instructions for the call"
          },
          "statusCallback": {
            "type": "string",
            "description": "This is the URL to send status events to"
          },
          "asyncAmd": {
            "type": "string",
            "description": "This is whether to do the machine detection asyncronously or synchronously"
          },
          "asyncAmdStatusCallback": {
            "type": "string",
            "description": "This is the URL to send the asyncronous machine detection status events to"
          },
          "record": {
            "type": "boolean",
            "description": "This is whether to record the call"
          }
        },
        "required": [
          "to",
          "from"
        ]
      },
      "CreateCustomerDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "This is the number of the customer."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the customer. This is just for your own reference.",
            "maxLength": 40
          },
          "extension": {
            "type": "string",
            "description": "This is the extension that will be dialed after the call is answered.",
            "maxLength": 30
          }
        }
      },
      "ImportTwilioPhoneNumberDTO": {
        "type": "object",
        "properties": {
          "twilioPhoneNumber": {
            "type": "string",
            "description": "These are the digits of the phone number you own on your Twilio."
          },
          "twilioAccountSid": {
            "type": "string",
            "description": "This is your Twilio Account SID that will be used to handle this phone number."
          },
          "twilioAuthToken": {
            "type": "string",
            "description": "This is the Twilio Auth Token that will be used to handle this phone number."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the server URL that will be used to handle this phone number.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl."
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        },
        "required": [
          "twilioPhoneNumber",
          "twilioAccountSid",
          "twilioAuthToken"
        ]
      },
      "Call": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "This is the type of call.",
            "enum": [
              "inboundPhoneCall",
              "outboundPhoneCall",
              "webCall"
            ]
          },
          "phoneCallProvider": {
            "type": "string",
            "description": "This is the provider of the call.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "enum": [
              "twilio",
              "vonage"
            ]
          },
          "phoneCallTransport": {
            "type": "string",
            "description": "This is the transport of the phone call.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "enum": [
              "sip",
              "pstn"
            ]
          },
          "status": {
            "type": "string",
            "description": "This is the status of the call.",
            "enum": [
              "queued",
              "ringing",
              "in-progress",
              "forwarding",
              "ended"
            ]
          },
          "endedReason": {
            "type": "string",
            "description": "This is the explanation for how the call ended.",
            "enum": [
              "assistant-error",
              "assistant-not-found",
              "db-error",
              "no-server-available",
              "pipeline-error-extra-function-failed",
              "pipeline-error-first-message-failed",
              "pipeline-error-function-filler-failed",
              "pipeline-error-function-failed",
              "pipeline-error-openai-llm-failed",
              "pipeline-error-azure-openai-llm-failed",
              "pipeline-error-together-ai-llm-failed",
              "pipeline-error-anyscale-llm-failed",
              "pipeline-error-openrouter-llm-failed",
              "pipeline-error-perplexity-ai-llm-failed",
              "pipeline-error-deepinfra-llm-failed",
              "pipeline-error-runpod-llm-failed",
              "pipeline-error-groq-llm-failed",
              "pipeline-error-anthropic-llm-failed",
              "pipeline-error-openai-voice-failed",
              "pipeline-error-deepgram-transcriber-failed",
              "pipeline-error-deepgram-voice-failed",
              "pipeline-error-eleven-labs-voice-failed",
              "pipeline-error-eleven-labs-voice-not-found",
              "pipeline-error-eleven-labs-quota-exceeded",
              "pipeline-error-playht-voice-failed",
              "pipeline-error-lmnt-voice-failed",
              "pipeline-error-azure-voice-failed",
              "pipeline-error-rime-ai-voice-failed",
              "pipeline-error-neets-voice-failed",
              "pipeline-no-available-llm-model",
              "server-shutdown",
              "twilio-failed-to-connect-call",
              "unknown-error",
              "vonage-disconnected",
              "vonage-failed-to-connect-call",
              "phone-call-provider-bypass-enabled-but-no-call-received",
              "assistant-not-invalid",
              "assistant-not-provided",
              "assistant-request-returned-error",
              "assistant-request-returned-invalid-assistant",
              "assistant-request-returned-no-assistant",
              "assistant-request-returned-forwarding-phone-number",
              "assistant-ended-call",
              "assistant-said-end-call-phrase",
              "assistant-forwarded-call",
              "assistant-join-timed-out",
              "customer-busy",
              "customer-ended-call",
              "customer-did-not-answer",
              "customer-did-not-give-microphone-permission",
              "exceeded-max-duration",
              "manually-canceled",
              "phone-call-provider-closed-websocket",
              "pipeline-error-custom-llm-llm-failed",
              "silence-timed-out",
              "voicemail",
              "vonage-rejected"
            ]
          },
          "maxDurationSeconds": {
            "type": "number",
            "description": "This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.",
            "minimum": 10,
            "maximum": 3600,
            "example": 1800
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the call."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this call belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was last updated."
          },
          "startedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was started."
          },
          "endedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the call was ended."
          },
          "cost": {
            "type": "number",
            "description": "This is the cost of the call in USD."
          },
          "costBreakdown": {
            "description": "This is the cost of the call in USD.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CostBreakdown"
              }
            ]
          },
          "transcript": {
            "type": "string",
            "description": "This is the transcript of the call."
          },
          "recordingUrl": {
            "type": "string",
            "description": "This is the URL of the recording of the call."
          },
          "stereoRecordingUrl": {
            "type": "string",
            "description": "This is the URL of the recording of the call in two channels."
          },
          "summary": {
            "type": "string",
            "description": "This is the summary of the call."
          },
          "messages": {
            "description": "These are the messages that were spoken during the call.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "phoneCallProviderId": {
            "type": "string",
            "description": "The ID of the call as provided by the phone number service. callSid in Twilio. conversationUuid in Vonage.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "phoneCallProviderBypassEnabled": {
            "type": "boolean",
            "description": "If enabled, prevents Vapi from initiating calls directly. Defaults to disabled.\nSuitable for external call handling, such as with Twilio Studio Flow, with integration details provided in `phoneCallProviderDetails`.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` types."
          },
          "phoneCallProviderDetails": {
            "description": "This is the phone call provider details to bridge the assistant into the external call. Only filled if `phoneCallProviderBypassEnabled` is true.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` types.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCallTwilioDetails"
              }
            ]
          },
          "webCallUrl": {
            "type": "string",
            "description": "This is the URL of the call that the assistant will join.\n\nOnly relevant for `webCall` type."
          },
          "webCallSipUri": {
            "type": "string",
            "description": "This is the SIP URI of the call that the assistant will join.\n\nOnly relevant for `webCall` type."
          },
          "forwardedPhoneNumber": {
            "type": "string",
            "description": "This is the phone number that the call was forwarded to."
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateAssistantDTO"
              }
            ]
          },
          "customerId": {
            "type": "string",
            "description": "This is the customer that will be called. To call a transient customer , use `customer` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "customer": {
            "description": "This is the customer that will be called. To call an existing customer, use `customerId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateCustomerDTO"
              }
            ]
          },
          "phoneNumberId": {
            "type": "string",
            "description": "This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "phoneNumber": {
            "description": "This is the phone number that will be used for the call. To use an existing number, use `phoneNumberId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportTwilioPhoneNumberDTO"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "This is the metadata associated with the call."
          }
        },
        "required": [
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateOutboundCallDTO": {
        "type": "object",
        "properties": {
          "maxDurationSeconds": {
            "type": "number",
            "description": "This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.",
            "minimum": 10,
            "maximum": 3600,
            "example": 1800
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          },
          "assistant": {
            "description": "This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateAssistantDTO"
              }
            ]
          },
          "customerId": {
            "type": "string",
            "description": "This is the customer that will be called. To call a transient customer , use `customer` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "customer": {
            "description": "This is the customer that will be called. To call an existing customer, use `customerId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateCustomerDTO"
              }
            ]
          },
          "phoneNumberId": {
            "type": "string",
            "description": "This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type."
          },
          "phoneNumber": {
            "description": "This is the phone number that will be used for the call. To use an existing number, use `phoneNumberId` instead.\n\nOnly relevant for `outboundPhoneCall` and `inboundPhoneCall` type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportTwilioPhoneNumberDTO"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "This is the metadata associated with the call."
          }
        }
      },
      "TwilioCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "twilio"
            ]
          },
          "authToken": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          },
          "accountSid": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "authToken",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "accountSid"
        ]
      },
      "DeepgramCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepgram"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "ElevenLabsCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "11labs"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "PlayHTCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "playht"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "userId"
        ]
      },
      "RimeAICredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "rime-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "OpenAICredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "TogetherAICredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "together-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AnyscaleCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "anyscale"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "OpenRouterCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openrouter"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "PerplexityAICredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "perplexity-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeepInfraCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepinfra"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CustomLLMCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "custom-llm"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "RunpodCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "runpod"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "GroqCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "groq"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AnthropicCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "anthropic"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          }
        },
        "required": [
          "provider",
          "apiKey",
          "id",
          "orgId",
          "createdAt",
          "updatedAt"
        ]
      },
      "VonageCredential": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "vonage"
            ]
          },
          "apiSecret": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the credential."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this credential belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the credential was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the assistant was last updated."
          },
          "vonageApplicationId": {
            "type": "string",
            "description": "This is the Vonage Application ID for the credential.\n\nOnly relevant for Vonage credentials."
          },
          "vonageApplicationPrivateKey": {
            "type": "string",
            "description": "This is the Vonage Application Private Key for the credential.\n\nOnly relevant for Vonage credentials."
          },
          "apiKey": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "apiSecret",
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "vonageApplicationId",
          "vonageApplicationPrivateKey",
          "apiKey"
        ]
      },
      "CreateTwilioCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "twilio"
            ]
          },
          "authToken": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "accountSid": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "authToken",
          "accountSid"
        ]
      },
      "CreateDeepgramCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepgram"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateOpenAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateTogetherAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "together-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateAnyscaleCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "anyscale"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateOpenRouterCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openrouter"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreatePerplexityAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "perplexity-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateDeepInfraCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepinfra"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateCustomLLMCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "custom-llm"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateElevenLabsCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "11labs"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreatePlayHTCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "playht"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "apiKey",
          "userId"
        ]
      },
      "CreateRimeAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "rime-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateRunpodCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "runpod"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateGroqCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "groq"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateAnthropicCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "anthropic"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "CreateVonageCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "vonage"
            ]
          },
          "apiSecret": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "apiKey": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "apiSecret",
          "apiKey"
        ]
      },
      "UpdateTwilioCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "twilio"
            ]
          },
          "authToken": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "accountSid": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "authToken",
          "accountSid"
        ]
      },
      "UpdateDeepgramCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepgram"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateOpenAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateTogetherAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "together-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateAnyscaleCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "anyscale"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateOpenRouterCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "openrouter"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdatePerplexityAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "perplexity-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateDeepInfraCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "deepinfra"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateCustomLLMCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "custom-llm"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateElevenLabsCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "11labs"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdatePlayHTCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "playht"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "apiKey",
          "userId"
        ]
      },
      "UpdateRimeAICredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "rime-ai"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateRunpodCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "runpod"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateGroqCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "groq"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateAnthropicCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "anthropic"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "This is not returned in the API."
          }
        },
        "required": [
          "provider",
          "apiKey"
        ]
      },
      "UpdateVonageCredentialDTO": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "vonage"
            ]
          },
          "apiSecret": {
            "type": "string",
            "description": "This is not returned in the API."
          },
          "apiKey": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "apiSecret",
          "apiKey"
        ]
      },
      "BuyPhoneNumberDTO": {
        "type": "object",
        "properties": {
          "areaCode": {
            "type": "string",
            "description": "This is the area code of the phone number to purchase.",
            "minLength": 3,
            "maxLength": 3
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the server URL that will be used to handle this phone number.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl."
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        },
        "required": [
          "areaCode"
        ]
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the unique identifier for the phone number."
          },
          "orgId": {
            "type": "string",
            "description": "This is the unique identifier for the org that this phone number belongs to."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the phone number was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This is the ISO 8601 date-time string of when the phone number was last updated."
          },
          "stripeSubscriptionId": {
            "type": "string",
            "description": "This is the subscription for the phone number."
          },
          "stripeSubscriptionStatus": {
            "type": "string",
            "description": "This is the subscription's status."
          },
          "stripeSubscriptionCurrentPeriodStart": {
            "format": "date-time",
            "type": "string",
            "description": "This is the subscription's current period start."
          },
          "number": {
            "type": "string",
            "description": "These are the digits of the phone number."
          },
          "twilioAccountSid": {
            "type": "string",
            "description": "This is the Twilio Account SID for the phone number.\n\nThis is for numbers not bought on Vapi."
          },
          "twilioAuthToken": {
            "type": "string",
            "description": "This is the Twilio Auth Token for the phone number.\n\nThis is for numbers not bought on Vapi."
          },
          "credentialId": {
            "type": "string",
            "description": "This is the credential that will be used to handle this phone number.\n\nThis is for numbers not bought on Vapi."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the server URL that will be used to handle this phone number.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl."
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        },
        "required": [
          "id",
          "orgId",
          "createdAt",
          "updatedAt",
          "number"
        ]
      },
      "ImportVonagePhoneNumberDTO": {
        "type": "object",
        "properties": {
          "vonagePhoneNumber": {
            "type": "string",
            "description": "These are the digits of the phone number you own on your Vonage."
          },
          "credentialId": {
            "type": "string",
            "description": "This is the credential that will be used to handle this phone number.\n\nYou can add the Vonage credentials in the Provider Keys page on the dashboard to get the credentialId."
          },
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the server URL that will be used to handle this phone number.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl."
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        },
        "required": [
          "vonagePhoneNumber",
          "credentialId"
        ]
      },
      "UpdatePhoneNumberDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This is the name of the phone number. This is just for your own reference.",
            "maxLength": 40
          },
          "assistantId": {
            "type": "string",
            "nullable": true,
            "description": "This is the assistant that will be used for incoming calls to this phone number.\n\nIf this is not set, then the phone number will not handle incoming calls."
          },
          "serverUrl": {
            "type": "string",
            "description": "This is the server URL that will be used to handle this phone number.\n\nAll requests will be sent with the call object among other things relevant to that message. You can find more details in the Server URL documentation.\n\nThis overrides the serverUrl set on the org. Order of precedence: function.serverUrl > assistant.serverUrl > phoneNumber.serverUrl > org.serverUrl."
          },
          "serverUrlSecret": {
            "type": "string",
            "description": "This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.\n\nSame precendence logic as serverUrl."
          }
        }
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "rangeStart": {
            "type": "string"
          },
          "rangeEnd": {
            "type": "string"
          },
          "bill": {
            "type": "number"
          },
          "billWithinBillingLimit": {
            "type": "boolean"
          },
          "billDailyBreakdown": {
            "type": "object"
          },
          "callActive": {
            "type": "string"
          },
          "callActiveWithinConcurrencyLimit": {
            "type": "boolean"
          },
          "callMinutes": {
            "type": "string"
          },
          "callMinutesDailyBreakdown": {
            "type": "object"
          },
          "callMinutesAverage": {
            "type": "string"
          },
          "callMinutesAverageDailyBreakdown": {
            "type": "object"
          },
          "callCount": {
            "type": "string"
          },
          "callCountDailyBreakdown": {
            "type": "object"
          }
        },
        "required": [
          "orgId",
          "rangeStart",
          "rangeEnd",
          "bill",
          "billWithinBillingLimit",
          "billDailyBreakdown",
          "callActive",
          "callActiveWithinConcurrencyLimit",
          "callMinutes",
          "callMinutesDailyBreakdown",
          "callMinutesAverage",
          "callMinutesAverageDailyBreakdown",
          "callCount",
          "callCountDailyBreakdown"
        ]
      },
      "VoiceLibrary": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "object",
            "description": "This is the voice provider that will be used.",
            "enum": [
              "11labs",
              "playht",
              "rime-ai",
              "deepgram",
              "openai",
              "azure",
              "lmnt",
              "neets"
            ]
          },
          "providerId": {
            "type": "string",
            "description": "The ID of the voice provided by the provider."
          },
          "slug": {
            "type": "string",
            "description": "The unique slug of the voice."
          },
          "name": {
            "type": "string",
            "description": "The name of the voice."
          },
          "language": {
            "type": "string",
            "description": "The language of the voice."
          },
          "languageCode": {
            "type": "string",
            "description": "The language code of the voice."
          },
          "model": {
            "type": "string",
            "description": "The model of the voice."
          },
          "supportedModels": {
            "type": "string",
            "description": "The supported models of the voice."
          },
          "gender": {
            "type": "string",
            "description": "The gender of the voice.",
            "enum": [
              "male",
              "female"
            ]
          },
          "accent": {
            "type": "string",
            "description": "The accent of the voice."
          },
          "previewUrl": {
            "type": "string",
            "description": "The preview URL of the voice."
          },
          "credentialId": {
            "type": "string",
            "description": "The credential ID of the voice."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "The deletion status of the voice."
          },
          "id": {
            "type": "string",
            "description": "The unique identifier for the voice library."
          },
          "orgId": {
            "type": "string",
            "description": "The unique identifier for the organization that this voice library belongs to."
          },
          "isPublic": {
            "type": "boolean",
            "description": "The Public voice is shared accross all the organizations."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The ISO 8601 date-time string of when the voice library was created."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The ISO 8601 date-time string of when the voice library was last updated."
          }
        },
        "required": [
          "isDeleted",
          "id",
          "orgId",
          "isPublic",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  },
  "x-origin-servers": [
    {
      "url": "https://api.vapi.ai"
    }
  ]
}