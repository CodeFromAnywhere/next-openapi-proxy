{
  "openapi": "3.0.1",
  "info": {
    "title": "ConvertAPI",
    "description": "# High-Performance File Conversion API\nConvert Word, Excel, PowerPoint, HTML, PDF and Image formats with our powerful file conversion service.\nWe support more than [200 file types.]( https://www.convertapi.com/doc/file-formats)",
    "termsOfService": "https://www.convertapi.com/terms",
    "contact": {
      "url": "https://www.convertapi.com/support",
      "email": "support@convertapi.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v2"
  },
  "servers": [
    {
      "description": "Proxy server",
      "url": "https://openapi.actionschema.com/convertapi"
    }
  ],
  "paths": {
    "/upload": {
      "post": {
        "tags": [
          "File Server"
        ],
        "summary": "File upload to the ConvertAPI file server",
        "description": "When source files require multiple conversions, optimizing performance is possible by uploading the file once and then performing multiple conversions without the need for re-uploading.\nThe uploaded file is securely stored on the convertapi.com server for a maximum period of 3 hours and can be accessed through a unique secret URL with a UUID.\nIn conversion requests, the file can be referenced using the File ID, which is generated upon successful file upload.\n",
        "externalDocs": {
          "url": "https://www.convertapi.com/doc/upload"
        },
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "File name.\nRequired if the header field `content-disposition` is not set.\n",
            "schema": {
              "type": "string"
            },
            "example": "myfile.pdf"
          },
          {
            "name": "content-disposition",
            "in": "header",
            "description": "This header field is used to determine the file name.\n**Required** if query parameter `filename` is not set.\nQuery parameter `filename` overrides this parameter.\n",
            "schema": {
              "type": "string"
            },
            "example": "Content-Disposition: inline; filename=\"myfile.pdf\""
          },
          {
            "name": "fileId",
            "in": "query",
            "description": "Custom ID for the file that is uploaded. Lowercase alphanumeric character string.",
            "schema": {
              "$ref": "#/components/schemas/fileId"
            },
            "example": "25811safe8e61dd3f51ef00ee5f58b92"
          },
          {
            "name": "url",
            "in": "query",
            "description": "Remote file URL. The URL of the file you want to upload and store on the ConvertAPI file server.\nIf the file is accessible by the URL, it can be uploaded directly from its location by passing the URL instead of the file itself.\n",
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "example": "https://example.com/myfile.pdf"
          },
          {
            "name": "headername",
            "in": "query",
            "description": "Remote file request header field name (used exclusively in conjunction with the `url` parameter).",
            "schema": {
              "type": "string"
            },
            "example": "header-field-name"
          },
          {
            "name": "headervalue",
            "in": "query",
            "description": "Remote file request header field value (used exclusively in conjunction with the `url` and `headername` parameters).",
            "schema": {
              "type": "string"
            },
            "example": "Header field value"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The file to upload",
                    "format": "binary"
                  }
                }
              },
              "example": "There can be only one part with file data.\n```http\n[POST]\nhttps://v2.convertapi.com/upload \nContent-Type: multipart/form-data; boundary=----7MA4YWxkTrZu0gW\n\n------7MA4YWxkTrZu0gW\nContent-Disposition: form-data; name=\"file\"; filename=\"my_file.doc\"\n\n--FILE DATA--\n------7MA4YWxkTrZu0gW--\n```\n"
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              },
              "example": "```http\n[POST]\nhttps://v2.convertapi.com/upload \nContent-Disposition: inline; filename=\"my_file.doc\"\n\n--FILE DATA--\n```\n"
            }
          }
        },
        "responses": {
          "200": {
            "description": "The file to upload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "FileName": {
                      "type": "string",
                      "example": "myfile.docx"
                    },
                    "FileExt": {
                      "type": "string",
                      "example": "docx"
                    },
                    "FileSize": {
                      "type": "integer",
                      "format": "int32",
                      "example": "1026736"
                    },
                    "FileId": {
                      "type": "string",
                      "example": "9shcxkk4zvesuzl2xavmg9afqbr2ty62"
                    },
                    "Url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://v2.convertapi.com/d/9shcxkk4zvesuzl2xavmg9afqbr2ty62"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "format": "string",
                  "example": "9shcxkk4zvesuzl2xavmg9afqbr2ty62"
                }
              }
            }
          },
          "400": {
            "description": "File request with an invalid file ID"
          },
          "415": {
            "description": "The file type is not supported"
          },
          "500": {
            "description": "Unable to store or download remote file"
          }
        }
      }
    },
    "/d/{fileId}": {
      "get": {
        "tags": [
          "File Server"
        ],
        "summary": "File download from the ConvertAPI file server",
        "operationId": "download",
        "parameters": [
          {
            "$ref": "#/components/parameters/fileId"
          },
          {
            "name": "download",
            "in": "query",
            "description": "- `attachment` - download a file\n- `inline` - view file in a web browser\n",
            "schema": {
              "enum": [
                "attachment",
                "inline"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "content-disposition": {
                "$ref": "#/components/headers/content-disposition"
              },
              "file-name": {
                "$ref": "#/components/headers/file-name"
              },
              "file-ext": {
                "$ref": "#/components/headers/file-ext"
              },
              "file-size": {
                "$ref": "#/components/headers/file-size"
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "delete": {
        "tags": [
          "File Server"
        ],
        "summary": "Delete uploaded file",
        "description": "If the file is no longer required it can be deleted. Otherwise, it will be automatically deleted after 3 hours.",
        "parameters": [
          {
            "$ref": "#/components/parameters/fileId"
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfuly"
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "head": {
        "tags": [
          "File Server"
        ],
        "summary": "Get file information without receiving file",
        "parameters": [
          {
            "$ref": "#/components/parameters/fileId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "content-disposition": {
                "$ref": "#/components/headers/content-disposition"
              },
              "file-name": {
                "$ref": "#/components/headers/file-name"
              },
              "file-ext": {
                "$ref": "#/components/headers/file-ext"
              },
              "file-size": {
                "$ref": "#/components/headers/file-size"
              }
            }
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User information",
        "description": "The endpoint returns information about a user account.\nIt is helpful to check the account balance status and other data.\nThe /user endpoint can be authenticated only with a secret.\nThe token is not accepted.\n",
        "externalDocs": {
          "url": "https://www.convertapi.com/doc/user"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Active": {
                      "type": "boolean",
                      "description": "User can perform conversions"
                    },
                    "Email": {
                      "type": "string",
                      "description": "User email",
                      "example": "user@example.com"
                    },
                    "Secret": {
                      "type": "string",
                      "description": "Authentication secret",
                      "example": "1XKrszdaFZH33WTh"
                    },
                    "ApiKey": {
                      "type": "integer",
                      "description": "Authentication API key",
                      "format": "int64",
                      "example": 842679918
                    },
                    "ConversionsTotal": {
                      "type": "integer",
                      "description": "Plan conversion count",
                      "format": "int64",
                      "example": 5000
                    },
                    "ConversionsConsumed": {
                      "type": "integer",
                      "description": "Conversions consumed",
                      "format": "int64",
                      "example": 458
                    },
                    "SecondsLeft": {
                      "type": "integer",
                      "format": "int64",
                      "deprecated": true
                    },
                    "FullName": {
                      "type": "string",
                      "description": "User full name",
                      "example": "John Wick"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "secret": []
          }
        ]
      }
    },
    "/user/statistic": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Usage statistics information",
        "description": "The endpoint that returns information about your usage statistics based on the date range.",
        "externalDocs": {
          "url": "https://www.convertapi.com/doc/user"
        },
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Conversions from date",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2023-09-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Conversions to date",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2023-09-30"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Result": {
                        "type": "boolean",
                        "description": "Is conversion successful"
                      },
                      "CreatedAt": {
                        "type": "string",
                        "description": "Conversion time"
                      },
                      "ExecutionTime": {
                        "type": "integer",
                        "description": "Conversion duration",
                        "format": "int32"
                      },
                      "Converter": {
                        "type": "string",
                        "description": "File converter name"
                      },
                      "SourceFormat": {
                        "type": "string",
                        "description": "Source file format (docx, pdf, jpg etc.)"
                      },
                      "DestinationFormat": {
                        "type": "string",
                        "description": "Destination file format (docx, pdf, jpg etc.)"
                      },
                      "Ip": {
                        "type": "string",
                        "description": "File conversion request origin IP"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source file name"
                      },
                      "Error": {
                        "type": "string",
                        "description": "Conversion error message"
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        },
        "security": [
          {
            "secret": []
          }
        ]
      }
    },
    "/convert/ai/to/jpg": {
      "summary": "AI to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/ai-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ai/to/png": {
      "summary": "AI to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/ai-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ai/to/pnm": {
      "summary": "AI to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/ai-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ai/to/svg": {
      "summary": "AI to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/ai-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ai/to/tiff": {
      "summary": "AI to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/ai-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ai/to/webp": {
      "summary": "AI to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/ai-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/any/to/zip": {
      "summary": "ANY to ZIP File Conversion API",
      "description": "The API for creating ZIP archives. \n Read more about the converter here: https://www.convertapi.com/any-to-zip",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "CompressionLevel": {
                    "enum": [
                      "Optimal",
                      "Medium",
                      "Fastest",
                      "NoCompression"
                    ],
                    "type": "string",
                    "description": "Set compression level.\n * `Optimal` - Optimal\n * `Medium` - Medium\n * `Fastest` - Fastest\n * `NoCompression` - No Compression",
                    "default": "NoCompression"
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to protect archive."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/jpg": {
      "summary": "BMP to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/bmp-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/pdf": {
      "summary": "BMP to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/bmp-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/png": {
      "summary": "BMP to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/bmp-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/pnm": {
      "summary": "BMP to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/bmp-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/svg": {
      "summary": "BMP to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/bmp-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/tiff": {
      "summary": "BMP to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/bmp-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/bmp/to/webp": {
      "summary": "BMP to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/bmp-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/chm/to/jpg": {
      "summary": "CHM to JPG File Conversion API",
      "description": "The API for converting electronic books (e-book) to JPG images. \n Read more about the converter here: https://www.convertapi.com/chm-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/chm/to/pdf": {
      "summary": "CHM to PDF File Conversion API",
      "description": "The API for converting electronic books (e-book) to PDF files. \n Read more about the converter here: https://www.convertapi.com/chm-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/chm/to/png": {
      "summary": "CHM to PNG File Conversion API",
      "description": "The API for converting electronic books (e-book) to PNG images. \n Read more about the converter here: https://www.convertapi.com/chm-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/chm/to/tiff": {
      "summary": "CHM to TIFF File Conversion API",
      "description": "The API for converting electronic books (e-book) to TIFF images. \n Read more about the converter here: https://www.convertapi.com/chm-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/chm/to/webp": {
      "summary": "CHM to WEBP File Conversion API",
      "description": "The API for converting electronic books (e-book) to WEBP images. \n Read more about the converter here: https://www.convertapi.com/chm-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/csv/to/csv": {
      "summary": "CSV to CSV File Conversion API",
      "description": "The API for converting Excel documents to Csv files. \n Read more about the converter here: https://www.convertapi.com/csv-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "type": "string",
                    "description": "Set one or several worksheet indexes(number) separated by comma to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set one or several worksheet names separated by comma to convert. If value is not set all worksheet will be converted."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/csv/to/numbers": {
      "summary": "CSV to NUMBERS File Conversion API",
      "description": "The API for converting Excel spreadsheets to Apple iWork Numbers. \n Read more about the converter here: https://www.convertapi.com/csv-to-numbers",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/csv/to/pdf": {
      "summary": "CSV to PDF File Conversion API",
      "description": "The API for converting Excel documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/csv-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ThousandsSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": ","
                  },
                  "DecimalSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": "."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/csv/to/xls": {
      "summary": "CSV to XLS File Conversion API",
      "description": "The API for converting Csv documents to Excel files. \n Read more about the converter here: https://www.convertapi.com/csv-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Delimiter",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Delimiter": {
                    "type": "string",
                    "description": "Set fields separator.",
                    "default": ","
                  },
                  "CellType": {
                    "enum": [
                      "general",
                      "text"
                    ],
                    "type": "string",
                    "description": "Set Excel cell type, if set as text the date and number format will be the same as in CSV file.\n * `general` - General\n * `text` - Text",
                    "default": "text"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/csv/to/xlsx": {
      "summary": "CSV to XLSX File Conversion API",
      "description": "The API for converting Csv documents to Excel files. \n Read more about the converter here: https://www.convertapi.com/csv-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Delimiter",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Delimiter": {
                    "type": "string",
                    "description": "Set fields separator.",
                    "default": ","
                  },
                  "CellType": {
                    "enum": [
                      "general",
                      "text"
                    ],
                    "type": "string",
                    "description": "Set Excel cell type, if set as text the date and number format will be the same as in CSV file.\n * `general` - General\n * `text` - Text",
                    "default": "text"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/djvu/to/jpg": {
      "summary": "DJVU to JPG File Conversion API",
      "description": "The API for converting electronic books (e-book) to JPG images. \n Read more about the converter here: https://www.convertapi.com/djvu-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/djvu/to/pdf": {
      "summary": "DJVU to PDF File Conversion API",
      "description": "The API for converting electronic books (e-book) to PDF files. \n Read more about the converter here: https://www.convertapi.com/djvu-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/djvu/to/png": {
      "summary": "DJVU to PNG File Conversion API",
      "description": "The API for converting electronic books (e-book) to PNG images. \n Read more about the converter here: https://www.convertapi.com/djvu-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/djvu/to/tiff": {
      "summary": "DJVU to TIFF File Conversion API",
      "description": "The API for converting electronic books (e-book) to TIFF images. \n Read more about the converter here: https://www.convertapi.com/djvu-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/djvu/to/webp": {
      "summary": "DJVU to WEBP File Conversion API",
      "description": "The API for converting electronic books (e-book) to WEBP images. \n Read more about the converter here: https://www.convertapi.com/djvu-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/doc": {
      "summary": "DOC to DOC File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-doc",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/docx": {
      "summary": "DOC to DOCX File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/html": {
      "summary": "DOC to HTML File Conversion API",
      "description": "The API for converting Word documents to HTML files. \n Read more about the converter here: https://www.convertapi.com/doc-to-html",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "InlineImages": {
                    "type": "boolean",
                    "description": "Inline images to html.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/jpg": {
      "summary": "DOC to JPG File Conversion API",
      "description": "The API for converting Word documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/doc-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/mhtml": {
      "summary": "DOC to MHTML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-mhtml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/odt": {
      "summary": "DOC to ODT File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/pdf": {
      "summary": "DOC to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/doc-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/png": {
      "summary": "DOC to PNG File Conversion API",
      "description": "The API for converting Word documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/doc-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": -360,
                    "type": "integer",
                    "description": "Rotate image by angle."
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/rtf": {
      "summary": "DOC to RTF File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/txt": {
      "summary": "DOC to TXT File Conversion API",
      "description": "The API for converting Word documents to Text files. \n Read more about the converter here: https://www.convertapi.com/doc-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Substitutions": {
                    "type": "boolean",
                    "description": "Replace similar symbols with their counterparts in a text file, such as a copyright symbol with (c).",
                    "default": false
                  },
                  "LineBreaks": {
                    "type": "boolean",
                    "description": "Inserts line breaks at the end of each line of text.",
                    "default": true
                  },
                  "TextEncoding": {
                    "enum": [
                      "auto",
                      "ascii",
                      "utf-7",
                      "utf-8",
                      "iso-8859-1",
                      "iso-8859-2",
                      "iso-8859-6",
                      "iso-8859-15",
                      "windows-1252",
                      "arabicasmo",
                      "baltic",
                      "centraleuropean",
                      "cyrillic",
                      "europa",
                      "extalphalowercase",
                      "greek",
                      "hebrew",
                      "hzgbsimplifiedchinese",
                      "german",
                      "japaneseshiftjis",
                      "koi8-r",
                      "koi8-u",
                      "korean",
                      "thai",
                      "turkish",
                      "unicodebigendian",
                      "unicodelittleendian",
                      "vietnamese"
                    ],
                    "type": "string",
                    "description": "Specifies what encoding the parser should use when converting text files.\n * `auto` - Auto\n * `ascii` - ASCII\n * `utf-7` - UTF-7 encoding\n * `utf-8` - UTF-8 encoding\n * `iso-8859-1` - ISO-8859-1\n * `iso-8859-2` - ISO-8859-2\n * `iso-8859-6` - ISO-8859-6\n * `iso-8859-15` - ISO-8859-15\n * `windows-1252` - Windows-1252\n * `arabicasmo` - Arabic ASMO\n * `baltic` - Baltic\n * `centraleuropean` - Central European\n * `cyrillic` - Cyrillic\n * `europa` - Europa\n * `extalphalowercase` - Extended Alpha lowercase\n * `greek` - Greek\n * `hebrew` - Hebrew\n * `hzgbsimplifiedchinese` - Simplified Chinese (HZGB)\n * `german` - German\n * `japaneseshiftjis` - Japanese (Shift-JIS)\n * `koi8-r` - KOI8-R\n * `koi8-u` - K0I8-U\n * `korean` - Korean\n * `thai` - Thai\n * `turkish` - Turkish\n * `unicodebigendian` - Unicode big endian\n * `unicodelittleendian` - Unicode little endian\n * `vietnamese` - Vietnamese",
                    "default": "auto"
                  },
                  "EndLineChar": {
                    "enum": [
                      "crlf",
                      "cr",
                      "lfcr",
                      "lf"
                    ],
                    "type": "string",
                    "description": "Set end of line character. The character which will be used to break lines.\n * `crlf` - CR+LF (Windows)\n * `cr` - CR (Windows)\n * `lfcr` - LFCR (Mac OS)\n * `lf` - LF (Mac OS)",
                    "default": "crlf"
                  },
                  "SaveFormat": {
                    "enum": [
                      "wintext",
                      "wintextlb",
                      "dostext",
                      "dostextlb",
                      "unicodetext"
                    ],
                    "type": "string",
                    "description": "Specifies the format to use when saving a document.\n * `wintext` - Windows Text\n * `wintextlb` - Windows Text with line breaks preserved\n * `dostext` - DOS text\n * `dostextlb` - DOS text with line breaks preserved\n * `unicodetext` - Unicode text format",
                    "default": "unicodetext"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/xml": {
      "summary": "DOC to XML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/doc/to/xps": {
      "summary": "DOC to XPS File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/doc-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx-template/to/docx": {
      "summary": "DOCX-TEMPLATE to DOCX File Conversion API",
      "description": "Generate dynamic MS Word documents using a DOCX template and JSON object. \n Read more about the converter here: https://www.convertapi.com/docx-template-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "JsonPayload"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JsonPayload": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx-template/to/pdf": {
      "summary": "DOCX-TEMPLATE to PDF File Conversion API",
      "description": "Generate dynamic PDF documents using a DOCX template and JSON object. \n Read more about the converter here: https://www.convertapi.com/docx-template-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "JsonPayload"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JsonPayload": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/compare": {
      "summary": "DOCX to COMPARE File Conversion API",
      "description": "Compare Word documents for differences in content and formatting \n Read more about the converter here: https://www.convertapi.com/docx-to-compare",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CompareFile",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompareFile": {
                    "type": "string",
                    "description": "Specifies the Word document with which the specified document is compared.",
                    "format": "binary"
                  },
                  "CompareLevel": {
                    "enum": [
                      "Word",
                      "Character"
                    ],
                    "type": "string",
                    "description": "The property defines the granularity of comparisons between documents or text segments. It determines the precision of the comparison process, allowing users to specify whether differences are identified based on larger text blocks, such as words or sentences, or at a more detailed level, such as characters or formatting.\n * `Word` - Word\n * `Character` - Character",
                    "default": "Word"
                  },
                  "CompareFormatting": {
                    "type": "boolean",
                    "description": "Determines whether to indicate variations in formatting between the two documents.",
                    "default": true
                  },
                  "CompareCaseChanges": {
                    "type": "boolean",
                    "description": "Determines whether to highlight discrepancies in capitalization between the two documents.",
                    "default": true
                  },
                  "CompareWhitespace": {
                    "type": "boolean",
                    "description": "Determines whether to identify dissimilarities in whitespace, such as gaps or paragraphs, between the two documents.",
                    "default": true
                  },
                  "CompareTables": {
                    "type": "boolean",
                    "description": "Determines whether to evaluate variations in the information presented within tables between the two documents.",
                    "default": true
                  },
                  "CompareHeaders": {
                    "type": "boolean",
                    "description": "Determines whether to contrast divergences in headers and footers between the two documents.",
                    "default": true
                  },
                  "CompareFootnotes": {
                    "type": "boolean",
                    "description": "Determines whether to compare differences in footnotes and endnotes between the two documents.",
                    "default": true
                  },
                  "CompareTextboxes": {
                    "type": "boolean",
                    "description": "Determines whether to assess differences in the information presented within text boxes between the two documents.",
                    "default": true
                  },
                  "CompareFields": {
                    "type": "boolean",
                    "description": "Determines whether to detect disparities in fields between the two documents.",
                    "default": true
                  },
                  "CompareComments": {
                    "type": "boolean",
                    "description": "Determines whether to evaluate distinctions in comments between the two documents.",
                    "default": true
                  },
                  "CompareMoves": {
                    "type": "boolean",
                    "description": "Indicates the name of the individual to credit for modifications when comparing the two documents.",
                    "default": true
                  },
                  "AcceptRevisions": {
                    "type": "boolean",
                    "description": "Specifies whether to accept revisions before document comparison.",
                    "default": false
                  },
                  "RevisionAuthor": {
                    "type": "string",
                    "description": "Author name who made revision.",
                    "default": "Compared using ConvertAPI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/doc": {
      "summary": "DOCX to DOC File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-doc",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/docx": {
      "summary": "DOCX to DOCX File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/html": {
      "summary": "DOCX to HTML File Conversion API",
      "description": "The API for converting Word documents to HTML files. \n Read more about the converter here: https://www.convertapi.com/docx-to-html",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "InlineImages": {
                    "type": "boolean",
                    "description": "Inline images to html.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/jpg": {
      "summary": "DOCX to JPG File Conversion API",
      "description": "The API for converting Word documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/docx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/mhtml": {
      "summary": "DOCX to MHTML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-mhtml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/odt": {
      "summary": "DOCX to ODT File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/pages": {
      "summary": "DOCX to PAGES File Conversion API",
      "description": "The API for converting Word documents to Apple iWork Pages \n Read more about the converter here: https://www.convertapi.com/docx-to-pages",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/pdf": {
      "summary": "DOCX to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/docx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/png": {
      "summary": "DOCX to PNG File Conversion API",
      "description": "The API for converting Word documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/docx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": -360,
                    "type": "integer",
                    "description": "Rotate image by angle."
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/protect": {
      "summary": "DOCX to PROTECT File Conversion API",
      "description": "Encrypt and protect Word DOCX documents with a password and AES 256 bit encryption algorithm. \n Read more about the converter here: https://www.convertapi.com/docx-to-protect",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "EncryptPassword",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "EncryptPassword": {
                    "type": "string",
                    "description": "Sets the password in the output document. Users will be asked to enter this password before MS Office allows them to view the document."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/rtf": {
      "summary": "DOCX to RTF File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/tiff": {
      "summary": "DOCX to TIFF File Conversion API",
      "description": "The API for converting Word documents to Tiff images. \n Read more about the converter here: https://www.convertapi.com/docx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/txt": {
      "summary": "DOCX to TXT File Conversion API",
      "description": "The API for converting Word documents to Text files. \n Read more about the converter here: https://www.convertapi.com/docx-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Substitutions": {
                    "type": "boolean",
                    "description": "Replace similar symbols with their counterparts in a text file, such as a copyright symbol with (c).",
                    "default": false
                  },
                  "LineBreaks": {
                    "type": "boolean",
                    "description": "Inserts line breaks at the end of each line of text.",
                    "default": true
                  },
                  "TextEncoding": {
                    "enum": [
                      "auto",
                      "ascii",
                      "utf-7",
                      "utf-8",
                      "iso-8859-1",
                      "iso-8859-2",
                      "iso-8859-6",
                      "iso-8859-15",
                      "windows-1252",
                      "arabicasmo",
                      "baltic",
                      "centraleuropean",
                      "cyrillic",
                      "europa",
                      "extalphalowercase",
                      "greek",
                      "hebrew",
                      "hzgbsimplifiedchinese",
                      "german",
                      "japaneseshiftjis",
                      "koi8-r",
                      "koi8-u",
                      "korean",
                      "thai",
                      "turkish",
                      "unicodebigendian",
                      "unicodelittleendian",
                      "vietnamese"
                    ],
                    "type": "string",
                    "description": "Specifies what encoding the parser should use when converting text files.\n * `auto` - Auto\n * `ascii` - ASCII\n * `utf-7` - UTF-7 encoding\n * `utf-8` - UTF-8 encoding\n * `iso-8859-1` - ISO-8859-1\n * `iso-8859-2` - ISO-8859-2\n * `iso-8859-6` - ISO-8859-6\n * `iso-8859-15` - ISO-8859-15\n * `windows-1252` - Windows-1252\n * `arabicasmo` - Arabic ASMO\n * `baltic` - Baltic\n * `centraleuropean` - Central European\n * `cyrillic` - Cyrillic\n * `europa` - Europa\n * `extalphalowercase` - Extended Alpha lowercase\n * `greek` - Greek\n * `hebrew` - Hebrew\n * `hzgbsimplifiedchinese` - Simplified Chinese (HZGB)\n * `german` - German\n * `japaneseshiftjis` - Japanese (Shift-JIS)\n * `koi8-r` - KOI8-R\n * `koi8-u` - K0I8-U\n * `korean` - Korean\n * `thai` - Thai\n * `turkish` - Turkish\n * `unicodebigendian` - Unicode big endian\n * `unicodelittleendian` - Unicode little endian\n * `vietnamese` - Vietnamese",
                    "default": "auto"
                  },
                  "EndLineChar": {
                    "enum": [
                      "crlf",
                      "cr",
                      "lfcr",
                      "lf"
                    ],
                    "type": "string",
                    "description": "Set end of line character. The character which will be used to break lines.\n * `crlf` - CR+LF (Windows)\n * `cr` - CR (Windows)\n * `lfcr` - LFCR (Mac OS)\n * `lf` - LF (Mac OS)",
                    "default": "crlf"
                  },
                  "SaveFormat": {
                    "enum": [
                      "wintext",
                      "wintextlb",
                      "dostext",
                      "dostextlb",
                      "unicodetext"
                    ],
                    "type": "string",
                    "description": "Specifies the format to use when saving a document.\n * `wintext` - Windows Text\n * `wintextlb` - Windows Text with line breaks preserved\n * `dostext` - DOS text\n * `dostextlb` - DOS text with line breaks preserved\n * `unicodetext` - Unicode text format",
                    "default": "unicodetext"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/webp": {
      "summary": "DOCX to WEBP File Conversion API",
      "description": "The API for converting Word documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/docx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/xml": {
      "summary": "DOCX to XML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/docx/to/xps": {
      "summary": "DOCX to XPS File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/docx-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dot/to/jpg": {
      "summary": "DOT to JPG File Conversion API",
      "description": "The API for converting Word documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/dot-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dot/to/pdf": {
      "summary": "DOT to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/dot-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/doc": {
      "summary": "DOTX to DOC File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-doc",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/docx": {
      "summary": "DOTX to DOCX File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/jpg": {
      "summary": "DOTX to JPG File Conversion API",
      "description": "The API for converting Word documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/dotx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/mhtml": {
      "summary": "DOTX to MHTML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-mhtml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/odt": {
      "summary": "DOTX to ODT File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/pdf": {
      "summary": "DOTX to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/dotx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/rtf": {
      "summary": "DOTX to RTF File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/xml": {
      "summary": "DOTX to XML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dotx/to/xps": {
      "summary": "DOTX to XPS File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/dotx-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwf/to/jpg": {
      "summary": "DWF to JPG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to JPG images. \n Read more about the converter here: https://www.convertapi.com/dwf-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwf/to/pdf": {
      "summary": "DWF to PDF File Conversion API",
      "description": "Convert AutoCAD drawing files to PDF files \n Read more about the converter here: https://www.convertapi.com/dwf-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "The converted drawing is detected and adjusted to fit the current page size, with the possibility of changing the page orientation to accommodate the drawing.",
                    "default": true
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `default` - Default\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set PDF page orientation. The property will only work if the PageSize property is also set.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwf/to/png": {
      "summary": "DWF to PNG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to PNG images. \n Read more about the converter here: https://www.convertapi.com/dwf-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwf/to/svg": {
      "summary": "DWF to SVG File Conversion API",
      "description": "The API for converting AutoCAD drawings to SVG vector images \n Read more about the converter here: https://www.convertapi.com/dwf-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox height in pixels.",
                    "default": 600
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox width in pixels.",
                    "default": 800
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwf/to/tiff": {
      "summary": "DWF to TIFF File Conversion API",
      "description": "The API for converting AutoCAD drawing files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/dwf-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwf/to/webp": {
      "summary": "DWF to WEBP File Conversion API",
      "description": "The API for converting AutoCAD drawing files to WEBP images. \n Read more about the converter here: https://www.convertapi.com/dwf-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwfx/to/jpg": {
      "summary": "DWFX to JPG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to JPG images. \n Read more about the converter here: https://www.convertapi.com/dwfx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwfx/to/pdf": {
      "summary": "DWFX to PDF File Conversion API",
      "description": "Convert AutoCAD drawing files to PDF files \n Read more about the converter here: https://www.convertapi.com/dwfx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "The converted drawing is detected and adjusted to fit the current page size, with the possibility of changing the page orientation to accommodate the drawing.",
                    "default": true
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `default` - Default\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set PDF page orientation. The property will only work if the PageSize property is also set.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwfx/to/png": {
      "summary": "DWFX to PNG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to PNG images. \n Read more about the converter here: https://www.convertapi.com/dwfx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwfx/to/svg": {
      "summary": "DWFX to SVG File Conversion API",
      "description": "The API for converting AutoCAD drawings to SVG vector images \n Read more about the converter here: https://www.convertapi.com/dwfx-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox height in pixels.",
                    "default": 600
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox width in pixels.",
                    "default": 800
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwfx/to/tiff": {
      "summary": "DWFX to TIFF File Conversion API",
      "description": "The API for converting AutoCAD drawing files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/dwfx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwfx/to/webp": {
      "summary": "DWFX to WEBP File Conversion API",
      "description": "The API for converting AutoCAD drawing files to WEBP images. \n Read more about the converter here: https://www.convertapi.com/dwfx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwg/to/jpg": {
      "summary": "DWG to JPG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to JPG images. \n Read more about the converter here: https://www.convertapi.com/dwg-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwg/to/pdf": {
      "summary": "DWG to PDF File Conversion API",
      "description": "Convert AutoCAD drawing files to PDF files \n Read more about the converter here: https://www.convertapi.com/dwg-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "The converted drawing is detected and adjusted to fit the current page size, with the possibility of changing the page orientation to accommodate the drawing.",
                    "default": true
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `default` - Default\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set PDF page orientation. The property will only work if the PageSize property is also set.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwg/to/png": {
      "summary": "DWG to PNG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to PNG images. \n Read more about the converter here: https://www.convertapi.com/dwg-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwg/to/svg": {
      "summary": "DWG to SVG File Conversion API",
      "description": "The API for converting AutoCAD drawings to SVG vector images \n Read more about the converter here: https://www.convertapi.com/dwg-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox height in pixels.",
                    "default": 600
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox width in pixels.",
                    "default": 800
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwg/to/tiff": {
      "summary": "DWG to TIFF File Conversion API",
      "description": "The API for converting AutoCAD drawing files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/dwg-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwg/to/webp": {
      "summary": "DWG to WEBP File Conversion API",
      "description": "The API for converting AutoCAD drawing files to WEBP images. \n Read more about the converter here: https://www.convertapi.com/dwg-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwgx/to/jpg": {
      "summary": "DWGX to JPG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to JPG images. \n Read more about the converter here: https://www.convertapi.com/dwgx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwgx/to/png": {
      "summary": "DWGX to PNG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to PNG images. \n Read more about the converter here: https://www.convertapi.com/dwgx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwgx/to/tiff": {
      "summary": "DWGX to TIFF File Conversion API",
      "description": "The API for converting AutoCAD drawing files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/dwgx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dwgx/to/webp": {
      "summary": "DWGX to WEBP File Conversion API",
      "description": "The API for converting AutoCAD drawing files to WEBP images. \n Read more about the converter here: https://www.convertapi.com/dwgx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dxf/to/jpg": {
      "summary": "DXF to JPG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to JPG images. \n Read more about the converter here: https://www.convertapi.com/dxf-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dxf/to/pdf": {
      "summary": "DXF to PDF File Conversion API",
      "description": "Convert AutoCAD drawing files to PDF files \n Read more about the converter here: https://www.convertapi.com/dxf-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "The converted drawing is detected and adjusted to fit the current page size, with the possibility of changing the page orientation to accommodate the drawing.",
                    "default": true
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `default` - Default\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set PDF page orientation. The property will only work if the PageSize property is also set.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dxf/to/png": {
      "summary": "DXF to PNG File Conversion API",
      "description": "The API for converting AutoCAD drawing files to PNG images. \n Read more about the converter here: https://www.convertapi.com/dxf-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dxf/to/svg": {
      "summary": "DXF to SVG File Conversion API",
      "description": "The API for converting AutoCAD drawings to SVG vector images \n Read more about the converter here: https://www.convertapi.com/dxf-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ExportLayers": {
                    "type": "boolean",
                    "description": "Export AutoCAD layers.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox height in pixels.",
                    "default": 600
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image ViewBox width in pixels.",
                    "default": 800
                  },
                  "ColorSpace": {
                    "enum": [
                      "truecolors",
                      "grayscale",
                      "monochrome"
                    ],
                    "type": "string",
                    "description": "Set output color space.\n * `truecolors` - TrueColors\n * `grayscale` - GrayScale\n * `monochrome` - Monochrome",
                    "default": "truecolors"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dxf/to/tiff": {
      "summary": "DXF to TIFF File Conversion API",
      "description": "The API for converting AutoCAD drawing files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/dxf-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/dxf/to/webp": {
      "summary": "DXF to WEBP File Conversion API",
      "description": "The API for converting AutoCAD drawing files to WEBP images. \n Read more about the converter here: https://www.convertapi.com/dxf-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "SpaceToConvert": {
                    "enum": [
                      "default",
                      "all",
                      "model"
                    ],
                    "type": "string",
                    "description": "Set space type to convert.\n * `default` - Default\n * `all` - All layouts\n * `model` - Model space",
                    "default": "default"
                  },
                  "CustomSpaceToConvert": {
                    "type": "string",
                    "description": "Set custom layout name to convert by setting it name or index. This property overrides the SpaceToConvert property."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/email/to/extract": {
      "summary": "EMAIL to EXTRACT File Conversion API",
      "description": "Extract email attachments from EML & MSG files \n Read more about the converter here: https://www.convertapi.com/email-to-extract",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/email/to/metadata": {
      "summary": "EMAIL to METADATA File Conversion API",
      "description": "Extract email metadata from EML & MSG files \n Read more about the converter here: https://www.convertapi.com/email-to-metadata",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/email/to/pdf": {
      "summary": "EMAIL to PDF File Conversion API",
      "description": "Convert EML and MSG emails to PDF with multiple settings \n Read more about the converter here: https://www.convertapi.com/email-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "Merge": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "PDF page orientation.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageSize": {
                    "enum": [
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "a4"
                  },
                  "MarginTop": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page top margin in millimeters (mm).",
                    "default": 5
                  },
                  "MarginRight": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page right margin in millimeters (mm).",
                    "default": 5
                  },
                  "MarginBottom": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page bottom margin in millimeters (mm).",
                    "default": 5
                  },
                  "MarginLeft": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page left margin in millimeters (mm).",
                    "default": 5
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eml/to/jpg": {
      "summary": "EML to JPG File Conversion API",
      "description": "The API for converting email files to JPG images. \n Read more about the converter here: https://www.convertapi.com/eml-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eml/to/png": {
      "summary": "EML to PNG File Conversion API",
      "description": "The API for converting email files to PNG images. \n Read more about the converter here: https://www.convertapi.com/eml-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eml/to/tiff": {
      "summary": "EML to TIFF File Conversion API",
      "description": "The API for converting email files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/eml-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eml/to/webp": {
      "summary": "EML to WEBP File Conversion API",
      "description": "The API for converting email files to Webp images. \n Read more about the converter here: https://www.convertapi.com/eml-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eps/to/jpg": {
      "summary": "EPS to JPG File Conversion API",
      "description": "The API for converting PostScript to JPG images. \n Read more about the converter here: https://www.convertapi.com/eps-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eps/to/pdf": {
      "summary": "EPS to PDF File Conversion API",
      "description": "The API for converting PostScript to PDF files. \n Read more about the converter here: https://www.convertapi.com/eps-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eps/to/png": {
      "summary": "EPS to PNG File Conversion API",
      "description": "The API for converting PostScript to PNG images. \n Read more about the converter here: https://www.convertapi.com/eps-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eps/to/tiff": {
      "summary": "EPS to TIFF File Conversion API",
      "description": "The API for converting PostScript to TIFF images. \n Read more about the converter here: https://www.convertapi.com/eps-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/eps/to/webp": {
      "summary": "EPS to WEBP File Conversion API",
      "description": "The API for converting PostScript to WEBP images. \n Read more about the converter here: https://www.convertapi.com/eps-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/epub/to/jpg": {
      "summary": "EPUB to JPG File Conversion API",
      "description": "The API for converting electronic books (e-book) to JPG images. \n Read more about the converter here: https://www.convertapi.com/epub-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/epub/to/pdf": {
      "summary": "EPUB to PDF File Conversion API",
      "description": "The API for converting electronic books (e-book) to PDF files. \n Read more about the converter here: https://www.convertapi.com/epub-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/epub/to/png": {
      "summary": "EPUB to PNG File Conversion API",
      "description": "The API for converting electronic books (e-book) to PNG images. \n Read more about the converter here: https://www.convertapi.com/epub-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/epub/to/tiff": {
      "summary": "EPUB to TIFF File Conversion API",
      "description": "The API for converting electronic books (e-book) to TIFF images. \n Read more about the converter here: https://www.convertapi.com/epub-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/epub/to/webp": {
      "summary": "EPUB to WEBP File Conversion API",
      "description": "The API for converting electronic books (e-book) to WEBP images. \n Read more about the converter here: https://www.convertapi.com/epub-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/jpg": {
      "summary": "FAX to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/fax-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/pdf": {
      "summary": "FAX to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/fax-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/png": {
      "summary": "FAX to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/fax-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/pnm": {
      "summary": "FAX to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/fax-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/svg": {
      "summary": "FAX to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/fax-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/tiff": {
      "summary": "FAX to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/fax-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/fax/to/webp": {
      "summary": "FAX to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/fax-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/gif": {
      "summary": "GIF to GIF File Conversion API",
      "description": "The API for converting JPG, PNG, and GIF images to single and animated GIF files. \n Read more about the converter here: https://www.convertapi.com/gif-to-gif",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "PersistAnimation": {
                    "type": "boolean",
                    "description": "Read animation values AnimationIterations and AnimationDelay from GIF file. Only works if GIF file is added to file list.",
                    "default": true
                  },
                  "AnimationDelay": {
                    "maximum": 20000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Animation delay in milliseconds before playing the next image in an animated sequence.",
                    "default": 100
                  },
                  "AnimationIterations": {
                    "maximum": 1000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the number of iterations to loop an animation. Zero is infinity.",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/jpg": {
      "summary": "GIF to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/gif-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/pdf": {
      "summary": "GIF to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/gif-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/png": {
      "summary": "GIF to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/gif-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/pnm": {
      "summary": "GIF to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/gif-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/svg": {
      "summary": "GIF to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/gif-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/tiff": {
      "summary": "GIF to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/gif-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/gif/to/webp": {
      "summary": "GIF to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/gif-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/jpg": {
      "summary": "HEIC to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/heic-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/jxl": {
      "summary": "HEIC to JXL File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/heic-to-jxl",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/pdf": {
      "summary": "HEIC to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/heic-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/png": {
      "summary": "HEIC to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/heic-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/pnm": {
      "summary": "HEIC to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/heic-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/svg": {
      "summary": "HEIC to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/heic-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/tiff": {
      "summary": "HEIC to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/heic-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/heic/to/webp": {
      "summary": "HEIC to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/heic-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/htm/to/jpg": {
      "summary": "HTM to JPG File Conversion API",
      "description": "The API for converting HTML files to JPG images. \n Read more about the converter here: https://www.convertapi.com/htm-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "CropElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element that should be converted. Element will be cropped from the document."
                  },
                  "CropX": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop X offset."
                  },
                  "CropY": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop Y offset."
                  },
                  "CropWidth": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop width."
                  },
                  "CropHeight": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop height."
                  },
                  "Zoom": {
                    "maximum": 10,
                    "minimum": 0.1,
                    "type": "number",
                    "description": "Set the default zoom level of webpages.",
                    "default": 1
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/htm/to/pdf": {
      "summary": "HTM to PDF File Conversion API",
      "description": "The API for converting HTML files to PDF files using Google Chrome browser. \n Read more about the converter here: https://www.convertapi.com/htm-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "LoadLazyContent": {
                    "type": "boolean",
                    "description": "Load page images that loads only when they are visible.",
                    "default": false
                  },
                  "ViewportWidth": {
                    "maximum": 4000,
                    "minimum": 200,
                    "type": "integer",
                    "description": "Sets browser viewport width.",
                    "default": 1366
                  },
                  "ViewportHeight": {
                    "maximum": 4000,
                    "minimum": 200,
                    "type": "integer",
                    "description": "Sets browser viewport height.",
                    "default": 1024
                  },
                  "RespectViewport": {
                    "type": "boolean",
                    "description": "If true, the converter will generate PDF as the content looks like in the browser. If is set to false, the converter acts like Chrome print to PDF function.",
                    "default": true
                  },
                  "Scale": {
                    "maximum": 200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set web page scale value in percentage.",
                    "default": 100
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "PDF page orientation.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageSize": {
                    "enum": [
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "letter"
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "MarginTop": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page top margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginRight": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page right margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginBottom": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page bottom margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginLeft": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page left margin in millimeters (mm).",
                    "default": 10
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-100"
                  },
                  "Background": {
                    "type": "boolean",
                    "description": "Convert web page background.",
                    "default": true
                  },
                  "FixedElements": {
                    "enum": [
                      "fixed",
                      "absolute",
                      "relative",
                      "hide"
                    ],
                    "type": "string",
                    "description": "Change fixed elements CSS 'position' property to adapt page for conversion.\n * `fixed` - Leave unchanged\n * `absolute` - Absolute\n * `relative` - Relative\n * `hide` - Hide",
                    "default": "fixed"
                  },
                  "Header": {
                    "type": "string",
                    "description": ""
                  },
                  "Footer": {
                    "type": "string",
                    "description": ""
                  },
                  "ShowElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that should be visible during conversion. Other elements will be hidden."
                  },
                  "AvoidBreakElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that pages should not break."
                  },
                  "BreakBeforeElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that should apply page break before it."
                  },
                  "BreakAfterElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that should apply page break after it."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/htm/to/png": {
      "summary": "HTM to PNG File Conversion API",
      "description": "The API for converting HTML files to PNG images. \n Read more about the converter here: https://www.convertapi.com/htm-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "CropElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element that should be converted. Element will be cropped from the document."
                  },
                  "CropX": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop X offset."
                  },
                  "CropY": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop Y offset."
                  },
                  "CropWidth": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop width."
                  },
                  "CropHeight": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop height."
                  },
                  "Zoom": {
                    "maximum": 10,
                    "minimum": 0.1,
                    "type": "number",
                    "description": "Set the default zoom level of webpages.",
                    "default": 1
                  },
                  "TransparentBackground": {
                    "type": "boolean",
                    "description": "Sets default background color to transparent to get transparency in the image. Also, for this property to work, the source HTML BODY background color should be set to none.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/docx": {
      "summary": "HTML to DOCX File Conversion API",
      "description": "The API for converting HTML and MHTML files to Word documents. \n Read more about the converter here: https://www.convertapi.com/html-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/jpg": {
      "summary": "HTML to JPG File Conversion API",
      "description": "The API for converting HTML files to JPG images. \n Read more about the converter here: https://www.convertapi.com/html-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "CropElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element that should be converted. Element will be cropped from the document."
                  },
                  "CropX": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop X offset."
                  },
                  "CropY": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop Y offset."
                  },
                  "CropWidth": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop width."
                  },
                  "CropHeight": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop height."
                  },
                  "Zoom": {
                    "maximum": 10,
                    "minimum": 0.1,
                    "type": "number",
                    "description": "Set the default zoom level of webpages.",
                    "default": 1
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/md": {
      "summary": "HTML to MD File Conversion API",
      "description": "Convert HTML to Markdown with markdown converter API. \n Read more about the converter here: https://www.convertapi.com/html-to-md",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "GithubFlavored": {
                    "type": "boolean",
                    "description": "Create GitHub-flavored markdown GFM.",
                    "default": false
                  },
                  "RemoveComments": {
                    "type": "boolean",
                    "description": "Remove comment tags.",
                    "default": false
                  },
                  "UnsupportedTags": {
                    "enum": [
                      "PassThrough",
                      "Drop",
                      "Bypass",
                      "Fail"
                    ],
                    "type": "string",
                    "description": "Sets the rules on how to handle unsupported HTML tags.\n * `PassThrough` - PassThrough unsupported tags\n * `Drop` - Drop unsupported tags and content\n * `Bypass` - Bypass unsupported tags but convert content\n * `Fail` - Fail and throw exception",
                    "default": "PassThrough"
                  },
                  "PassThroughTags": {
                    "type": "string",
                    "description": "Enter pass-through tags, separating them with commas. The tags will be copied to the MD document without processing. The UnsupportedTags property should be set to PassThrough."
                  },
                  "ListBulletChar": {
                    "type": "string",
                    "description": "Set bullet list character.",
                    "default": "-"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/odt": {
      "summary": "HTML to ODT File Conversion API",
      "description": "The API for converting HTML and MHTML files to Word documents. \n Read more about the converter here: https://www.convertapi.com/html-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/pdf": {
      "summary": "HTML to PDF File Conversion API",
      "description": "The API for converting HTML files to PDF files using Google Chrome browser. \n Read more about the converter here: https://www.convertapi.com/html-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "LoadLazyContent": {
                    "type": "boolean",
                    "description": "Load page images that loads only when they are visible.",
                    "default": false
                  },
                  "ViewportWidth": {
                    "maximum": 4000,
                    "minimum": 200,
                    "type": "integer",
                    "description": "Sets browser viewport width.",
                    "default": 1366
                  },
                  "ViewportHeight": {
                    "maximum": 4000,
                    "minimum": 200,
                    "type": "integer",
                    "description": "Sets browser viewport height.",
                    "default": 1024
                  },
                  "RespectViewport": {
                    "type": "boolean",
                    "description": "If true, the converter will generate PDF as the content looks like in the browser. If is set to false, the converter acts like Chrome print to PDF function.",
                    "default": true
                  },
                  "Scale": {
                    "maximum": 200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set web page scale value in percentage.",
                    "default": 100
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "PDF page orientation.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageSize": {
                    "enum": [
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "letter"
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "MarginTop": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page top margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginRight": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page right margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginBottom": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page bottom margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginLeft": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page left margin in millimeters (mm).",
                    "default": 10
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-100"
                  },
                  "Background": {
                    "type": "boolean",
                    "description": "Convert web page background.",
                    "default": true
                  },
                  "FixedElements": {
                    "enum": [
                      "fixed",
                      "absolute",
                      "relative",
                      "hide"
                    ],
                    "type": "string",
                    "description": "Change fixed elements CSS 'position' property to adapt page for conversion.\n * `fixed` - Leave unchanged\n * `absolute` - Absolute\n * `relative` - Relative\n * `hide` - Hide",
                    "default": "fixed"
                  },
                  "Header": {
                    "type": "string",
                    "description": ""
                  },
                  "Footer": {
                    "type": "string",
                    "description": ""
                  },
                  "ShowElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that should be visible during conversion. Other elements will be hidden."
                  },
                  "AvoidBreakElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that pages should not break."
                  },
                  "BreakBeforeElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that should apply page break before it."
                  },
                  "BreakAfterElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that should apply page break after it."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/png": {
      "summary": "HTML to PNG File Conversion API",
      "description": "The API for converting HTML files to PNG images. \n Read more about the converter here: https://www.convertapi.com/html-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "CropElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element that should be converted. Element will be cropped from the document."
                  },
                  "CropX": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop X offset."
                  },
                  "CropY": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop Y offset."
                  },
                  "CropWidth": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop width."
                  },
                  "CropHeight": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop height."
                  },
                  "Zoom": {
                    "maximum": 10,
                    "minimum": 0.1,
                    "type": "number",
                    "description": "Set the default zoom level of webpages.",
                    "default": 1
                  },
                  "TransparentBackground": {
                    "type": "boolean",
                    "description": "Sets default background color to transparent to get transparency in the image. Also, for this property to work, the source HTML BODY background color should be set to none.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/txt": {
      "summary": "HTML to TXT File Conversion API",
      "description": "The API for converting HTML and MHTML files to Word documents. \n Read more about the converter here: https://www.convertapi.com/html-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/xls": {
      "summary": "HTML to XLS File Conversion API",
      "description": "The API for converting HTML and MHTML files to Excel document. \n Read more about the converter here: https://www.convertapi.com/html-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/html/to/xlsx": {
      "summary": "HTML to XLSX File Conversion API",
      "description": "The API for converting HTML and MHTML files to Excel document. \n Read more about the converter here: https://www.convertapi.com/html-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/jpg": {
      "summary": "ICO to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/ico-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/pdf": {
      "summary": "ICO to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/ico-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/png": {
      "summary": "ICO to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/ico-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/pnm": {
      "summary": "ICO to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/ico-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/svg": {
      "summary": "ICO to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/ico-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/tiff": {
      "summary": "ICO to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/ico-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ico/to/webp": {
      "summary": "ICO to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/ico-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/images/to/pdf": {
      "summary": "IMAGES to PDF File Conversion API",
      "description": "Generate PDFs from Images with Page & Margin Options \n Read more about the converter here: https://www.convertapi.com/images-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/jpg": {
      "summary": "JPEG to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/pdf": {
      "summary": "JPEG to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/png": {
      "summary": "JPEG to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/pnm": {
      "summary": "JPEG to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/svg": {
      "summary": "JPEG to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/tiff": {
      "summary": "JPEG to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpeg/to/webp": {
      "summary": "JPEG to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/jpeg-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/compress": {
      "summary": "JPG to COMPRESS File Conversion API",
      "description": "Compress JPG API. \n Read more about the converter here: https://www.convertapi.com/jpg-to-compress",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "CompressionLevel": {
                    "enum": [
                      "Lossless",
                      "Good",
                      "Extreme"
                    ],
                    "type": "string",
                    "description": "Image compression level.\n * `Lossless` - Lossless\n * `Good` - Good\n * `Extreme` - Extreme",
                    "default": "Extreme"
                  },
                  "CompressionPercentage": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set compression level in percentage. Overrides CompressionLevel property."
                  },
                  "CompressionFileSize": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Compress a file to the file size set in kilobytes. Overrides CompressionLevel property."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/gif": {
      "summary": "JPG to GIF File Conversion API",
      "description": "The API for converting JPG, PNG, and GIF images to single and animated GIF files. \n Read more about the converter here: https://www.convertapi.com/jpg-to-gif",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "PersistAnimation": {
                    "type": "boolean",
                    "description": "Read animation values AnimationIterations and AnimationDelay from GIF file. Only works if GIF file is added to file list.",
                    "default": true
                  },
                  "AnimationDelay": {
                    "maximum": 20000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Animation delay in milliseconds before playing the next image in an animated sequence.",
                    "default": 100
                  },
                  "AnimationIterations": {
                    "maximum": 1000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the number of iterations to loop an animation. Zero is infinity.",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/jpg": {
      "summary": "JPG to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/jpg-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/jxl": {
      "summary": "JPG to JXL File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/jpg-to-jxl",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/pdf": {
      "summary": "JPG to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/jpg-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/png": {
      "summary": "JPG to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/jpg-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/pnm": {
      "summary": "JPG to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/jpg-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/svg": {
      "summary": "JPG to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/jpg-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/tiff": {
      "summary": "JPG to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/jpg-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/watermark": {
      "summary": "JPG to WATERMARK File Conversion API",
      "description": "Watermark JPG image. Stamp a JPG with the text. \n Read more about the converter here: https://www.convertapi.com/jpg-to-watermark",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "Text"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Text": {
                    "type": "string",
                    "description": ""
                  },
                  "FontName": {
                    "enum": [
                      "Arial",
                      "Bahnschrift",
                      "Calibri",
                      "Cambria",
                      "Consolas",
                      "Constantia",
                      "Courier New",
                      "Georgia",
                      "Tahoma",
                      "Times New Roman",
                      "Verdana"
                    ],
                    "type": "string",
                    "description": "Specifies the watermark font name. Contact us if you are looking for a specific font for a watermark that is missing from the list.\n * `Arial` - Arial\n * `Bahnschrift` - Bahnschrift\n * `Calibri` - Calibri\n * `Cambria` - Cambria\n * `Consolas` - Consolas\n * `Constantia` - Constantia\n * `Courier New` - Courier New\n * `Georgia` - Georgia\n * `Tahoma` - Tahoma\n * `Times New Roman` - Times New Roman\n * `Verdana` - Verdana",
                    "default": "Arial"
                  },
                  "FontSize": {
                    "maximum": 200,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark font size.",
                    "default": 40
                  },
                  "FontColor": {
                    "type": "string",
                    "description": "Specifies the watermark font color.",
                    "default": "#ffffff"
                  },
                  "StrokeColor": {
                    "type": "string",
                    "description": "Specifies font stroke color.",
                    "default": "#271851"
                  },
                  "StrokeWidth": {
                    "maximum": 200,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the stroke width.",
                    "default": 1
                  },
                  "FontEmbed": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be embedded.",
                    "default": true
                  },
                  "FontSubset": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be subset.",
                    "default": true
                  },
                  "FontEncoding": {
                    "type": "string",
                    "description": "Specifies the font encoding."
                  },
                  "TextRenderingMode": {
                    "enum": [
                      "filltext",
                      "stroketext",
                      "fillstroke",
                      "invisible"
                    ],
                    "type": "string",
                    "description": "Specifies the text rendering mode.\n * `filltext` - fill text without stroke\n * `stroketext` - stroke text without fill\n * `fillstroke` - fill and stroke\n * `invisible` - invisible",
                    "default": "fillstroke"
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the watermark rotation angle in degrees.",
                    "default": 0
                  },
                  "HorizontalAlignment": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the horizontal watermark alignment.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "center"
                  },
                  "VerticalAlignment": {
                    "enum": [
                      "top",
                      "center",
                      "bottom"
                    ],
                    "type": "string",
                    "description": "Specifies the vertical watermark alignment.\n * `top` - top\n * `center` - center\n * `bottom` - bottom",
                    "default": "center"
                  },
                  "PositionX": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark X coordinate. If set overrides property HorizontalAlignment."
                  },
                  "PositionY": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark Y coordinate. If set overrides property VerticalAlignment."
                  },
                  "PositionUnit": {
                    "enum": [
                      "pt",
                      "in",
                      "mm",
                      "cm"
                    ],
                    "type": "string",
                    "description": "Specifies measurement unit to use for the PositionX and PositionY properties.\n * `pt` - points\n * `in` - inches\n * `mm` - millimeters\n * `cm` - centimeters",
                    "default": "pt"
                  },
                  "Opacity": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies watermark opacity level.",
                    "default": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/jpg/to/webp": {
      "summary": "JPG to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/jpg-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/key/to/jpg": {
      "summary": "KEY to JPG File Conversion API",
      "description": "The API for converting Apple iWork Keynote presentation to JPG image. \n Read more about the converter here: https://www.convertapi.com/key-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/key/to/pdf": {
      "summary": "KEY to PDF File Conversion API",
      "description": "The API for converting Apple iWork Keynote presentation to PDF file. \n Read more about the converter here: https://www.convertapi.com/key-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/key/to/png": {
      "summary": "KEY to PNG File Conversion API",
      "description": "The API for converting Apple iWork Keynote presentation to PNG file. \n Read more about the converter here: https://www.convertapi.com/key-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/key/to/pptx": {
      "summary": "KEY to PPTX File Conversion API",
      "description": "The API for converting Apple iWork Keynote presentation to Microsoft Office Powerpoint presentation. \n Read more about the converter here: https://www.convertapi.com/key-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/key/to/tiff": {
      "summary": "KEY to TIFF File Conversion API",
      "description": "The API for converting Apple iWork Keynote presentation to Tiff image. \n Read more about the converter here: https://www.convertapi.com/key-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/doc": {
      "summary": "LOG to DOC File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-doc",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/docx": {
      "summary": "LOG to DOCX File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/mhtml": {
      "summary": "LOG to MHTML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-mhtml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/odt": {
      "summary": "LOG to ODT File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/pdf": {
      "summary": "LOG to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/log-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/rtf": {
      "summary": "LOG to RTF File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/txt": {
      "summary": "LOG to TXT File Conversion API",
      "description": "The API for converting Word documents to Text files. \n Read more about the converter here: https://www.convertapi.com/log-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Substitutions": {
                    "type": "boolean",
                    "description": "Replace similar symbols with their counterparts in a text file, such as a copyright symbol with (c).",
                    "default": false
                  },
                  "LineBreaks": {
                    "type": "boolean",
                    "description": "Inserts line breaks at the end of each line of text.",
                    "default": true
                  },
                  "TextEncoding": {
                    "enum": [
                      "auto",
                      "ascii",
                      "utf-7",
                      "utf-8",
                      "iso-8859-1",
                      "iso-8859-2",
                      "iso-8859-6",
                      "iso-8859-15",
                      "windows-1252",
                      "arabicasmo",
                      "baltic",
                      "centraleuropean",
                      "cyrillic",
                      "europa",
                      "extalphalowercase",
                      "greek",
                      "hebrew",
                      "hzgbsimplifiedchinese",
                      "german",
                      "japaneseshiftjis",
                      "koi8-r",
                      "koi8-u",
                      "korean",
                      "thai",
                      "turkish",
                      "unicodebigendian",
                      "unicodelittleendian",
                      "vietnamese"
                    ],
                    "type": "string",
                    "description": "Specifies what encoding the parser should use when converting text files.\n * `auto` - Auto\n * `ascii` - ASCII\n * `utf-7` - UTF-7 encoding\n * `utf-8` - UTF-8 encoding\n * `iso-8859-1` - ISO-8859-1\n * `iso-8859-2` - ISO-8859-2\n * `iso-8859-6` - ISO-8859-6\n * `iso-8859-15` - ISO-8859-15\n * `windows-1252` - Windows-1252\n * `arabicasmo` - Arabic ASMO\n * `baltic` - Baltic\n * `centraleuropean` - Central European\n * `cyrillic` - Cyrillic\n * `europa` - Europa\n * `extalphalowercase` - Extended Alpha lowercase\n * `greek` - Greek\n * `hebrew` - Hebrew\n * `hzgbsimplifiedchinese` - Simplified Chinese (HZGB)\n * `german` - German\n * `japaneseshiftjis` - Japanese (Shift-JIS)\n * `koi8-r` - KOI8-R\n * `koi8-u` - K0I8-U\n * `korean` - Korean\n * `thai` - Thai\n * `turkish` - Turkish\n * `unicodebigendian` - Unicode big endian\n * `unicodelittleendian` - Unicode little endian\n * `vietnamese` - Vietnamese",
                    "default": "auto"
                  },
                  "EndLineChar": {
                    "enum": [
                      "crlf",
                      "cr",
                      "lfcr",
                      "lf"
                    ],
                    "type": "string",
                    "description": "Set end of line character. The character which will be used to break lines.\n * `crlf` - CR+LF (Windows)\n * `cr` - CR (Windows)\n * `lfcr` - LFCR (Mac OS)\n * `lf` - LF (Mac OS)",
                    "default": "crlf"
                  },
                  "SaveFormat": {
                    "enum": [
                      "wintext",
                      "wintextlb",
                      "dostext",
                      "dostextlb",
                      "unicodetext"
                    ],
                    "type": "string",
                    "description": "Specifies the format to use when saving a document.\n * `wintext` - Windows Text\n * `wintextlb` - Windows Text with line breaks preserved\n * `dostext` - DOS text\n * `dostextlb` - DOS text with line breaks preserved\n * `unicodetext` - Unicode text format",
                    "default": "unicodetext"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/xml": {
      "summary": "LOG to XML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/log/to/xps": {
      "summary": "LOG to XPS File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/log-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mdi/to/pdf": {
      "summary": "MDI to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/mdi-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mhtml/to/docx": {
      "summary": "MHTML to DOCX File Conversion API",
      "description": "The API for converting HTML and MHTML files to Word documents. \n Read more about the converter here: https://www.convertapi.com/mhtml-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mhtml/to/odt": {
      "summary": "MHTML to ODT File Conversion API",
      "description": "The API for converting HTML and MHTML files to Word documents. \n Read more about the converter here: https://www.convertapi.com/mhtml-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mhtml/to/txt": {
      "summary": "MHTML to TXT File Conversion API",
      "description": "The API for converting HTML and MHTML files to Word documents. \n Read more about the converter here: https://www.convertapi.com/mhtml-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mobi/to/jpg": {
      "summary": "MOBI to JPG File Conversion API",
      "description": "The API for converting electronic books (e-book) to JPG images. \n Read more about the converter here: https://www.convertapi.com/mobi-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mobi/to/pdf": {
      "summary": "MOBI to PDF File Conversion API",
      "description": "The API for converting electronic books (e-book) to PDF files. \n Read more about the converter here: https://www.convertapi.com/mobi-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mobi/to/png": {
      "summary": "MOBI to PNG File Conversion API",
      "description": "The API for converting electronic books (e-book) to PNG images. \n Read more about the converter here: https://www.convertapi.com/mobi-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mobi/to/tiff": {
      "summary": "MOBI to TIFF File Conversion API",
      "description": "The API for converting electronic books (e-book) to TIFF images. \n Read more about the converter here: https://www.convertapi.com/mobi-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/mobi/to/webp": {
      "summary": "MOBI to WEBP File Conversion API",
      "description": "The API for converting electronic books (e-book) to WEBP images. \n Read more about the converter here: https://www.convertapi.com/mobi-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/msg/to/jpg": {
      "summary": "MSG to JPG File Conversion API",
      "description": "The API for converting email files to JPG images. \n Read more about the converter here: https://www.convertapi.com/msg-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/msg/to/png": {
      "summary": "MSG to PNG File Conversion API",
      "description": "The API for converting email files to PNG images. \n Read more about the converter here: https://www.convertapi.com/msg-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/msg/to/tiff": {
      "summary": "MSG to TIFF File Conversion API",
      "description": "The API for converting email files to TIFF images. \n Read more about the converter here: https://www.convertapi.com/msg-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/msg/to/webp": {
      "summary": "MSG to WEBP File Conversion API",
      "description": "The API for converting email files to Webp images. \n Read more about the converter here: https://www.convertapi.com/msg-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ConvertHeader": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                  },
                  "ConvertAttachments": {
                    "type": "boolean",
                    "description": "Convert email attachments.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/numbers/to/csv": {
      "summary": "NUMBERS to CSV File Conversion API",
      "description": "The API for converting Apple iWork Numbers to Excel spreadsheets. \n Read more about the converter here: https://www.convertapi.com/numbers-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/numbers/to/jpg": {
      "summary": "NUMBERS to JPG File Conversion API",
      "description": "The API for converting Apple iWork Numbers spreadsheets to JPG image. \n Read more about the converter here: https://www.convertapi.com/numbers-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/numbers/to/pdf": {
      "summary": "NUMBERS to PDF File Conversion API",
      "description": "The API for converting Apple iWork Numbers spreadsheets to PDF file. \n Read more about the converter here: https://www.convertapi.com/numbers-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/numbers/to/png": {
      "summary": "NUMBERS to PNG File Conversion API",
      "description": "The API for converting Apple iWork Numbers spreadsheets to PNG file. \n Read more about the converter here: https://www.convertapi.com/numbers-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/numbers/to/xlsx": {
      "summary": "NUMBERS to XLSX File Conversion API",
      "description": "The API for converting Apple iWork Numbers to Excel spreadsheets. \n Read more about the converter here: https://www.convertapi.com/numbers-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odc/to/jpg": {
      "summary": "ODC to JPG File Conversion API",
      "description": "The API for converting OpenOffice documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/odc-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odc/to/pdf": {
      "summary": "ODC to PDF File Conversion API",
      "description": "The API for converting OpenOffice documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/odc-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odc/to/png": {
      "summary": "ODC to PNG File Conversion API",
      "description": "The API for converting OpenOffice documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/odc-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odc/to/tiff": {
      "summary": "ODC to TIFF File Conversion API",
      "description": "The API for converting OpenOffice documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/odc-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odc/to/webp": {
      "summary": "ODC to WEBP File Conversion API",
      "description": "The API for converting OpenOffice documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/odc-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odf/to/jpg": {
      "summary": "ODF to JPG File Conversion API",
      "description": "The API for converting OpenOffice documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/odf-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odf/to/pdf": {
      "summary": "ODF to PDF File Conversion API",
      "description": "The API for converting OpenOffice documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/odf-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odf/to/png": {
      "summary": "ODF to PNG File Conversion API",
      "description": "The API for converting OpenOffice documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/odf-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odf/to/tiff": {
      "summary": "ODF to TIFF File Conversion API",
      "description": "The API for converting OpenOffice documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/odf-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odf/to/webp": {
      "summary": "ODF to WEBP File Conversion API",
      "description": "The API for converting OpenOffice documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/odf-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odg/to/pdf": {
      "summary": "ODG to PDF File Conversion API",
      "description": "The API for converting OpenOffice Draw drawings to PDF files. \n Read more about the converter here: https://www.convertapi.com/odg-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odp/to/jpg": {
      "summary": "ODP to JPG File Conversion API",
      "description": "The API for converting OpenOffice documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/odp-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odp/to/pdf": {
      "summary": "ODP to PDF File Conversion API",
      "description": "The API for converting OpenOffice documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/odp-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odp/to/png": {
      "summary": "ODP to PNG File Conversion API",
      "description": "The API for converting OpenOffice documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/odp-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odp/to/tiff": {
      "summary": "ODP to TIFF File Conversion API",
      "description": "The API for converting OpenOffice documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/odp-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odp/to/webp": {
      "summary": "ODP to WEBP File Conversion API",
      "description": "The API for converting OpenOffice documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/odp-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ods/to/jpg": {
      "summary": "ODS to JPG File Conversion API",
      "description": "The API for converting OpenOffice documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/ods-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ods/to/pdf": {
      "summary": "ODS to PDF File Conversion API",
      "description": "The API for converting OpenOffice documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/ods-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ods/to/png": {
      "summary": "ODS to PNG File Conversion API",
      "description": "The API for converting OpenOffice documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/ods-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ods/to/tiff": {
      "summary": "ODS to TIFF File Conversion API",
      "description": "The API for converting OpenOffice documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/ods-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ods/to/webp": {
      "summary": "ODS to WEBP File Conversion API",
      "description": "The API for converting OpenOffice documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/ods-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/doc": {
      "summary": "ODT to DOC File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-doc",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/docx": {
      "summary": "ODT to DOCX File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/jpg": {
      "summary": "ODT to JPG File Conversion API",
      "description": "The API for converting OpenOffice documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/odt-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/mhtml": {
      "summary": "ODT to MHTML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-mhtml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/odt": {
      "summary": "ODT to ODT File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/pdf": {
      "summary": "ODT to PDF File Conversion API",
      "description": "The API for converting OpenOffice documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/odt-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/png": {
      "summary": "ODT to PNG File Conversion API",
      "description": "The API for converting OpenOffice documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/odt-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/rtf": {
      "summary": "ODT to RTF File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/tiff": {
      "summary": "ODT to TIFF File Conversion API",
      "description": "The API for converting OpenOffice documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/odt-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/txt": {
      "summary": "ODT to TXT File Conversion API",
      "description": "The API for converting Word documents to Text files. \n Read more about the converter here: https://www.convertapi.com/odt-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Substitutions": {
                    "type": "boolean",
                    "description": "Replace similar symbols with their counterparts in a text file, such as a copyright symbol with (c).",
                    "default": false
                  },
                  "LineBreaks": {
                    "type": "boolean",
                    "description": "Inserts line breaks at the end of each line of text.",
                    "default": true
                  },
                  "TextEncoding": {
                    "enum": [
                      "auto",
                      "ascii",
                      "utf-7",
                      "utf-8",
                      "iso-8859-1",
                      "iso-8859-2",
                      "iso-8859-6",
                      "iso-8859-15",
                      "windows-1252",
                      "arabicasmo",
                      "baltic",
                      "centraleuropean",
                      "cyrillic",
                      "europa",
                      "extalphalowercase",
                      "greek",
                      "hebrew",
                      "hzgbsimplifiedchinese",
                      "german",
                      "japaneseshiftjis",
                      "koi8-r",
                      "koi8-u",
                      "korean",
                      "thai",
                      "turkish",
                      "unicodebigendian",
                      "unicodelittleendian",
                      "vietnamese"
                    ],
                    "type": "string",
                    "description": "Specifies what encoding the parser should use when converting text files.\n * `auto` - Auto\n * `ascii` - ASCII\n * `utf-7` - UTF-7 encoding\n * `utf-8` - UTF-8 encoding\n * `iso-8859-1` - ISO-8859-1\n * `iso-8859-2` - ISO-8859-2\n * `iso-8859-6` - ISO-8859-6\n * `iso-8859-15` - ISO-8859-15\n * `windows-1252` - Windows-1252\n * `arabicasmo` - Arabic ASMO\n * `baltic` - Baltic\n * `centraleuropean` - Central European\n * `cyrillic` - Cyrillic\n * `europa` - Europa\n * `extalphalowercase` - Extended Alpha lowercase\n * `greek` - Greek\n * `hebrew` - Hebrew\n * `hzgbsimplifiedchinese` - Simplified Chinese (HZGB)\n * `german` - German\n * `japaneseshiftjis` - Japanese (Shift-JIS)\n * `koi8-r` - KOI8-R\n * `koi8-u` - K0I8-U\n * `korean` - Korean\n * `thai` - Thai\n * `turkish` - Turkish\n * `unicodebigendian` - Unicode big endian\n * `unicodelittleendian` - Unicode little endian\n * `vietnamese` - Vietnamese",
                    "default": "auto"
                  },
                  "EndLineChar": {
                    "enum": [
                      "crlf",
                      "cr",
                      "lfcr",
                      "lf"
                    ],
                    "type": "string",
                    "description": "Set end of line character. The character which will be used to break lines.\n * `crlf` - CR+LF (Windows)\n * `cr` - CR (Windows)\n * `lfcr` - LFCR (Mac OS)\n * `lf` - LF (Mac OS)",
                    "default": "crlf"
                  },
                  "SaveFormat": {
                    "enum": [
                      "wintext",
                      "wintextlb",
                      "dostext",
                      "dostextlb",
                      "unicodetext"
                    ],
                    "type": "string",
                    "description": "Specifies the format to use when saving a document.\n * `wintext` - Windows Text\n * `wintextlb` - Windows Text with line breaks preserved\n * `dostext` - DOS text\n * `dostextlb` - DOS text with line breaks preserved\n * `unicodetext` - Unicode text format",
                    "default": "unicodetext"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/webp": {
      "summary": "ODT to WEBP File Conversion API",
      "description": "The API for converting OpenOffice documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/odt-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/xml": {
      "summary": "ODT to XML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/odt/to/xps": {
      "summary": "ODT to XPS File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/odt-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/oxps/to/pdf": {
      "summary": "OXPS to PDF File Conversion API",
      "description": "The API for converting XPS documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/oxps-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "DetectPageSize": {
                    "type": "boolean",
                    "description": "Detect and convert custom page sizes.",
                    "default": true
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/oxps/to/webp": {
      "summary": "OXPS to WEBP File Conversion API",
      "description": "The API for converting XPS documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/oxps-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "DetectPageSize": {
                    "type": "boolean",
                    "description": "Detect and convert custom page sizes.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/docx": {
      "summary": "PAGES to DOCX File Conversion API",
      "description": "The API for converting Apple iWork Pages to Word documents \n Read more about the converter here: https://www.convertapi.com/pages-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/epub": {
      "summary": "PAGES to EPUB File Conversion API",
      "description": "The API for converting Apple iWork Pages document to EPUB e-book file. \n Read more about the converter here: https://www.convertapi.com/pages-to-epub",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/jpg": {
      "summary": "PAGES to JPG File Conversion API",
      "description": "The API for converting Apple iWork Pages document to JPG image. \n Read more about the converter here: https://www.convertapi.com/pages-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/pdf": {
      "summary": "PAGES to PDF File Conversion API",
      "description": "The API for converting Apple iWork Pages document to PDF file. \n Read more about the converter here: https://www.convertapi.com/pages-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/png": {
      "summary": "PAGES to PNG File Conversion API",
      "description": "The API for converting Apple iWork Pages document to PNG image. \n Read more about the converter here: https://www.convertapi.com/pages-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/rtf": {
      "summary": "PAGES to RTF File Conversion API",
      "description": "The API for converting Apple iWork Pages to Word documents \n Read more about the converter here: https://www.convertapi.com/pages-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pages/to/txt": {
      "summary": "PAGES to TXT File Conversion API",
      "description": "The API for converting Apple iWork Pages to Word documents \n Read more about the converter here: https://www.convertapi.com/pages-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/compress": {
      "summary": "PDF to COMPRESS File Conversion API",
      "description": "Compress and reduce a PDF file size by up to 90% \n Read more about the converter here: https://www.convertapi.com/pdf-to-compress",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Presets": {
                    "enum": [
                      "none",
                      "text",
                      "archive",
                      "web",
                      "ebook",
                      "printer"
                    ],
                    "type": "string",
                    "description": "Choose compression level from presets. If preset is selected all other compression options are ignored.\n * `none` - Not set - advanced properties used\n * `text` - Text - 20 image DPI, lowest quality, highest compression\n * `archive` - Archive - 40 image DPI, low quality, high compression\n * `web` - Web - 75 image DPI, medium quality, high compression\n * `ebook` - Ebook - 150 image DPI, high quality, medium compression\n * `printer` - Printer - 300 image DPI, high quality, low compression",
                    "default": "none"
                  },
                  "ColorImageCompression": {
                    "enum": [
                      "none",
                      "jpg",
                      "jpx",
                      "zip"
                    ],
                    "type": "string",
                    "description": "Color image compression algorithm.\n * `none` - Image will be left uncompressed\n * `jpg` - JPEG compression\n * `jpx` - JPEG2000 compression (Acrobat 6/PDF v1.5 and later)\n * `zip` - Deflate ZIP compression",
                    "default": "jpg"
                  },
                  "ColorImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Color image compression quality. The parameter applies only to JPX and JPG compressions.",
                    "default": 50
                  },
                  "ColorImageDownsample": {
                    "type": "boolean",
                    "description": "Enable Bicubic image downsampling and decreases the number of pixels in the color image which in turn makes the file smaller.",
                    "default": false
                  },
                  "ColorImageThresholdDpi": {
                    "maximum": 3000,
                    "minimum": 72,
                    "type": "integer",
                    "description": "Threshold in DPI to activate color images resampling. ColorImageDownsample property must be enabled.",
                    "default": 200
                  },
                  "ColorImageResampleDpi": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Color image resolution in DPI after Bicubic resampling. ColorImageDownsample property must be enabled.",
                    "default": 150
                  },
                  "GrayscaleImageCompression": {
                    "enum": [
                      "none",
                      "jpg",
                      "jpx",
                      "zip"
                    ],
                    "type": "string",
                    "description": "Grayscale image compression algorithm.\n * `none` - Image will be left uncompressed\n * `jpg` - JPEG compression\n * `jpx` - JPEG2000 compression (Acrobat 6/PDF v1.5 and later)\n * `zip` - Deflate ZIP compression",
                    "default": "jpg"
                  },
                  "GrayscaleImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Grayscale image compression quality. The parameter applies only to JPX and JPG compressions.",
                    "default": 50
                  },
                  "GrayscaleImageDownsample": {
                    "type": "boolean",
                    "description": "Enable Bicubic image downsampling and decreases the number of pixels in the grayscale image which in turn makes the file smaller.",
                    "default": false
                  },
                  "GrayscaleImageThresholdDpi": {
                    "maximum": 3000,
                    "minimum": 72,
                    "type": "integer",
                    "description": "Threshold in DPI to activate grayscale images resampling. GrayscaleImageDownsample property must be enabled.",
                    "default": 200
                  },
                  "GrayscaleImageResampleDpi": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Grayscale image resolution in DPI after Bicubic resampling. GrayscaleImageDownsample property must be enabled.",
                    "default": 150
                  },
                  "MonochromeImageCompression": {
                    "enum": [
                      "none",
                      "jbig2",
                      "jbig2l",
                      "fax",
                      "zip"
                    ],
                    "type": "string",
                    "description": "Monochrome image compression algorithm.\n * `none` - Image will be left uncompressed\n * `jbig2` - JBIG2 lossy compression (Acrobat 5/PDF v1.4 and later)\n * `jbig2l` - JBIG2 lossless compression (Acrobat 5/PDF v1.4 and later)\n * `fax` - Group 4 CCITT facsimile/fax compression\n * `zip` - Deflate ZIP compression",
                    "default": "jbig2l"
                  },
                  "MonochromeImageQuality": {
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Monochrome image compression quality. The parameter applies only to jbig2 and jbig2l compressions.",
                    "default": 5
                  },
                  "MonochromeImageDownsample": {
                    "type": "boolean",
                    "description": "Enable Bicubic image downsampling and decreases the number of pixels in the monochrome image which in turn makes the file smaller.",
                    "default": false
                  },
                  "MonochromeImageThresholdDpi": {
                    "maximum": 3000,
                    "minimum": 100,
                    "type": "integer",
                    "description": "Threshold in DPI to activate Monochrome images resampling. MonochromeImageDownsample property must be enabled.",
                    "default": 200
                  },
                  "MonochromeImageResampleDpi": {
                    "maximum": 240,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Monochrome image resolution in DPI after Bicubic resampling. MonochromeImageDownsample property must be enabled.",
                    "default": 150
                  },
                  "UnembedBaseFonts": {
                    "type": "boolean",
                    "description": "Specifies whether to remove the base fonts from the PDF file.",
                    "default": false
                  },
                  "SubsetEmbeddedFonts": {
                    "type": "boolean",
                    "description": "Output PDF should only contain font characters utilized in the original document, and any unused glyphs from all fonts in the document should be removed.",
                    "default": false
                  },
                  "RemoveBookmarks": {
                    "type": "boolean",
                    "description": "Remove bookmarks from the PDF file.",
                    "default": false
                  },
                  "RemoveAnnotations": {
                    "type": "boolean",
                    "description": "Remove text annotations from the PDF file.",
                    "default": false
                  },
                  "RemoveForms": {
                    "type": "boolean",
                    "description": "Remove PDF forms from the PDF file.",
                    "default": false
                  },
                  "RemovePageLabels": {
                    "type": "boolean",
                    "description": "Remove page labels from the PDF file.",
                    "default": false
                  },
                  "RemoveLayers": {
                    "type": "boolean",
                    "description": "Removes hidden layers and flatten visible ones.",
                    "default": false
                  },
                  "RemoveArticleThreads": {
                    "type": "boolean",
                    "description": "Remove article threads from the PDF file.",
                    "default": false
                  },
                  "RemoveTaggedInfo": {
                    "type": "boolean",
                    "description": "Remove tagged information from the PDF file.",
                    "default": true
                  },
                  "RemovePageThumbnails": {
                    "type": "boolean",
                    "description": "Remove page thumbnails from the PDF file.",
                    "default": true
                  },
                  "RemoveDuplicates": {
                    "type": "boolean",
                    "description": "Remove duplicate fonts and color profiles from the PDF file.",
                    "default": true
                  },
                  "RemoveAlternateImages": {
                    "type": "boolean",
                    "description": "Removes alternate images and leave only the one for on-screen viewing.",
                    "default": true
                  },
                  "RemoveNamedDestinations": {
                    "type": "boolean",
                    "description": "Remove named destinations from the PDF file.",
                    "default": false
                  },
                  "RemoveEmbeddedFiles": {
                    "type": "boolean",
                    "description": "Remove embedded/attachments files from the PDF file.",
                    "default": true
                  },
                  "RemovePieceInformation": {
                    "type": "boolean",
                    "description": "Remove piece information dictionaries like Adobe Illustrator or Photoshop private data.",
                    "default": true
                  },
                  "CreateObjectStreams": {
                    "type": "boolean",
                    "description": "Create object streams in the PDF file. An object stream represents a stream that contains a sequence of PDF objects. This allows a greater number of PDF objects to be compressed. Property compatible with Acrobat 6/PDF v1.5 and later.",
                    "default": true
                  },
                  "Optimize": {
                    "type": "boolean",
                    "description": "Optimize page content streams in the PDF file.",
                    "default": true
                  },
                  "LzwToFlate": {
                    "type": "boolean",
                    "description": "In streams that use LZW encoding, use Flate instead.",
                    "default": true
                  },
                  "Linearize": {
                    "type": "boolean",
                    "description": "Linearize PDF file and optimize for fast Web View.",
                    "default": false
                  },
                  "PreservePdfa": {
                    "type": "boolean",
                    "description": "Preserve the PDF/A standard in the PDF file.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/csv": {
      "summary": "PDF to CSV File Conversion API",
      "description": "The API for extracting data from PDF documents to the CSV files. \n Read more about the converter here: https://www.convertapi.com/pdf-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Delimiter",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "EnableOcr": {
                    "enum": [
                      "Scanned",
                      "All",
                      "None"
                    ],
                    "type": "string",
                    "description": "Enable optical character recognition(OCR). Set the property to ALL to perform OCR on all pages and Scanned to perform OCR on scanned pages if PDF contains mixed pages - text and image pages.\n * `Scanned` - Scanned Only\n * `All` - All Pages\n * `None` - None",
                    "default": "Scanned"
                  },
                  "OcrLanguage": {
                    "enum": [
                      "ca",
                      "da",
                      "nl",
                      "de",
                      "es",
                      "en",
                      "he",
                      "pl",
                      "pt",
                      "ru",
                      "sv",
                      "tr",
                      "lt"
                    ],
                    "type": "string",
                    "description": "Set the OCR language. Ask support to add your language if missing.\n * `ca` - Catalan\n * `da` - Danish\n * `nl` - Dutch\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `he` - Hebrew\n * `pl` - Polish\n * `pt` - Portuguese\n * `ru` - Russian\n * `sv` - Swedish\n * `tr` - Turkish\n * `lt` - Lithuanian",
                    "default": "en"
                  },
                  "Delimiter": {
                    "type": "string",
                    "description": "Set fields separator.",
                    "default": ","
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/decompress": {
      "summary": "PDF to DECOMPRESS File Conversion API",
      "description": "Decompress PDF structure API. \n Read more about the converter here: https://www.convertapi.com/pdf-to-decompress",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/delete-pages": {
      "summary": "PDF to DELETE-PAGES File Conversion API",
      "description": "Remove the PDF pages from the PDF document. \n Read more about the converter here: https://www.convertapi.com/pdf-to-delete-pages",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "PageRange"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range or individual pages to delete. Example 1-10 or 1,2,5."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/docx": {
      "summary": "PDF to DOCX File Conversion API",
      "description": "Transform PDFs into Well-Formatted Editable Word Documents \n Read more about the converter here: https://www.convertapi.com/pdf-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Wysiwyg": {
                    "type": "boolean",
                    "description": "Persist exact formatting using text boxes.",
                    "default": false
                  },
                  "OcrLanguage": {
                    "enum": [
                      "automatic",
                      "ca",
                      "da",
                      "de",
                      "es",
                      "en",
                      "fr",
                      "fi",
                      "it",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "type": "string",
                    "description": "Set the OCR language.\n * `automatic` - Automatic\n * `ca` - Catalan\n * `da` - Danish\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `fr` - French\n * `fi` - Finnish\n * `it` - Italian\n * `nl` - Dutch\n * `no` - Norwegian\n * `pl` - Polish\n * `pt` - Portuguese\n * `ro` - Romanian\n * `ru` - Russian\n * `sv` - Swedish\n * `sl` - Slovenian\n * `tr` - Turkish",
                    "default": "automatic"
                  },
                  "EnableOcr": {
                    "type": "boolean",
                    "description": "Enable optical character recognition(OCR).",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/extract-images": {
      "summary": "PDF to EXTRACT-IMAGES File Conversion API",
      "description": "The API for extracting images from PDF document and saving them to JPG or PNG files. \n Read more about the converter here: https://www.convertapi.com/pdf-to-extract-images",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ImageOutputFormat": {
                    "enum": [
                      "default",
                      "jpg",
                      "png",
                      "tiff"
                    ],
                    "type": "string",
                    "description": "\n * `default` - Default\n * `jpg` - JPG\n * `png` - PNG\n * `tiff` - TIFF",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/fdf-extract": {
      "summary": "PDF to FDF-EXTRACT File Conversion API",
      "description": "Extract form data from a PDF form into an FDF file format \n Read more about the converter here: https://www.convertapi.com/pdf-to-fdf-extract",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/fdf-import": {
      "summary": "PDF to FDF-IMPORT File Conversion API",
      "description": "Import form data stored in FDF format into a PDF form \n Read more about the converter here: https://www.convertapi.com/pdf-to-fdf-import",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "FdfFile",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FdfFile": {
                    "type": "string",
                    "description": "Specifies the FDF file that contains structured form data. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/flatten": {
      "summary": "PDF to FLATTEN File Conversion API",
      "description": "Flatten PDF to prevent unwanted changes \n Read more about the converter here: https://www.convertapi.com/pdf-to-flatten",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "FlattenText": {
                    "type": "boolean",
                    "description": "Prevent text selection, copying, and extraction by turning the textual symbols into vectorial paths to make the PDF read-only while preserving the original vectorial PDF quality.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/html": {
      "summary": "PDF to HTML File Conversion API",
      "description": "Transform PDFs into Well-Formatted HTML Documents \n Read more about the converter here: https://www.convertapi.com/pdf-to-html",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Wysiwyg": {
                    "type": "boolean",
                    "description": "Persist exact formatting using text boxes.",
                    "default": true
                  },
                  "OcrLanguage": {
                    "enum": [
                      "automatic",
                      "ca",
                      "da",
                      "de",
                      "es",
                      "en",
                      "fr",
                      "fi",
                      "it",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "type": "string",
                    "description": "Set the OCR language.\n * `automatic` - Automatic\n * `ca` - Catalan\n * `da` - Danish\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `fr` - French\n * `fi` - Finnish\n * `it` - Italian\n * `nl` - Dutch\n * `no` - Norwegian\n * `pl` - Polish\n * `pt` - Portuguese\n * `ro` - Romanian\n * `ru` - Russian\n * `sv` - Swedish\n * `sl` - Slovenian\n * `tr` - Turkish",
                    "default": "automatic"
                  },
                  "EnableOcr": {
                    "type": "boolean",
                    "description": "Enable optical character recognition(OCR).",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/jpg": {
      "summary": "PDF to JPG File Conversion API",
      "description": "The API for converting PDF documents to JPG images and thumbnails. \n Read more about the converter here: https://www.convertapi.com/pdf-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected PDF."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set PDF page range to convert. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Rotate": {
                    "enum": [
                      "default",
                      "none",
                      "rotate90",
                      "rotate180",
                      "rotate270"
                    ],
                    "type": "string",
                    "description": "Set PDF page rotation before converting to image.\n * `default` - Default\n * `none` - None\n * `rotate90` - Rotate90\n * `rotate180` - Rotate180\n * `rotate270` - Rotate270",
                    "default": "default"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ColorSpace": {
                    "enum": [
                      "rgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `rgb` - RGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "rgb"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/merge": {
      "summary": "PDF to MERGE File Conversion API",
      "description": "Merge multiple PDF files into single document \n Read more about the converter here: https://www.convertapi.com/pdf-to-merge",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "RetainNumbering": {
                    "type": "boolean",
                    "description": "Keeps the original PDF labels numbering rather than re-numbering merged PDF from the 1 page.",
                    "default": false
                  },
                  "RemoveDuplicateFonts": {
                    "type": "boolean",
                    "description": "Do not include the same fonts from source PDFs while merging.",
                    "default": false
                  },
                  "BookmarksToc": {
                    "enum": [
                      "disabled",
                      "filename",
                      "title"
                    ],
                    "type": "string",
                    "description": "Adds a top-level bookmark for each file, using the filename or PDF title from metadata.\n * `disabled` - Disabled\n * `filename` - File Name\n * `title` - Title",
                    "default": "disabled"
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each page to fit a given page size.\n * `default` - Default\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation, works only along with PageSize property.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/meta": {
      "summary": "PDF to META File Conversion API",
      "description": "The API for reading PDF metadata and page count. \n Read more about the converter here: https://www.convertapi.com/pdf-to-meta",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/ocr": {
      "summary": "PDF to OCR File Conversion API",
      "description": "Convert PDF scans to searchable PDF documents. \n Read more about the converter here: https://www.convertapi.com/pdf-to-ocr",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "OcrLanguage": {
                    "enum": [
                      "ca",
                      "da",
                      "nl",
                      "de",
                      "es",
                      "en",
                      "he",
                      "pl",
                      "pt",
                      "ru",
                      "sv",
                      "tr",
                      "lt"
                    ],
                    "type": "string",
                    "description": "Set the OCR language. Ask support to add your language if missing.\n * `ca` - Catalan\n * `da` - Danish\n * `nl` - Dutch\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `he` - Hebrew\n * `pl` - Polish\n * `pt` - Portuguese\n * `ru` - Russian\n * `sv` - Swedish\n * `tr` - Turkish\n * `lt` - Lithuanian",
                    "default": "en"
                  },
                  "OutputType": {
                    "enum": [
                      "pdf",
                      "txt"
                    ],
                    "type": "string",
                    "description": "This property is used to determine how the OCR layer should be returned. If the output type is PDF, the OCR layer will be embedded into the PDF file. Alternatively, if a text output is selected, the OCR layer will be returned as a text file.\n * `pdf` - PDF file\n * `txt` - Text file",
                    "default": "pdf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/pdf": {
      "summary": "PDF to PDF File Conversion API",
      "description": "The API for manipulating PDF documents. \n Read more about the converter here: https://www.convertapi.com/pdf-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/pdfa": {
      "summary": "PDF to PDFA File Conversion API",
      "description": "Convert PDF to PDF/A for archiving and long-term preservation \n Read more about the converter here: https://www.convertapi.com/pdf-to-pdfa",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "PdfaVersion": {
                    "enum": [
                      "pdfa",
                      "pdfa2",
                      "pdfa2u",
                      "pdfa3",
                      "pdfa3u"
                    ],
                    "type": "string",
                    "description": "Set PDF/A version.\n * `pdfa` - PDF/A-1b\n * `pdfa2` - PDF/A-2b\n * `pdfa2u` - PDF/A-2u\n * `pdfa3` - PDF/A-3b\n * `pdfa3u` - PDF/A-3u",
                    "default": "pdfa2"
                  },
                  "PdfaOutputIntent": {
                    "enum": [
                      "srgb",
                      "jc200103",
                      "fogra27",
                      "swop",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set PDF/A output intent. These are supported sRGB, Japan Color 2001 Coated (JC200103), Europe ISO Coated (FOGRA27), U.S. Web Coated (SWOP), Gray Gamma 2.2 (GRAY).\n * `srgb` - sRGB\n * `jc200103` - Japan Color 2001 Coated\n * `fogra27` - Europe ISO Coated\n * `swop` - U.S. Web Coated\n * `gray` - Gray Gamma 2.2",
                    "default": "srgb"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/png": {
      "summary": "PDF to PNG File Conversion API",
      "description": "The API for converting PDF documents to PNG images and thumbnails. \n Read more about the converter here: https://www.convertapi.com/pdf-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected PDF."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set PDF page range to convert. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Rotate": {
                    "enum": [
                      "default",
                      "none",
                      "rotate90",
                      "rotate180",
                      "rotate270"
                    ],
                    "type": "string",
                    "description": "Set PDF page rotation before converting to image.\n * `default` - Default\n * `none` - None\n * `rotate90` - Rotate90\n * `rotate180` - Rotate180\n * `rotate270` - Rotate270",
                    "default": "default"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "BackgroundColor": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/pptx": {
      "summary": "PDF to PPTX File Conversion API",
      "description": "Effortless PDF to PowerPoint conversion with our powerful API \n Read more about the converter here: https://www.convertapi.com/pdf-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "OcrLanguage": {
                    "enum": [
                      "automatic",
                      "ca",
                      "da",
                      "de",
                      "es",
                      "en",
                      "fr",
                      "fi",
                      "it",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "type": "string",
                    "description": "Set the OCR language.\n * `automatic` - Automatic\n * `ca` - Catalan\n * `da` - Danish\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `fr` - French\n * `fi` - Finnish\n * `it` - Italian\n * `nl` - Dutch\n * `no` - Norwegian\n * `pl` - Polish\n * `pt` - Portuguese\n * `ro` - Romanian\n * `ru` - Russian\n * `sv` - Swedish\n * `sl` - Slovenian\n * `tr` - Turkish",
                    "default": "automatic"
                  },
                  "EnableOcr": {
                    "type": "boolean",
                    "description": "Enable optical character recognition(OCR).",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/protect": {
      "summary": "PDF to PROTECT File Conversion API",
      "description": "Protect and encrypt PDF documents securing with a password \n Read more about the converter here: https://www.convertapi.com/pdf-to-protect",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "EncryptionAlgorithm": {
                    "enum": [
                      "Standard40Bit",
                      "Standard128Bit",
                      "Aes128Bit",
                      "Aes256Bit"
                    ],
                    "type": "string",
                    "description": "Sets the encryption algorithm.\n * `Standard40Bit` - 40-bit RC4 algorithm. Acrobat 3 (PDF 1.1) and above\n * `Standard128Bit` - 128-bit RC4 algorithm. Acrobat 5 (PDF 1.4) and above\n * `Aes128Bit` - 128-bit AES algorithm. Acrobat 7 (PDF 1.6) and above\n * `Aes256Bit` - 256-bit AES algorithm. PDF 2.0",
                    "default": "Aes256Bit"
                  },
                  "EncryptMeta": {
                    "type": "boolean",
                    "description": "Encrypt metadata of PDF file.",
                    "default": false
                  },
                  "UserPassword": {
                    "type": "string",
                    "description": "Sets the user password (also known as a document open password) in the output PDF document. Users will be asked to enter this password before Acrobat Reader allows them to view the PDF document."
                  },
                  "OwnerPassword": {
                    "type": "string",
                    "description": "Sets owner password (also known as a permissions password). Using a owner password, you can restrict printing, editing, and copying content in the PDF. Recipients don’t need a password to open the document. They do need a password to change the restrictions the owner set."
                  },
                  "RespectOwnerPassword": {
                    "type": "boolean",
                    "description": "Enable the property if you want to respect the document's owner password and permissions. If disabled - the old owner's password and permissions will be removed by default. Setting this property requires you to enter the correct owner's password into the Password property for protected documents.",
                    "default": false
                  },
                  "PreservePermissions": {
                    "type": "boolean",
                    "description": "Enable the property if you want to keep the document permissions unchanged. It requires you to specify the OwnerPassword. If enabled, the document permission properties will be ignored.",
                    "default": false
                  },
                  "AllowEverything": {
                    "type": "boolean",
                    "description": "Enable or disable all permissions. The specific permissions listed below overrides this property.",
                    "default": false
                  },
                  "AssembleDocument": {
                    "type": "boolean",
                    "description": "Enable or disable assembly of the document - insert, rotate, or delete pages and create bookmarks or thumbnail images.",
                    "default": false
                  },
                  "CopyContents": {
                    "type": "boolean",
                    "description": "Enable or disable copy or extract text and graphics from the document.",
                    "default": false
                  },
                  "ModifyContents": {
                    "type": "boolean",
                    "description": "Enable or disable changing the contents of the document.",
                    "default": false
                  },
                  "ExtractContents": {
                    "type": "boolean",
                    "description": "Enable or disable extract text and graphics.",
                    "default": false
                  },
                  "ModifyAnnotations": {
                    "type": "boolean",
                    "description": "Enable or disable adding or modifying text annotations and fill in interactive form fields.",
                    "default": false
                  },
                  "FillFormFields": {
                    "type": "boolean",
                    "description": "Enable or disable fill-in existing interactive form fields, including signature fields.",
                    "default": false
                  },
                  "PrintDocument": {
                    "type": "boolean",
                    "description": "Enable or disable document printing.",
                    "default": false
                  },
                  "PrintFaithfulCopy": {
                    "type": "boolean",
                    "description": "Enable or disable printing of the document to a representation from which a faithful digital copy of the PDF content could be generated.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/rasterize": {
      "summary": "PDF to RASTERIZE File Conversion API",
      "description": "Rasterize PDF. Convert vector PDF into raster PDF. \n Read more about the converter here: https://www.convertapi.com/pdf-to-rasterize",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/repair": {
      "summary": "PDF to REPAIR File Conversion API",
      "description": "Repair corrupt and damaged PDF files \n Read more about the converter here: https://www.convertapi.com/pdf-to-repair",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Rebuild": {
                    "type": "boolean",
                    "description": "Rebuild PDF structure.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/rotate": {
      "summary": "PDF to ROTATE File Conversion API",
      "description": "Rotate PDF pages. \n Read more about the converter here: https://www.convertapi.com/pdf-to-rotate",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "RotatePage": {
                    "enum": [
                      "-270",
                      "-90",
                      "90",
                      "180",
                      "270"
                    ],
                    "type": "string",
                    "description": "Rotates page(s) by selected degree.\n * `-270` - -270 degree\n * `-90` - -90 degree\n * `90` - 90 degree\n * `180` - 180 degree\n * `270` - 270 degree",
                    "default": "90"
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/split": {
      "summary": "PDF to SPLIT File Conversion API",
      "description": "Split PDF files into pages and save them in individual PDF. Extract pages from a PDF to create a new PDF Document. \n Read more about the converter here: https://www.convertapi.com/pdf-to-split",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "SplitByPattern": {
                    "type": "string",
                    "description": "Split PDF into chunks of pages by a pattern. For example, if you set 3,2 for a ten-page PDF, it would be divided into four PDF files that contain 3,2,3,2 pages accordingly. The pattern is repeated until there are no pages left.",
                    "default": "1"
                  },
                  "SplitByCustomRange": {
                    "type": "string",
                    "description": "Split PDF by a custom range. Individual page numbers separated by commas or page ranges are supported and can be combined. For example, if set 1,3,4-5,6-9 for a ten-page PDF, it would create four PDF documents - the first PDF contains only the first page, the second PDF contains the third page, the third PDF contains pages from 3 to 5, and the last PDF contains pages from 6 to 9."
                  },
                  "ExtractPages": {
                    "type": "string",
                    "description": "Each page included in this range will be split individually (one page per document). A page range or individual page numbers separated by a comma is supported (see SplitByCustomRange description for a detailed explanation)."
                  },
                  "MergeRanges": {
                    "type": "boolean",
                    "description": "Merge all ranges in one PDF file.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/squeeze": {
      "summary": "PDF to SQUEEZE File Conversion API",
      "description": "Losslessly attempt to reduce PDF file size. \n Read more about the converter here: https://www.convertapi.com/pdf-to-squeeze",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "RemoveInvisibleObjects": {
                    "type": "boolean",
                    "description": "Remove invisible objects like duplicate objects, structure information, unused resources, and piece information that do not affect the visual appearance of a PDF document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/svg": {
      "summary": "PDF to SVG File Conversion API",
      "description": "The API for converting PDF files to SVG vector images and thumbnails. \n Read more about the converter here: https://www.convertapi.com/pdf-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": -360,
                    "type": "integer",
                    "description": "Rotate image by angle."
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/tiff": {
      "summary": "PDF to TIFF File Conversion API",
      "description": "The API for converting PDF documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/pdf-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/tiff-fax": {
      "summary": "PDF to TIFF-FAX File Conversion API",
      "description": "The API for converting PDF documents to TIFF FAX images. \n Read more about the converter here: https://www.convertapi.com/pdf-to-tiff-fax",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolution": {
                    "enum": [
                      "204x98",
                      "204x196"
                    ],
                    "type": "string",
                    "description": "Set output image resolution in dpi.\n * `204x98` - 204x98 dpi\n * `204x196` - 204x196 dpi",
                    "default": "204x98"
                  },
                  "ImageWidth": {
                    "enum": [
                      "1728",
                      "2048",
                      "2482"
                    ],
                    "type": "string",
                    "description": "Image width in pixels.\n * `1728` - 1728 pixels (8.5 in)\n * `2048` - 2048 pixels (10 in)\n * `2482` - 2482 pixels (12.2 in)",
                    "default": "1728"
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "DitheringMethod": {
                    "enum": [
                      "default",
                      "sierra",
                      "burkes",
                      "stucki",
                      "floyd",
                      "jarvis",
                      "cluster6",
                      "cluster8",
                      "cluster16",
                      "bayer4",
                      "bayer8"
                    ],
                    "type": "string",
                    "description": "Specifies the dithering algorithm.\n * `default` - Default\n * `sierra` - Sierra\n * `burkes` - Burkes\n * `stucki` - Stucki\n * `floyd` - Floyd\n * `jarvis` - Jarvis\n * `cluster6` - Cluster 6x6\n * `cluster8` - Cluster 8x8\n * `cluster16` - Cluster 16x16\n * `bayer4` - Bayer 4x4\n * `bayer8` - Bayer 8x8",
                    "default": "default"
                  },
                  "Wts": {
                    "type": "boolean",
                    "description": "Use Well Tempered Screening algorithm for halftoning.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF FAX type.\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "monochromeg4"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/txt": {
      "summary": "PDF to TXT File Conversion API",
      "description": "The API for converting PDF document to a plain text file, extract text from PDF. \n Read more about the converter here: https://www.convertapi.com/pdf-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "OcrLanguage": {
                    "enum": [
                      "automatic",
                      "ca",
                      "da",
                      "de",
                      "es",
                      "en",
                      "fr",
                      "fi",
                      "it",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "type": "string",
                    "description": "Set the OCR language.\n * `automatic` - Automatic\n * `ca` - Catalan\n * `da` - Danish\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `fr` - French\n * `fi` - Finnish\n * `it` - Italian\n * `nl` - Dutch\n * `no` - Norwegian\n * `pl` - Polish\n * `pt` - Portuguese\n * `ro` - Romanian\n * `ru` - Russian\n * `sv` - Swedish\n * `sl` - Slovenian\n * `tr` - Turkish",
                    "default": "automatic"
                  },
                  "EnableOcr": {
                    "type": "boolean",
                    "description": "Enable optical character recognition(OCR).",
                    "default": true
                  },
                  "IncludeFormatting": {
                    "type": "boolean",
                    "description": "Persist formatting while extracting text. Only works when RemoveHeadersFooters and RemoveFootnotes properties are disabled.",
                    "default": false
                  },
                  "RemoveHeadersFooters": {
                    "type": "boolean",
                    "description": "Remove headers and footers from the document.",
                    "default": false
                  },
                  "RemoveFootnotes": {
                    "type": "boolean",
                    "description": "Remove footnotes from the document.",
                    "default": false
                  },
                  "RemoveTables": {
                    "type": "boolean",
                    "description": "Remove tables from the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/unprotect": {
      "summary": "PDF to UNPROTECT File Conversion API",
      "description": "The API for unlocking PDF documents, remove owner and user password \n Read more about the converter here: https://www.convertapi.com/pdf-to-unprotect",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Enter user password to remove User protection. Leave the parameter empty to remove Owner protection."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/watermark": {
      "summary": "PDF to WATERMARK File Conversion API",
      "description": "Watermark PDF files. Stamp a PDF with the text. \n Read more about the converter here: https://www.convertapi.com/pdf-to-watermark",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "Text"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Text": {
                    "type": "string",
                    "description": ""
                  },
                  "FontName": {
                    "enum": [
                      "Arial",
                      "Bahnschrift",
                      "Calibri",
                      "Cambria",
                      "Consolas",
                      "Constantia",
                      "Courier New",
                      "Georgia",
                      "Tahoma",
                      "Times New Roman",
                      "Verdana"
                    ],
                    "type": "string",
                    "description": "Specifies the watermark font name. Contact us if you are looking for a specific font for a watermark that is missing from the list.\n * `Arial` - Arial\n * `Bahnschrift` - Bahnschrift\n * `Calibri` - Calibri\n * `Cambria` - Cambria\n * `Consolas` - Consolas\n * `Constantia` - Constantia\n * `Courier New` - Courier New\n * `Georgia` - Georgia\n * `Tahoma` - Tahoma\n * `Times New Roman` - Times New Roman\n * `Verdana` - Verdana",
                    "default": "Arial"
                  },
                  "FontSize": {
                    "maximum": 200,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark font size.",
                    "default": 40
                  },
                  "FontColor": {
                    "type": "string",
                    "description": "Specifies the watermark font color.",
                    "default": "#ffffff"
                  },
                  "StrokeColor": {
                    "type": "string",
                    "description": "Specifies font stroke color.",
                    "default": "#271851"
                  },
                  "StrokeWidth": {
                    "maximum": 200,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the stroke width.",
                    "default": 1
                  },
                  "FontEmbed": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be embedded.",
                    "default": true
                  },
                  "FontSubset": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be subset.",
                    "default": true
                  },
                  "FontEncoding": {
                    "type": "string",
                    "description": "Specifies the font encoding."
                  },
                  "TextRenderingMode": {
                    "enum": [
                      "filltext",
                      "stroketext",
                      "fillstroke",
                      "invisible"
                    ],
                    "type": "string",
                    "description": "Specifies the text rendering mode.\n * `filltext` - fill text without stroke\n * `stroketext` - stroke text without fill\n * `fillstroke` - fill and stroke\n * `invisible` - invisible",
                    "default": "fillstroke"
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the watermark rotation angle in degrees.",
                    "default": 0
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Opacity": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies watermark opacity level.",
                    "default": 100
                  },
                  "Style": {
                    "enum": [
                      "stamp",
                      "watermark"
                    ],
                    "type": "string",
                    "description": "Specifies watermark style, stamp or watermark. The stamp is placed over page content and watermark under page content.\n * `stamp` - stamp\n * `watermark` - watermark",
                    "default": "stamp"
                  },
                  "GoToLink": {
                    "type": "string",
                    "description": "Specifies the web address to go when the watermark is clicked."
                  },
                  "GoToPage": {
                    "type": "string",
                    "description": "Specifies the page number to go when the watermark is clicked."
                  },
                  "PageRotation": {
                    "type": "boolean",
                    "description": "Specifies whether to use the page rotation parameter when placing watermark.",
                    "default": false
                  },
                  "CropBox": {
                    "type": "boolean",
                    "description": "Specifies whether to use the page crop box to position watermark.",
                    "default": false
                  },
                  "HorizontalAlignment": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the horizontal watermark alignment.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "center"
                  },
                  "VerticalAlignment": {
                    "enum": [
                      "top",
                      "center",
                      "bottom"
                    ],
                    "type": "string",
                    "description": "Specifies the vertical watermark alignment.\n * `top` - top\n * `center` - center\n * `bottom` - bottom",
                    "default": "center"
                  },
                  "PositionX": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark X coordinate. If set overrides property HorizontalAlignment."
                  },
                  "PositionY": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark Y coordinate. If set overrides property VerticalAlignment."
                  },
                  "PositionUnit": {
                    "enum": [
                      "pt",
                      "in",
                      "mm",
                      "cm"
                    ],
                    "type": "string",
                    "description": "Specifies measurement unit to use for the PositionX and PositionY properties.\n * `pt` - points\n * `in` - inches\n * `mm` - millimeters\n * `cm` - centimeters",
                    "default": "pt"
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/watermark-overlay": {
      "summary": "PDF to WATERMARK-OVERLAY File Conversion API",
      "description": "Overlay your PDF with Watermark \n Read more about the converter here: https://www.convertapi.com/pdf-to-watermark-overlay",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "OverlayFile"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "OverlayFile": {
                    "type": "string",
                    "description": "Specifies the PDF file to use as overlay. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "OverlayPage": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the page to use as overlay from the OverlayFile file.",
                    "default": 1
                  },
                  "Scale": {
                    "maximum": 2000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the watermark scale in percent.",
                    "default": 100
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Opacity": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies watermark opacity level.",
                    "default": 100
                  },
                  "Style": {
                    "enum": [
                      "stamp",
                      "watermark"
                    ],
                    "type": "string",
                    "description": "Specifies watermark style, stamp or watermark. The stamp is placed over page content and watermark under page content.\n * `stamp` - stamp\n * `watermark` - watermark",
                    "default": "watermark"
                  },
                  "GoToLink": {
                    "type": "string",
                    "description": "Specifies the web address to go when the watermark is clicked."
                  },
                  "GoToPage": {
                    "type": "string",
                    "description": "Specifies the page number to go when the watermark is clicked."
                  },
                  "PageRotation": {
                    "type": "boolean",
                    "description": "Specifies whether to use the page rotation parameter when placing watermark.",
                    "default": false
                  },
                  "CropBox": {
                    "type": "boolean",
                    "description": "Specifies whether to use the page crop box to position watermark.",
                    "default": false
                  },
                  "HorizontalAlignment": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the horizontal watermark alignment.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "center"
                  },
                  "VerticalAlignment": {
                    "enum": [
                      "top",
                      "center",
                      "bottom"
                    ],
                    "type": "string",
                    "description": "Specifies the vertical watermark alignment.\n * `top` - top\n * `center` - center\n * `bottom` - bottom",
                    "default": "center"
                  },
                  "PositionX": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark X coordinate. If set overrides property HorizontalAlignment."
                  },
                  "PositionY": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark Y coordinate. If set overrides property VerticalAlignment."
                  },
                  "PositionUnit": {
                    "enum": [
                      "pt",
                      "in",
                      "mm",
                      "cm"
                    ],
                    "type": "string",
                    "description": "Specifies measurement unit to use for the PositionX and PositionY properties.\n * `pt` - points\n * `in` - inches\n * `mm` - millimeters\n * `cm` - centimeters",
                    "default": "pt"
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/watermark-textbox": {
      "summary": "PDF to WATERMARK-TEXTBOX File Conversion API",
      "description": "Stamp a PDF with the text box. \n Read more about the converter here: https://www.convertapi.com/pdf-to-watermark-textbox",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "Text"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Text": {
                    "type": "string",
                    "description": "Specifies the text to use as text box watermark. The list of supported variables: %N% - new line, %PAGE% - current page number, %PAGES% - total number of pages, %FILENAME% - name of the file, %WEEKDAY% - full weekday name, %WEEKDAY_SHORT% - abbreviated weekday name, %MONTH% - month number (1-12), %MONTHNAME% - full month name, %MONTHNAME_SHORT% - abbreviated month name, %YEAR% - year with century (YYYY), %YEAR_SHORT% - year without century (YY), %DAY% - day of month, %DAY_YEAR% - day of the year (1 -366), %HOUR% - hour (01- 12), %HOURS% - hour (00-23), %MINUTES% - minutes (00-59), %SECONDS% - seconds (00-59), %AMPM% - AM PM, %DATE% - local date representation, %TIME% - local time representation, %DATETIME% - local date and time, %AUTHOR% - document Author, %TITLE% - document Title, %SUBJECT% - document Subject, %KEYWORDS% - document Keywords."
                  },
                  "TextAlign": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the watermark text align.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "left"
                  },
                  "WordWrap": {
                    "type": "boolean",
                    "description": "Specifies whether to enable word wrap in case text does not fit in one line.",
                    "default": false
                  },
                  "LineSpacing": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the watermark text line spacing.",
                    "default": 5
                  },
                  "FontName": {
                    "enum": [
                      "Arial",
                      "Bahnschrift",
                      "Calibri",
                      "Cambria",
                      "Consolas",
                      "Constantia",
                      "Courier New",
                      "Georgia",
                      "Tahoma",
                      "Times New Roman",
                      "Verdana"
                    ],
                    "type": "string",
                    "description": "Specifies the watermark font name. Contact us if you are looking for a specific font for a watermark that is missing from the list.\n * `Arial` - Arial\n * `Bahnschrift` - Bahnschrift\n * `Calibri` - Calibri\n * `Cambria` - Cambria\n * `Consolas` - Consolas\n * `Constantia` - Constantia\n * `Courier New` - Courier New\n * `Georgia` - Georgia\n * `Tahoma` - Tahoma\n * `Times New Roman` - Times New Roman\n * `Verdana` - Verdana",
                    "default": "Arial"
                  },
                  "FontSize": {
                    "maximum": 200,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark font size.",
                    "default": 40
                  },
                  "FontColor": {
                    "type": "string",
                    "description": "Specifies the watermark font color.",
                    "default": "#ffffff"
                  },
                  "StrokeColor": {
                    "type": "string",
                    "description": "Specifies font stroke color.",
                    "default": "#271851"
                  },
                  "StrokeWidth": {
                    "maximum": 200,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the stroke width.",
                    "default": 1
                  },
                  "FontEmbed": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be embedded.",
                    "default": true
                  },
                  "FontSubset": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be subset.",
                    "default": true
                  },
                  "FontEncoding": {
                    "type": "string",
                    "description": "Specifies the font encoding."
                  },
                  "TextRenderingMode": {
                    "enum": [
                      "filltext",
                      "stroketext",
                      "fillstroke",
                      "invisible"
                    ],
                    "type": "string",
                    "description": "Specifies the text rendering mode.\n * `filltext` - fill text without stroke\n * `stroketext` - stroke text without fill\n * `fillstroke` - fill and stroke\n * `invisible` - invisible",
                    "default": "fillstroke"
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the watermark rotation angle in degrees.",
                    "default": 0
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "Opacity": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies watermark opacity level.",
                    "default": 100
                  },
                  "Style": {
                    "enum": [
                      "stamp",
                      "watermark"
                    ],
                    "type": "string",
                    "description": "Specifies watermark style, stamp or watermark. The stamp is placed over page content and watermark under page content.\n * `stamp` - stamp\n * `watermark` - watermark",
                    "default": "stamp"
                  },
                  "GoToLink": {
                    "type": "string",
                    "description": "Specifies the web address to go when the watermark is clicked."
                  },
                  "GoToPage": {
                    "type": "string",
                    "description": "Specifies the page number to go when the watermark is clicked."
                  },
                  "PageRotation": {
                    "type": "boolean",
                    "description": "Specifies whether to use the page rotation parameter when placing watermark.",
                    "default": false
                  },
                  "CropBox": {
                    "type": "boolean",
                    "description": "Specifies whether to use the page crop box to position watermark.",
                    "default": false
                  },
                  "HorizontalAlignment": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the horizontal watermark alignment.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "center"
                  },
                  "VerticalAlignment": {
                    "enum": [
                      "top",
                      "center",
                      "bottom"
                    ],
                    "type": "string",
                    "description": "Specifies the vertical watermark alignment.\n * `top` - top\n * `center` - center\n * `bottom` - bottom",
                    "default": "center"
                  },
                  "PositionX": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark X coordinate. If set overrides property HorizontalAlignment."
                  },
                  "PositionY": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark Y coordinate. If set overrides property VerticalAlignment."
                  },
                  "PositionUnit": {
                    "enum": [
                      "pt",
                      "in",
                      "mm",
                      "cm"
                    ],
                    "type": "string",
                    "description": "Specifies measurement unit to use for the PositionX and PositionY properties.\n * `pt` - points\n * `in` - inches\n * `mm` - millimeters\n * `cm` - centimeters",
                    "default": "pt"
                  },
                  "Height": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Specifies the watermark height.",
                    "default": 500
                  },
                  "Width": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Specifies the watermark width.",
                    "default": 500
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/webp": {
      "summary": "PDF to WEBP File Conversion API",
      "description": "The API for converting PDF documents to Webp images. \n Read more about the converter here: https://www.convertapi.com/pdf-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageAntialiasing": {
                    "maximum": 8,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Control the use of text and graphics subsample antialiasing. The subsampling box size should be 8 bits for optimum text antialiasing, but smaller values can be used for faster rendering.",
                    "default": 8
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": -360,
                    "type": "integer",
                    "description": "Rotate image by angle."
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pdf/to/xlsx": {
      "summary": "PDF to XLSX File Conversion API",
      "description": "Accurate PDF to Excel Data and Table Extraction \n Read more about the converter here: https://www.convertapi.com/pdf-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 600
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "OcrLanguage": {
                    "enum": [
                      "automatic",
                      "ca",
                      "da",
                      "de",
                      "es",
                      "en",
                      "fr",
                      "fi",
                      "it",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "type": "string",
                    "description": "Set the OCR language.\n * `automatic` - Automatic\n * `ca` - Catalan\n * `da` - Danish\n * `de` - German\n * `es` - Spanish\n * `en` - English\n * `fr` - French\n * `fi` - Finnish\n * `it` - Italian\n * `nl` - Dutch\n * `no` - Norwegian\n * `pl` - Polish\n * `pt` - Portuguese\n * `ro` - Romanian\n * `ru` - Russian\n * `sv` - Swedish\n * `sl` - Slovenian\n * `tr` - Turkish",
                    "default": "automatic"
                  },
                  "EnableOcr": {
                    "type": "boolean",
                    "description": "Enable optical character recognition(OCR).",
                    "default": true
                  },
                  "IncludeFormatting": {
                    "type": "boolean",
                    "description": "Include non-table content in an excel file, like images and paragraphs.",
                    "default": false
                  },
                  "SingleSheet": {
                    "type": "boolean",
                    "description": "Combine extracted tables into a single sheet.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/gif": {
      "summary": "PNG to GIF File Conversion API",
      "description": "The API for converting JPG, PNG, and GIF images to single and animated GIF files. \n Read more about the converter here: https://www.convertapi.com/png-to-gif",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "PersistAnimation": {
                    "type": "boolean",
                    "description": "Read animation values AnimationIterations and AnimationDelay from GIF file. Only works if GIF file is added to file list.",
                    "default": true
                  },
                  "AnimationDelay": {
                    "maximum": 20000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Animation delay in milliseconds before playing the next image in an animated sequence.",
                    "default": 100
                  },
                  "AnimationIterations": {
                    "maximum": 1000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the number of iterations to loop an animation. Zero is infinity.",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/jpg": {
      "summary": "PNG to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/png-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/pdf": {
      "summary": "PNG to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/png-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/png": {
      "summary": "PNG to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/png-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/pnm": {
      "summary": "PNG to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/png-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/svg": {
      "summary": "PNG to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/png-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/tiff": {
      "summary": "PNG to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/png-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/watermark": {
      "summary": "PNG to WATERMARK File Conversion API",
      "description": "Watermark PNG image. Stamp a PNG with the text. \n Read more about the converter here: https://www.convertapi.com/png-to-watermark",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "Text"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Text": {
                    "type": "string",
                    "description": ""
                  },
                  "FontName": {
                    "enum": [
                      "Arial",
                      "Bahnschrift",
                      "Calibri",
                      "Cambria",
                      "Consolas",
                      "Constantia",
                      "Courier New",
                      "Georgia",
                      "Tahoma",
                      "Times New Roman",
                      "Verdana"
                    ],
                    "type": "string",
                    "description": "Specifies the watermark font name. Contact us if you are looking for a specific font for a watermark that is missing from the list.\n * `Arial` - Arial\n * `Bahnschrift` - Bahnschrift\n * `Calibri` - Calibri\n * `Cambria` - Cambria\n * `Consolas` - Consolas\n * `Constantia` - Constantia\n * `Courier New` - Courier New\n * `Georgia` - Georgia\n * `Tahoma` - Tahoma\n * `Times New Roman` - Times New Roman\n * `Verdana` - Verdana",
                    "default": "Arial"
                  },
                  "FontSize": {
                    "maximum": 200,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark font size.",
                    "default": 40
                  },
                  "FontColor": {
                    "type": "string",
                    "description": "Specifies the watermark font color.",
                    "default": "#ffffff"
                  },
                  "StrokeColor": {
                    "type": "string",
                    "description": "Specifies font stroke color.",
                    "default": "#271851"
                  },
                  "StrokeWidth": {
                    "maximum": 200,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the stroke width.",
                    "default": 1
                  },
                  "FontEmbed": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be embedded.",
                    "default": true
                  },
                  "FontSubset": {
                    "type": "boolean",
                    "description": "Specifies whether fonts should be subset.",
                    "default": true
                  },
                  "FontEncoding": {
                    "type": "string",
                    "description": "Specifies the font encoding."
                  },
                  "TextRenderingMode": {
                    "enum": [
                      "filltext",
                      "stroketext",
                      "fillstroke",
                      "invisible"
                    ],
                    "type": "string",
                    "description": "Specifies the text rendering mode.\n * `filltext` - fill text without stroke\n * `stroketext` - stroke text without fill\n * `fillstroke` - fill and stroke\n * `invisible` - invisible",
                    "default": "fillstroke"
                  },
                  "Rotate": {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies the watermark rotation angle in degrees.",
                    "default": 0
                  },
                  "HorizontalAlignment": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the horizontal watermark alignment.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "center"
                  },
                  "VerticalAlignment": {
                    "enum": [
                      "top",
                      "center",
                      "bottom"
                    ],
                    "type": "string",
                    "description": "Specifies the vertical watermark alignment.\n * `top` - top\n * `center` - center\n * `bottom` - bottom",
                    "default": "center"
                  },
                  "PositionX": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark X coordinate. If set overrides property HorizontalAlignment."
                  },
                  "PositionY": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Specifies the watermark Y coordinate. If set overrides property VerticalAlignment."
                  },
                  "PositionUnit": {
                    "enum": [
                      "pt",
                      "in",
                      "mm",
                      "cm"
                    ],
                    "type": "string",
                    "description": "Specifies measurement unit to use for the PositionX and PositionY properties.\n * `pt` - points\n * `in` - inches\n * `mm` - millimeters\n * `cm` - centimeters",
                    "default": "pt"
                  },
                  "Opacity": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Specifies watermark opacity level.",
                    "default": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/png/to/webp": {
      "summary": "PNG to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/png-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/potx/to/jpg": {
      "summary": "POTX to JPG File Conversion API",
      "description": "The API for converting PowerPoint presentation to JPG image. \n Read more about the converter here: https://www.convertapi.com/potx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/potx/to/pdf": {
      "summary": "POTX to PDF File Conversion API",
      "description": "The API for converting PowerPoint presentation to PDF file. \n Read more about the converter here: https://www.convertapi.com/potx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/potx/to/png": {
      "summary": "POTX to PNG File Conversion API",
      "description": "The API for converting PowerPoint presentation to PNG image. \n Read more about the converter here: https://www.convertapi.com/potx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/potx/to/pptx": {
      "summary": "POTX to PPTX File Conversion API",
      "description": "The API for converting PowerPoint presentations to PPTX file format. \n Read more about the converter here: https://www.convertapi.com/potx-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/potx/to/tiff": {
      "summary": "POTX to TIFF File Conversion API",
      "description": "The API for converting PowerPoint presentation to TIFF image. \n Read more about the converter here: https://www.convertapi.com/potx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/potx/to/webp": {
      "summary": "POTX to WEBP File Conversion API",
      "description": "The API for converting PowerPoint presentation to WEBP image. \n Read more about the converter here: https://www.convertapi.com/potx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pps/to/jpg": {
      "summary": "PPS to JPG File Conversion API",
      "description": "The API for converting PowerPoint presentation to JPG image. \n Read more about the converter here: https://www.convertapi.com/pps-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pps/to/pdf": {
      "summary": "PPS to PDF File Conversion API",
      "description": "The API for converting PowerPoint presentation to PDF file. \n Read more about the converter here: https://www.convertapi.com/pps-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pps/to/png": {
      "summary": "PPS to PNG File Conversion API",
      "description": "The API for converting PowerPoint presentation to PNG image. \n Read more about the converter here: https://www.convertapi.com/pps-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pps/to/pptx": {
      "summary": "PPS to PPTX File Conversion API",
      "description": "The API for converting PowerPoint presentations to PPTX file format. \n Read more about the converter here: https://www.convertapi.com/pps-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pps/to/tiff": {
      "summary": "PPS to TIFF File Conversion API",
      "description": "The API for converting PowerPoint presentation to TIFF image. \n Read more about the converter here: https://www.convertapi.com/pps-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pps/to/webp": {
      "summary": "PPS to WEBP File Conversion API",
      "description": "The API for converting PowerPoint presentation to WEBP image. \n Read more about the converter here: https://www.convertapi.com/pps-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppsx/to/jpg": {
      "summary": "PPSX to JPG File Conversion API",
      "description": "The API for converting PowerPoint presentation to JPG image. \n Read more about the converter here: https://www.convertapi.com/ppsx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppsx/to/pdf": {
      "summary": "PPSX to PDF File Conversion API",
      "description": "The API for converting PowerPoint presentation to PDF file. \n Read more about the converter here: https://www.convertapi.com/ppsx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppsx/to/png": {
      "summary": "PPSX to PNG File Conversion API",
      "description": "The API for converting PowerPoint presentation to PNG image. \n Read more about the converter here: https://www.convertapi.com/ppsx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppsx/to/pptx": {
      "summary": "PPSX to PPTX File Conversion API",
      "description": "The API for converting PowerPoint presentations to PPTX file format. \n Read more about the converter here: https://www.convertapi.com/ppsx-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppsx/to/tiff": {
      "summary": "PPSX to TIFF File Conversion API",
      "description": "The API for converting PowerPoint presentation to TIFF image. \n Read more about the converter here: https://www.convertapi.com/ppsx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppsx/to/webp": {
      "summary": "PPSX to WEBP File Conversion API",
      "description": "The API for converting PowerPoint presentation to WEBP image. \n Read more about the converter here: https://www.convertapi.com/ppsx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppt/to/jpg": {
      "summary": "PPT to JPG File Conversion API",
      "description": "The API for converting PowerPoint presentation to JPG image. \n Read more about the converter here: https://www.convertapi.com/ppt-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppt/to/pdf": {
      "summary": "PPT to PDF File Conversion API",
      "description": "The API for converting PowerPoint presentation to PDF file. \n Read more about the converter here: https://www.convertapi.com/ppt-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppt/to/png": {
      "summary": "PPT to PNG File Conversion API",
      "description": "The API for converting PowerPoint presentation to PNG image. \n Read more about the converter here: https://www.convertapi.com/ppt-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppt/to/pptx": {
      "summary": "PPT to PPTX File Conversion API",
      "description": "The API for converting PowerPoint presentations to PPTX file format. \n Read more about the converter here: https://www.convertapi.com/ppt-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppt/to/tiff": {
      "summary": "PPT to TIFF File Conversion API",
      "description": "The API for converting PowerPoint presentation to TIFF image. \n Read more about the converter here: https://www.convertapi.com/ppt-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ppt/to/webp": {
      "summary": "PPT to WEBP File Conversion API",
      "description": "The API for converting PowerPoint presentation to WEBP image. \n Read more about the converter here: https://www.convertapi.com/ppt-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/jpg": {
      "summary": "PPTX to JPG File Conversion API",
      "description": "The API for converting PowerPoint presentation to JPG image. \n Read more about the converter here: https://www.convertapi.com/pptx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/key": {
      "summary": "PPTX to KEY File Conversion API",
      "description": "The API for converting Powerpoint presentation to Apple iWork Keynote presentation. \n Read more about the converter here: https://www.convertapi.com/pptx-to-key",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/pdf": {
      "summary": "PPTX to PDF File Conversion API",
      "description": "The API for converting PowerPoint presentation to PDF file. \n Read more about the converter here: https://www.convertapi.com/pptx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/png": {
      "summary": "PPTX to PNG File Conversion API",
      "description": "The API for converting PowerPoint presentation to PNG image. \n Read more about the converter here: https://www.convertapi.com/pptx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/pptx": {
      "summary": "PPTX to PPTX File Conversion API",
      "description": "The API for converting PowerPoint presentations to PPTX file format. \n Read more about the converter here: https://www.convertapi.com/pptx-to-pptx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/Protect": {
      "summary": "PPTX to PROTECT File Conversion API",
      "description": "Encrypt and protect PowerPoint PPTX presentation with a password and AES 256 bit encryption algorithm. \n Read more about the converter here: https://www.convertapi.com/pptx-to-Protect",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "EncryptPassword",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "EncryptPassword": {
                    "type": "string",
                    "description": "Sets the password in the output document. Users will be asked to enter this password before MS Office allows them to view the document."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/tiff": {
      "summary": "PPTX to TIFF File Conversion API",
      "description": "The API for converting PowerPoint presentation to TIFF image. \n Read more about the converter here: https://www.convertapi.com/pptx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pptx/to/webp": {
      "summary": "PPTX to WEBP File Conversion API",
      "description": "The API for converting PowerPoint presentation to WEBP image. \n Read more about the converter here: https://www.convertapi.com/pptx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-2000"
                  },
                  "ConvertHiddenSlides": {
                    "type": "boolean",
                    "description": "Include hidden slides while converting.",
                    "default": false
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/prn/to/jpg": {
      "summary": "PRN to JPG File Conversion API",
      "description": "The API for converting PostScript to JPG images. \n Read more about the converter here: https://www.convertapi.com/prn-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/prn/to/pdf": {
      "summary": "PRN to PDF File Conversion API",
      "description": "The API for converting PostScript to PDF files. \n Read more about the converter here: https://www.convertapi.com/prn-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/prn/to/png": {
      "summary": "PRN to PNG File Conversion API",
      "description": "The API for converting PostScript to PNG images. \n Read more about the converter here: https://www.convertapi.com/prn-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/prn/to/tiff": {
      "summary": "PRN to TIFF File Conversion API",
      "description": "The API for converting PostScript to TIFF images. \n Read more about the converter here: https://www.convertapi.com/prn-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/prn/to/webp": {
      "summary": "PRN to WEBP File Conversion API",
      "description": "The API for converting PostScript to WEBP images. \n Read more about the converter here: https://www.convertapi.com/prn-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ps/to/jpg": {
      "summary": "PS to JPG File Conversion API",
      "description": "The API for converting PostScript to JPG images. \n Read more about the converter here: https://www.convertapi.com/ps-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ps/to/pdf": {
      "summary": "PS to PDF File Conversion API",
      "description": "The API for converting PostScript to PDF files. \n Read more about the converter here: https://www.convertapi.com/ps-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ps/to/png": {
      "summary": "PS to PNG File Conversion API",
      "description": "The API for converting PostScript to PNG images. \n Read more about the converter here: https://www.convertapi.com/ps-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ps/to/tiff": {
      "summary": "PS to TIFF File Conversion API",
      "description": "The API for converting PostScript to TIFF images. \n Read more about the converter here: https://www.convertapi.com/ps-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/ps/to/webp": {
      "summary": "PS to WEBP File Conversion API",
      "description": "The API for converting PostScript to WEBP images. \n Read more about the converter here: https://www.convertapi.com/ps-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/psd/to/jpg": {
      "summary": "PSD to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/psd-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/psd/to/png": {
      "summary": "PSD to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/psd-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/psd/to/pnm": {
      "summary": "PSD to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/psd-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/psd/to/svg": {
      "summary": "PSD to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/psd-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/psd/to/tiff": {
      "summary": "PSD to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/psd-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/psd/to/webp": {
      "summary": "PSD to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/psd-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pub/to/jpg": {
      "summary": "PUB to JPG File Conversion API",
      "description": "The API for converting Publisher documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/pub-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pub/to/pdf": {
      "summary": "PUB to PDF File Conversion API",
      "description": "The API for converting Publisher documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/pub-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pub/to/png": {
      "summary": "PUB to PNG File Conversion API",
      "description": "The API for converting Publisher documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/pub-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/pub/to/tiff": {
      "summary": "PUB to TIFF File Conversion API",
      "description": "The API for converting Publisher documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/pub-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/docx": {
      "summary": "RTF to DOCX File Conversion API",
      "description": "The API for converting RTF document to {1} document format. \n Read more about the converter here: https://www.convertapi.com/rtf-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/html": {
      "summary": "RTF to HTML File Conversion API",
      "description": "The API for converting Word documents to HTML files. \n Read more about the converter here: https://www.convertapi.com/rtf-to-html",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "InlineImages": {
                    "type": "boolean",
                    "description": "Inline images to html.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/jpg": {
      "summary": "RTF to JPG File Conversion API",
      "description": "The API for converting Word documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/rtf-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/odt": {
      "summary": "RTF to ODT File Conversion API",
      "description": "The API for converting RTF document to {1} document format. \n Read more about the converter here: https://www.convertapi.com/rtf-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/pdf": {
      "summary": "RTF to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/rtf-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/txt": {
      "summary": "RTF to TXT File Conversion API",
      "description": "The API for converting Word documents to Text files. \n Read more about the converter here: https://www.convertapi.com/rtf-to-txt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "Substitutions": {
                    "type": "boolean",
                    "description": "Replace similar symbols with their counterparts in a text file, such as a copyright symbol with (c).",
                    "default": false
                  },
                  "LineBreaks": {
                    "type": "boolean",
                    "description": "Inserts line breaks at the end of each line of text.",
                    "default": true
                  },
                  "TextEncoding": {
                    "enum": [
                      "auto",
                      "ascii",
                      "utf-7",
                      "utf-8",
                      "iso-8859-1",
                      "iso-8859-2",
                      "iso-8859-6",
                      "iso-8859-15",
                      "windows-1252",
                      "arabicasmo",
                      "baltic",
                      "centraleuropean",
                      "cyrillic",
                      "europa",
                      "extalphalowercase",
                      "greek",
                      "hebrew",
                      "hzgbsimplifiedchinese",
                      "german",
                      "japaneseshiftjis",
                      "koi8-r",
                      "koi8-u",
                      "korean",
                      "thai",
                      "turkish",
                      "unicodebigendian",
                      "unicodelittleendian",
                      "vietnamese"
                    ],
                    "type": "string",
                    "description": "Specifies what encoding the parser should use when converting text files.\n * `auto` - Auto\n * `ascii` - ASCII\n * `utf-7` - UTF-7 encoding\n * `utf-8` - UTF-8 encoding\n * `iso-8859-1` - ISO-8859-1\n * `iso-8859-2` - ISO-8859-2\n * `iso-8859-6` - ISO-8859-6\n * `iso-8859-15` - ISO-8859-15\n * `windows-1252` - Windows-1252\n * `arabicasmo` - Arabic ASMO\n * `baltic` - Baltic\n * `centraleuropean` - Central European\n * `cyrillic` - Cyrillic\n * `europa` - Europa\n * `extalphalowercase` - Extended Alpha lowercase\n * `greek` - Greek\n * `hebrew` - Hebrew\n * `hzgbsimplifiedchinese` - Simplified Chinese (HZGB)\n * `german` - German\n * `japaneseshiftjis` - Japanese (Shift-JIS)\n * `koi8-r` - KOI8-R\n * `koi8-u` - K0I8-U\n * `korean` - Korean\n * `thai` - Thai\n * `turkish` - Turkish\n * `unicodebigendian` - Unicode big endian\n * `unicodelittleendian` - Unicode little endian\n * `vietnamese` - Vietnamese",
                    "default": "auto"
                  },
                  "EndLineChar": {
                    "enum": [
                      "crlf",
                      "cr",
                      "lfcr",
                      "lf"
                    ],
                    "type": "string",
                    "description": "Set end of line character. The character which will be used to break lines.\n * `crlf` - CR+LF (Windows)\n * `cr` - CR (Windows)\n * `lfcr` - LFCR (Mac OS)\n * `lf` - LF (Mac OS)",
                    "default": "crlf"
                  },
                  "SaveFormat": {
                    "enum": [
                      "wintext",
                      "wintextlb",
                      "dostext",
                      "dostextlb",
                      "unicodetext"
                    ],
                    "type": "string",
                    "description": "Specifies the format to use when saving a document.\n * `wintext` - Windows Text\n * `wintextlb` - Windows Text with line breaks preserved\n * `dostext` - DOS text\n * `dostextlb` - DOS text with line breaks preserved\n * `unicodetext` - Unicode text format",
                    "default": "unicodetext"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/xml": {
      "summary": "RTF to XML File Conversion API",
      "description": "The API for converting RTF document to {1} document format. \n Read more about the converter here: https://www.convertapi.com/rtf-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/rtf/to/xps": {
      "summary": "RTF to XPS File Conversion API",
      "description": "The API for converting RTF document to {1} document format. \n Read more about the converter here: https://www.convertapi.com/rtf-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/jpg": {
      "summary": "SVG to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/svg-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/pdf": {
      "summary": "SVG to PDF File Conversion API",
      "description": "Convert an SVG image to a vector PDF. \n Read more about the converter here: https://www.convertapi.com/svg-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "HorizontalAlignment": {
                    "enum": [
                      "left",
                      "center",
                      "right"
                    ],
                    "type": "string",
                    "description": "Specifies the horizontal image alignment.\n * `left` - left\n * `center` - center\n * `right` - right",
                    "default": "center"
                  },
                  "VerticalAlignment": {
                    "enum": [
                      "top",
                      "center",
                      "bottom"
                    ],
                    "type": "string",
                    "description": "Specifies the vertical image alignment.\n * `top` - top\n * `center` - center\n * `bottom` - bottom",
                    "default": "center"
                  },
                  "BackgroundColor": {
                    "type": "string",
                    "description": "Sets the background color of the PDF. It can be a Hexadecimal value, an RGB value, an HSL value, or a color name (keyword value).",
                    "default": "White"
                  },
                  "PageSize": {
                    "enum": [
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "a4"
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "PDF page orientation.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "UseImagePageSize": {
                    "type": "boolean",
                    "description": "Use image width and height for PDF size. This property overrides PageSize, PageWidth, and PageHeight if image size is impossible to obtain when PageSize, PageWidth, and PageHeight is used.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/png": {
      "summary": "SVG to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/svg-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/pnm": {
      "summary": "SVG to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/svg-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/svg": {
      "summary": "SVG to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/svg-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/tiff": {
      "summary": "SVG to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/svg-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/svg/to/webp": {
      "summary": "SVG to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/svg-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tif/to/jpg": {
      "summary": "TIF to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/tif-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tif/to/png": {
      "summary": "TIF to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/tif-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tif/to/pnm": {
      "summary": "TIF to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/tif-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tif/to/svg": {
      "summary": "TIF to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/tif-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tif/to/tiff": {
      "summary": "TIF to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/tif-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tif/to/webp": {
      "summary": "TIF to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/tif-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/jpg": {
      "summary": "TIFF to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/tiff-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/pdf": {
      "summary": "TIFF to PDF File Conversion API",
      "description": "Convert TIFF images to PDF files \n Read more about the converter here: https://www.convertapi.com/tiff-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "AlphaChannel": {
                    "type": "boolean",
                    "description": "Enable or disable the alpha channel if available.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/png": {
      "summary": "TIFF to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/tiff-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/pnm": {
      "summary": "TIFF to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/tiff-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/svg": {
      "summary": "TIFF to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/tiff-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/tiff": {
      "summary": "TIFF to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/tiff-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/tiff/to/webp": {
      "summary": "TIFF to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/tiff-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/txt/to/jpg": {
      "summary": "TXT to JPG File Conversion API",
      "description": "The API for converting Word documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/txt-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ImageHeight": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to height if do not fit to resolution."
                  },
                  "ImageWidth": {
                    "maximum": 10000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels. If PreserveResolution property is set, render every page at set resolution and scale down to width if do not fit to resolution."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/txt/to/pdf": {
      "summary": "TXT to PDF File Conversion API",
      "description": "Convert plain text files to PDF with page parameters \n Read more about the converter here: https://www.convertapi.com/txt-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-2000"
                  },
                  "FontName": {
                    "enum": [
                      "Arial",
                      "Bahnschrift",
                      "Calibri",
                      "Cambria",
                      "Consolas",
                      "Constantia",
                      "CourierNew",
                      "Georgia",
                      "Tahoma",
                      "TimesNewRoman",
                      "Verdana"
                    ],
                    "type": "string",
                    "description": "Specifies the text font name. Contact us if you are looking for a specific font for a text that is missing from the list.\n * `Arial` - Arial\n * `Bahnschrift` - Bahnschrift\n * `Calibri` - Calibri\n * `Cambria` - Cambria\n * `Consolas` - Consolas\n * `Constantia` - Constantia\n * `CourierNew` - Courier New\n * `Georgia` - Georgia\n * `Tahoma` - Tahoma\n * `TimesNewRoman` - Times New Roman\n * `Verdana` - Verdana",
                    "default": "CourierNew"
                  },
                  "FontSize": {
                    "maximum": 72,
                    "minimum": 4,
                    "type": "integer",
                    "description": "Specifies the text font size.",
                    "default": 12
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageSize": {
                    "enum": [
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5",
                    "default": "a4"
                  },
                  "MarginLeft": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page left margin in millimeters (mm).",
                    "default": 5
                  },
                  "MarginRight": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page right margin in millimeters (mm).",
                    "default": 5
                  },
                  "MarginTop": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page top margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginBottom": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page bottom margin in millimeters (mm).",
                    "default": 10
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsd/to/jpg": {
      "summary": "VSD to JPG File Conversion API",
      "description": "The API for converting Visio documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/vsd-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsd/to/pdf": {
      "summary": "VSD to PDF File Conversion API",
      "description": "The API for converting Visio documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/vsd-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsd/to/png": {
      "summary": "VSD to PNG File Conversion API",
      "description": "The API for converting Visio documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/vsd-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsd/to/tiff": {
      "summary": "VSD to TIFF File Conversion API",
      "description": "The API for converting Visio documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/vsd-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsdx/to/jpg": {
      "summary": "VSDX to JPG File Conversion API",
      "description": "The API for converting Visio documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/vsdx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsdx/to/pdf": {
      "summary": "VSDX to PDF File Conversion API",
      "description": "The API for converting Visio documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/vsdx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsdx/to/png": {
      "summary": "VSDX to PNG File Conversion API",
      "description": "The API for converting Visio documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/vsdx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/vsdx/to/tiff": {
      "summary": "VSDX to TIFF File Conversion API",
      "description": "The API for converting Visio documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/vsdx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "IncludeBackground": {
                    "type": "boolean",
                    "description": "Include background pages.",
                    "default": true
                  },
                  "ColorAsBlack": {
                    "type": "boolean",
                    "description": "Render all colors in the converting document as black.",
                    "default": false
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/web/to/jpg": {
      "summary": "WEB to JPG File Conversion API",
      "description": "The API for converting Web Pages to JPG images. \n Read more about the converter here: https://www.convertapi.com/web-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Url"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "CropElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element that should be converted. Element will be cropped from the document."
                  },
                  "CropX": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop X offset."
                  },
                  "CropY": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop Y offset."
                  },
                  "CropWidth": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop width."
                  },
                  "CropHeight": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop height."
                  },
                  "Zoom": {
                    "maximum": 10,
                    "minimum": 0.1,
                    "type": "number",
                    "description": "Set the default zoom level of webpages.",
                    "default": 1
                  },
                  "Url": {
                    "type": "string",
                    "description": "URI of a web page to convert. If URI has special characters like ? or &amp; they must be encoded.",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/web/to/pdf": {
      "summary": "WEB to PDF File Conversion API",
      "description": "The API for converting Web Pages to PDF files. \n Read more about the converter here: https://www.convertapi.com/web-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Url"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "LoadLazyContent": {
                    "type": "boolean",
                    "description": "Load page images that loads only when they are visible.",
                    "default": false
                  },
                  "ViewportWidth": {
                    "maximum": 4000,
                    "minimum": 200,
                    "type": "integer",
                    "description": "Sets browser viewport width.",
                    "default": 1366
                  },
                  "ViewportHeight": {
                    "maximum": 4000,
                    "minimum": 200,
                    "type": "integer",
                    "description": "Sets browser viewport height.",
                    "default": 1024
                  },
                  "RespectViewport": {
                    "type": "boolean",
                    "description": "If true, the converter will generate PDF as the content looks like in the browser. If is set to false, the converter acts like Chrome print to PDF function.",
                    "default": true
                  },
                  "Scale": {
                    "maximum": 200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set web page scale value in percentage.",
                    "default": 100
                  },
                  "PageOrientation": {
                    "enum": [
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "PDF page orientation.\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "portrait"
                  },
                  "PageSize": {
                    "enum": [
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "b0",
                      "b1",
                      "b2",
                      "b3",
                      "b4",
                      "b5",
                      "letter",
                      "legal",
                      "ledger"
                    ],
                    "type": "string",
                    "description": "PDF page size.\n * `a0` - A0 (841 × 1189 mm, 8.26 × 11.69 inches)\n * `a1` - A1 (594 × 841 mm, 23.4 × 33.1 inches)\n * `a2` - A2 (420 × 594 mm, 16.5 × 23.4 inches)\n * `a3` - A3 (298 × 420 mm, 11.7 × 16.5 inches)\n * `a4` - A4 (210 × 298 mm, 8.3 × 11.7 inches)\n * `a5` - A5 (148 × 210 mm, 5.8 × 8.3 inches)\n * `a6` - A6 (105 × 148 mm, 4.1 × 5.8 inches)\n * `a7` - A7 (74 × 105 mm, 2.9 × 4.1 inches)\n * `a8` - A8 (52 × 74 mm, 2.0 × 2.9 inches)\n * `a9` - A9 (37 × 52 mm, 1.5 × 2.0 inches)\n * `b0` - B0 (1000 × 1414 mm, 39.4 × 55.7 inches)\n * `b1` - B1 (707 × 1000 mm, 27.8 × 39.4 inches)\n * `b2` - B2 (500 × 707 mm, 19.7 × 27.8 inches)\n * `b3` - B3 (353 × 500 mm, 13.9 × 19.7 inches)\n * `b4` - B4 (250 × 353 mm, 9.8 × 13.9 inches)\n * `b5` - B5 (176 × 250 mm, 6.9 × 9.8 inches)\n * `letter` - Letter(216 × 279 mm, 8.5 × 11 inches)\n * `legal` - Legal(216 × 356 mm, 8.5 × 14 inches)\n * `ledger` - Ledger(432 × 279 mm, 17 × 11 inches)",
                    "default": "letter"
                  },
                  "PageWidth": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page width in millimeters (mm). This option override PageSize option."
                  },
                  "PageHeight": {
                    "maximum": 30000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Custom page height in millimeters (mm). This option override PageSize option."
                  },
                  "MarginTop": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page top margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginRight": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page right margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginBottom": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page bottom margin in millimeters (mm).",
                    "default": 10
                  },
                  "MarginLeft": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page left margin in millimeters (mm).",
                    "default": 10
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10 or 1,2,5.",
                    "default": "1-100"
                  },
                  "Background": {
                    "type": "boolean",
                    "description": "Convert web page background.",
                    "default": true
                  },
                  "FixedElements": {
                    "enum": [
                      "fixed",
                      "absolute",
                      "relative",
                      "hide"
                    ],
                    "type": "string",
                    "description": "Change fixed elements CSS 'position' property to adapt page for conversion.\n * `fixed` - Leave unchanged\n * `absolute` - Absolute\n * `relative` - Relative\n * `hide` - Hide",
                    "default": "fixed"
                  },
                  "Header": {
                    "type": "string",
                    "description": ""
                  },
                  "Footer": {
                    "type": "string",
                    "description": ""
                  },
                  "ShowElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that should be visible during conversion. Other elements will be hidden."
                  },
                  "AvoidBreakElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that pages should not break."
                  },
                  "BreakBeforeElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that should apply page break before it."
                  },
                  "BreakAfterElements": {
                    "type": "string",
                    "description": "CSS selector for the elements that should apply page break after it."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Url": {
                    "type": "string",
                    "description": "URI of a web page to convert. If URI has special characters like ? or &amp; they must be encoded.",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/web/to/png": {
      "summary": "WEB to PNG File Conversion API",
      "description": "The API for converting Web Pages to PNG images. \n Read more about the converter here: https://www.convertapi.com/web-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Url"
                ],
                "type": "object",
                "properties": {
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 120
                  },
                  "ConversionDelay": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Delay in seconds before page load and PDF creation. Sometimes useful to let web page fully load.",
                    "default": 0
                  },
                  "AuthUsername": {
                    "type": "string",
                    "description": "HTTP authentication username. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AuthPassword": {
                    "type": "string",
                    "description": "HTTP authentication password. Could be used if conversion web page is protected with HTTP authentication."
                  },
                  "AdBlock": {
                    "type": "boolean",
                    "description": "Block ads in converting page.",
                    "default": false
                  },
                  "CookieConsentBlock": {
                    "type": "boolean",
                    "description": "Tries to remove EU regulation required cookie warnings from web pages.",
                    "default": false
                  },
                  "Cookies": {
                    "type": "string",
                    "description": "Set additional cookies for the page request. Exaple: cookiename1=cookievalue1; cookiename2=cookievalue2; cookiename3=cookievalue3"
                  },
                  "JavaScript": {
                    "type": "boolean",
                    "description": "Allow web pages to run JavaScript.",
                    "default": true
                  },
                  "WaitElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element. Converter will wait for this element to appear in DOM before conversion begins."
                  },
                  "UserJs": {
                    "type": "string",
                    "description": "Execute provided JavaScript before conversion begins."
                  },
                  "UserCss": {
                    "type": "string",
                    "description": "Apply additional CSS before conversion begins."
                  },
                  "HideElements": {
                    "type": "string",
                    "description": "Element selector string of the DOM elements that needs to be hidden during conversion."
                  },
                  "CssMediaType": {
                    "type": "string",
                    "description": "Use CSS media type in conversion process. The default screen and print media types are supported but not limited to these. The custom media type, like convertapi can be used too.",
                    "default": "screen"
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "CropElement": {
                    "type": "string",
                    "description": "Element selector string of the DOM element that should be converted. Element will be cropped from the document."
                  },
                  "CropX": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop X offset."
                  },
                  "CropY": {
                    "maximum": 16384,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Screenshot crop Y offset."
                  },
                  "CropWidth": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop width."
                  },
                  "CropHeight": {
                    "maximum": 16384,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Screenshot crop height."
                  },
                  "Zoom": {
                    "maximum": 10,
                    "minimum": 0.1,
                    "type": "number",
                    "description": "Set the default zoom level of webpages.",
                    "default": 1
                  },
                  "TransparentBackground": {
                    "type": "boolean",
                    "description": "Sets default background color to transparent to get transparency in the image. Also, for this property to work, the source HTML BODY background color should be set to none.",
                    "default": false
                  },
                  "Url": {
                    "type": "string",
                    "description": "URI of a web page to convert. If URI has special characters like ? or &amp; they must be encoded.",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/gif": {
      "summary": "WEBP to GIF File Conversion API",
      "description": "The API for converting JPG, PNG, and GIF images to single and animated GIF files. \n Read more about the converter here: https://www.convertapi.com/webp-to-gif",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to be converted. Value can be URL or file content. If used in query or multipart content parameter must be suffixed with index e.g. Files[0], Files[1], Files[2]..."
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "PersistAnimation": {
                    "type": "boolean",
                    "description": "Read animation values AnimationIterations and AnimationDelay from GIF file. Only works if GIF file is added to file list.",
                    "default": true
                  },
                  "AnimationDelay": {
                    "maximum": 20000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Animation delay in milliseconds before playing the next image in an animated sequence.",
                    "default": 100
                  },
                  "AnimationIterations": {
                    "maximum": 1000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the number of iterations to loop an animation. Zero is infinity.",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/jpg": {
      "summary": "WEBP to JPG File Conversion API",
      "description": "The API for converting images to JPG files. \n Read more about the converter here: https://www.convertapi.com/webp-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "AlphaColor": {
                    "type": "string",
                    "description": "Set a color on the alpha (transparent) channel. Values accepted are RGBA, CMYK hex string, or a color name."
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/pdf": {
      "summary": "WEBP to PDF File Conversion API",
      "description": "The API for converting images to PDF files. \n Read more about the converter here: https://www.convertapi.com/webp-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Rotate": {
                    "enum": [
                      "0",
                      "90",
                      "180",
                      "270",
                      "auto"
                    ],
                    "type": "string",
                    "description": "Rotate image by degree. Auto rotation using EXIF supported for TIFF and JPEG images.\n * `0` - Preserve original\n * `90` - 90\n * `180` - 180\n * `270` - 270\n * `auto` - Auto using EXIF",
                    "default": "0"
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ColorProfile": {
                    "enum": [
                      "default",
                      "isocoatedv2"
                    ],
                    "type": "string",
                    "description": "Set image color profile. Some profiles will override the ColorSpace property.\n * `default` - Default\n * `isocoatedv2` - ISO Coated v2",
                    "default": "default"
                  },
                  "MarginHorizontal": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page horizontal margin in millimeters (mm).",
                    "default": 0
                  },
                  "MarginVertical": {
                    "maximum": 500,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set the page vertical margin in millimeters (mm).",
                    "default": 0
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "a0",
                      "a1",
                      "a2",
                      "a3",
                      "a4",
                      "a5",
                      "a6",
                      "a7",
                      "a8",
                      "a9",
                      "a10",
                      "letter",
                      "legal"
                    ],
                    "type": "string",
                    "description": "The property scales each image to fit a given page size.\n * `default` - Image size\n * `a0` - A0\n * `a1` - A1\n * `a2` - A2\n * `a3` - A3\n * `a4` - A4\n * `a5` - A5\n * `a6` - A6\n * `a7` - A7\n * `a8` - A8\n * `a9` - A9\n * `a10` - A10\n * `letter` - Letter\n * `legal` - Legal",
                    "default": "default"
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Set page orientation. Works only with the PageSize property when it is set to a value other than the Image size.\n * `default` - Image orientation\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/png": {
      "summary": "WEBP to PNG File Conversion API",
      "description": "The API for converting images to Portable Network Graphic (PNG) images. \n Read more about the converter here: https://www.convertapi.com/webp-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/pnm": {
      "summary": "WEBP to PNM File Conversion API",
      "description": "The API for converting images to Portable Any Map (PNM) images. \n Read more about the converter here: https://www.convertapi.com/webp-to-pnm",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "TransparentColor": {
                    "type": "string",
                    "description": "Add alpha channel to image, setting pixels matching color to transparent. Values accepted are RGBA, CMYK hex string, color name or RGB format like this 255,255,255 (RED=255, GREEN=255, BLUE=255) or 255,255,255,150 with alpha chanel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/svg": {
      "summary": "WEBP to SVG File Conversion API",
      "description": "The API for converting images to SVG files. \n Read more about the converter here: https://www.convertapi.com/webp-to-svg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/tiff": {
      "summary": "WEBP to TIFF File Conversion API",
      "description": "The API for converting images to Tiff images. \n Read more about the converter here: https://www.convertapi.com/webp-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/webp/to/webp": {
      "summary": "WEBP to WEBP File Conversion API",
      "description": "The API for converting images to WebP files. \n Read more about the converter here: https://www.convertapi.com/webp-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "ImageResolution": {
                    "maximum": 800,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "ColorSpace": {
                    "enum": [
                      "default",
                      "rgb",
                      "srgb",
                      "cmyk",
                      "gray"
                    ],
                    "type": "string",
                    "description": "Set image color space.\n * `default` - Default\n * `rgb` - RGB\n * `srgb` - sRGB\n * `cmyk` - CMYK\n * `gray` - Gray",
                    "default": "default"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/wpd/to/pdf": {
      "summary": "WPD to PDF File Conversion API",
      "description": "The API for converting Word documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/wpd-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "PageRange": {
                    "type": "string",
                    "description": "Set page range. Example 1-10.",
                    "default": "1-6000"
                  },
                  "ConvertMarkups": {
                    "type": "boolean",
                    "description": "Convert document markups like revisions and comments.",
                    "default": false
                  },
                  "ConvertTags": {
                    "type": "boolean",
                    "description": "Convert document structure tags for accessibility.",
                    "default": false
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ConvertHeadings": {
                    "type": "boolean",
                    "description": "Convert Word headings to PDF bookmarks.",
                    "default": true
                  },
                  "ConvertBookmarks": {
                    "type": "boolean",
                    "description": "Convert Word bookmarks to PDF bookmarks.",
                    "default": false
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/csv": {
      "summary": "XLS to CSV File Conversion API",
      "description": "The API for converting Excel documents to Csv files. \n Read more about the converter here: https://www.convertapi.com/xls-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "type": "string",
                    "description": "Set one or several worksheet indexes(number) separated by comma to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set one or several worksheet names separated by comma to convert. If value is not set all worksheet will be converted."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/jpg": {
      "summary": "XLS to JPG File Conversion API",
      "description": "The API for converting Excel documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/xls-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/numbers": {
      "summary": "XLS to NUMBERS File Conversion API",
      "description": "The API for converting Excel spreadsheets to Apple iWork Numbers. \n Read more about the converter here: https://www.convertapi.com/xls-to-numbers",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/pdf": {
      "summary": "XLS to PDF File Conversion API",
      "description": "The API for converting Excel documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/xls-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ThousandsSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": ","
                  },
                  "DecimalSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": "."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/png": {
      "summary": "XLS to PNG File Conversion API",
      "description": "The API for converting Excel documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/xls-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/tiff": {
      "summary": "XLS to TIFF File Conversion API",
      "description": "The API for converting Excel documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/xls-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/webp": {
      "summary": "XLS to WEBP File Conversion API",
      "description": "The API for converting Excel documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/xls-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/xls": {
      "summary": "XLS to XLS File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xls-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xls/to/xlsx": {
      "summary": "XLS to XLSX File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xls-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/csv": {
      "summary": "XLSB to CSV File Conversion API",
      "description": "The API for converting Excel documents to Csv files. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "type": "string",
                    "description": "Set one or several worksheet indexes(number) separated by comma to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set one or several worksheet names separated by comma to convert. If value is not set all worksheet will be converted."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/jpg": {
      "summary": "XLSB to JPG File Conversion API",
      "description": "The API for converting Excel documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/pdf": {
      "summary": "XLSB to PDF File Conversion API",
      "description": "The API for converting Excel documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ThousandsSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": ","
                  },
                  "DecimalSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": "."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/png": {
      "summary": "XLSB to PNG File Conversion API",
      "description": "The API for converting Excel documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/tiff": {
      "summary": "XLSB to TIFF File Conversion API",
      "description": "The API for converting Excel documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/webp": {
      "summary": "XLSB to WEBP File Conversion API",
      "description": "The API for converting Excel documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/xls": {
      "summary": "XLSB to XLS File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsb/to/xlsx": {
      "summary": "XLSB to XLSX File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xlsb-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/csv": {
      "summary": "XLSX to CSV File Conversion API",
      "description": "The API for converting Excel documents to Csv files. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "type": "string",
                    "description": "Set one or several worksheet indexes(number) separated by comma to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set one or several worksheet names separated by comma to convert. If value is not set all worksheet will be converted."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/jpg": {
      "summary": "XLSX to JPG File Conversion API",
      "description": "The API for converting Excel documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/numbers": {
      "summary": "XLSX to NUMBERS File Conversion API",
      "description": "The API for converting Excel spreadsheets to Apple iWork Numbers. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-numbers",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/pdf": {
      "summary": "XLSX to PDF File Conversion API",
      "description": "The API for converting Excel documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ThousandsSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": ","
                  },
                  "DecimalSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": "."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/png": {
      "summary": "XLSX to PNG File Conversion API",
      "description": "The API for converting Excel documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/protect": {
      "summary": "XLSX to PROTECT File Conversion API",
      "description": "Encrypt and protect Excel XLSX spreadsheet with a password and AES 256 bit encryption algorithm. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-protect",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "EncryptPassword",
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "EncryptPassword": {
                    "type": "string",
                    "description": "Sets the password in the output document. Users will be asked to enter this password before MS Office allows them to view the document."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/tiff": {
      "summary": "XLSX to TIFF File Conversion API",
      "description": "The API for converting Excel documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/webp": {
      "summary": "XLSX to WEBP File Conversion API",
      "description": "The API for converting Excel documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/xls": {
      "summary": "XLSX to XLS File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlsx/to/xlsx": {
      "summary": "XLSX to XLSX File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xlsx-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlt/to/xls": {
      "summary": "XLT to XLS File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xlt-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xlt/to/xlsx": {
      "summary": "XLT to XLSX File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xlt-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/csv": {
      "summary": "XLTX to CSV File Conversion API",
      "description": "The API for converting Excel documents to Csv files. \n Read more about the converter here: https://www.convertapi.com/xltx-to-csv",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "type": "string",
                    "description": "Set one or several worksheet indexes(number) separated by comma to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set one or several worksheet names separated by comma to convert. If value is not set all worksheet will be converted."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/jpg": {
      "summary": "XLTX to JPG File Conversion API",
      "description": "The API for converting Excel documents to JPG images. \n Read more about the converter here: https://www.convertapi.com/xltx-to-jpg",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "JpgType": {
                    "enum": [
                      "jpeg",
                      "jpegcmyk",
                      "jpeggray"
                    ],
                    "type": "string",
                    "description": "Set JPG type.\n * `jpeg` - RGB (Full Colors)\n * `jpegcmyk` - CMYK\n * `jpeggray` - Grayscale",
                    "default": "jpeg"
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/pdf": {
      "summary": "XLTX to PDF File Conversion API",
      "description": "The API for converting Excel documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/xltx-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "ConvertMetadata": {
                    "type": "boolean",
                    "description": "Convert document metadata like Title, Author, Keywords to PDF metadata.",
                    "default": true
                  },
                  "ThousandsSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": ","
                  },
                  "DecimalSeparator": {
                    "type": "string",
                    "description": "Thousands separator.",
                    "default": "."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage."
                  },
                  "CompressPDF": {
                    "type": "boolean",
                    "description": "It tries to produce smaller output files but requires Adobe Reader 6, released in 2003 or newer, to view created PDF files.",
                    "default": false
                  },
                  "Pdfa": {
                    "type": "boolean",
                    "description": "Create PDF/A-1b compliant document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/png": {
      "summary": "XLTX to PNG File Conversion API",
      "description": "The API for converting Excel documents to PNG images. \n Read more about the converter here: https://www.convertapi.com/xltx-to-png",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/tiff": {
      "summary": "XLTX to TIFF File Conversion API",
      "description": "The API for converting Excel documents to TIFF images. \n Read more about the converter here: https://www.convertapi.com/xltx-to-tiff",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "TiffType": {
                    "enum": [
                      "color24nc",
                      "color32nc",
                      "color24lzw",
                      "color32lzw",
                      "color24zip",
                      "color32zip",
                      "grayscale",
                      "grayscalelzw",
                      "grayscalezip",
                      "monochromeg3",
                      "monochromeg32d",
                      "monochromeg4",
                      "monochromelzw",
                      "monochromepackbits"
                    ],
                    "type": "string",
                    "description": "Set TIFF type.\n * `color24nc` - Color - 24bits RGB output, uncompressed\n * `color32nc` - Color - 32bits CMYK output, uncompressed\n * `color24lzw` - Color - 24bits RGB, LZW-compatible compression\n * `color32lzw` - Color - 32bits CMYK, LZW-compatible compression\n * `color24zip` - Color - 24bits RGB, ZIP (Deflate) compression\n * `color32zip` - Color - 32bits CMYK, ZIP (Deflate) compression\n * `grayscale` - Grayscale - 8bits output, uncompressed\n * `grayscalelzw` - Grayscale - 8bits output, LZW-compatible compression\n * `grayscalezip` - Grayscale - 8bits output, ZIP (Deflate) compression\n * `monochromeg3` - Monochrome - G3 fax encoding with EOLs\n * `monochromeg32d` - Monochrome - 2-D G3 fax encoding\n * `monochromeg4` - Monochrome - G4 fax encoding\n * `monochromelzw` - Monochrome - LZW-compatible compression\n * `monochromepackbits` - Monochrome - PackBits compression",
                    "default": "color24lzw"
                  },
                  "MultiPage": {
                    "type": "boolean",
                    "description": "Create multi-page TIFF file.",
                    "default": true
                  },
                  "FillOrder": {
                    "enum": [
                      "0",
                      "1"
                    ],
                    "type": "string",
                    "description": "The logical order of bits within a byte.\n * `0` - MSB-to-LSB\n * `1` - LSB-to-MSB",
                    "default": "0"
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/webp": {
      "summary": "XLTX to WEBP File Conversion API",
      "description": "The API for converting Excel documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/xltx-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "WorksheetActive": {
                    "type": "boolean",
                    "description": "Set to convert active worksheet. If value is set False all worksheet will be converted.",
                    "default": false
                  },
                  "WorksheetIndex": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set worksheet index(number) to convert. If value is not set all worksheet will be converted."
                  },
                  "WorksheetName": {
                    "type": "string",
                    "description": "Set worksheet name to convert. If value is not set all worksheet will be converted."
                  },
                  "PageOrientation": {
                    "enum": [
                      "default",
                      "portrait",
                      "landscape"
                    ],
                    "type": "string",
                    "description": "Page orientation.\n * `default` - Default\n * `portrait` - Portrait\n * `landscape` - Landscape",
                    "default": "default"
                  },
                  "PageSize": {
                    "enum": [
                      "default",
                      "letter",
                      "lettersmall",
                      "tabloid",
                      "ledger",
                      "legal",
                      "statement",
                      "executive",
                      "a3",
                      "a4",
                      "a4small",
                      "a5",
                      "b4",
                      "b5",
                      "folio",
                      "quarto",
                      "10x14",
                      "11x17",
                      "note",
                      "envelope9",
                      "envelope10",
                      "envelope11",
                      "envelope12",
                      "envelope14",
                      "csheet",
                      "dsheet",
                      "esheet",
                      "envelopedl",
                      "envelopec3",
                      "envelopec4",
                      "envelopec5",
                      "envelopec6",
                      "envelopec65",
                      "envelopecb4",
                      "envelopeb5",
                      "envelopeb6",
                      "envelopeeurope",
                      "envelopem",
                      "envelopeusa",
                      "fanfoldusa",
                      "fanfoldgerman",
                      "lfanfoldgerman"
                    ],
                    "type": "string",
                    "description": "Page size.\n * `default` - Default\n * `letter` - Letter\n * `lettersmall` - Letter Small\n * `tabloid` - Tabloid\n * `ledger` - Ledger\n * `legal` - Legal\n * `statement` - Statement\n * `executive` - Executive\n * `a3` - A3\n * `a4` - A4\n * `a4small` - A4 Small\n * `a5` - A5\n * `b4` - B4\n * `b5` - B5\n * `folio` - Folio\n * `quarto` - Quarto\n * `10x14` - 10 x 14 in.\n * `11x17` - 11 x 17 in.\n * `note` - Note\n * `envelope9` - Envelope #9\n * `envelope10` - Envelope #10\n * `envelope11` - Envelope #11\n * `envelope12` - Envelope #12\n * `envelope14` - Envelope #14\n * `csheet` - C size sheet\n * `dsheet` - D size sheet\n * `esheet` - E size sheet\n * `envelopedl` - Envelope DL\n * `envelopec3` - Envelope C3\n * `envelopec4` - Envelope C4\n * `envelopec5` - Envelope C5\n * `envelopec6` - Envelope C6\n * `envelopec65` - Envelope C65\n * `envelopecb4` - Envelope B4\n * `envelopeb5` - Envelope B5\n * `envelopeb6` - Envelope B6\n * `envelopeeurope` - Envelope Europe\n * `envelopem` - Envelope Monarch\n * `envelopeusa` - Envelope USA\n * `fanfoldusa` - U.S. Standard Fanfold\n * `fanfoldgerman` - German Standard Fanfold\n * `lfanfoldgerman` - German Legal Fanfold",
                    "default": "default"
                  },
                  "AutoFit": {
                    "type": "boolean",
                    "description": "Auto fit columns and rows.",
                    "default": false
                  },
                  "ClearPrintArea": {
                    "type": "boolean",
                    "description": "Clear the print area in the converting document.",
                    "default": false
                  },
                  "Scale": {
                    "maximum": 300,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set content scale value in percentage.",
                    "default": 100
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/xls": {
      "summary": "XLTX to XLS File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xltx-to-xls",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xltx/to/xlsx": {
      "summary": "XLTX to XLSX File Conversion API",
      "description": "The API for converting one Excel document to another Excel document format. \n Read more about the converter here: https://www.convertapi.com/xltx-to-xlsx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/doc": {
      "summary": "XML to DOC File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-doc",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/docx": {
      "summary": "XML to DOCX File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-docx",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/mhtml": {
      "summary": "XML to MHTML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-mhtml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/odt": {
      "summary": "XML to ODT File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-odt",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/rtf": {
      "summary": "XML to RTF File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-rtf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/xml": {
      "summary": "XML to XML File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-xml",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xml/to/xps": {
      "summary": "XML to XPS File Conversion API",
      "description": "The API for converting one Word document to another word document format. \n Read more about the converter here: https://www.convertapi.com/xml-to-xps",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected documents."
                  },
                  "UpdateToc": {
                    "type": "boolean",
                    "description": "Update all tables of content in the document.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xps/to/pdf": {
      "summary": "XPS to PDF File Conversion API",
      "description": "The API for converting XPS documents to PDF files. \n Read more about the converter here: https://www.convertapi.com/xps-to-pdf",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "DetectPageSize": {
                    "type": "boolean",
                    "description": "Detect and convert custom page sizes.",
                    "default": true
                  },
                  "PdfVersion": {
                    "enum": [
                      "1.2",
                      "1.3",
                      "1.4",
                      "1.5",
                      "1.6",
                      "1.7",
                      "1.8",
                      "2.0"
                    ],
                    "type": "string",
                    "description": "Set PDF version.\n * `1.2` - Acrobat 3 (PDF 1.2)\n * `1.3` - Acrobat 4 (PDF 1.3)\n * `1.4` - Acrobat 5 (PDF 1.4)\n * `1.5` - Acrobat 6 (PDF 1.5)\n * `1.6` - Acrobat 7 (PDF 1.6)\n * `1.7` - Acrobat 8 (PDF 1.7)\n * `1.8` - Acrobat 9 (PDF 1.7, e-level 3)\n * `2.0` - Acrobat DC (PDF 2.0)",
                    "default": "1.5"
                  },
                  "PdfResolution": {
                    "maximum": 2400,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set PDF resolution.",
                    "default": 300
                  },
                  "PdfTitle": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF title. Otherwise, the default document title will be used. Use single quotes and a space (' ') to remove the title."
                  },
                  "PdfSubject": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF subject. Otherwise, the default document subject will be used. Use single quotes and a space (' ') to remove the subject."
                  },
                  "PdfAuthor": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF author. Otherwise, the default document author will be used. Use single quotes and a space (' ') to remove the author."
                  },
                  "PdfKeywords": {
                    "type": "string",
                    "description": "Provide a value to customize the PDF keywords. Otherwise, the default document keywords will be used. Use single quotes and a space (' ') to remove the keywords."
                  },
                  "OpenPage": {
                    "maximum": 3000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set the page number at which the PDF document should open.",
                    "default": 1
                  },
                  "OpenZoom": {
                    "enum": [
                      "Default",
                      "ActualSize",
                      "FitPage",
                      "FitWidth",
                      "FitHeight",
                      "FitVisible",
                      "25",
                      "50",
                      "75",
                      "100",
                      "125",
                      "150",
                      "200",
                      "400",
                      "800",
                      "1600",
                      "2400",
                      "3200",
                      "6400"
                    ],
                    "type": "string",
                    "description": "Set the default zoom percentage for when you open PDF files .\n * `Default` - Default\n * `ActualSize` - Actual Size\n * `FitPage` - Fit Page\n * `FitWidth` - Fit Width\n * `FitHeight` - Fit Height\n * `FitVisible` - Fit Visible\n * `25` - 25%\n * `50` - 50%\n * `75` - 75%\n * `100` - 100%\n * `125` - 125%\n * `150` - 150%\n * `200` - 200%\n * `400` - 400%\n * `800` - 800%\n * `1600` - 1600%\n * `2400` - 2400%\n * `3200` - 3200%\n * `6400` - 6400%",
                    "default": "Default"
                  },
                  "RotatePage": {
                    "enum": [
                      "Disabled",
                      "ByPage",
                      "All"
                    ],
                    "type": "string",
                    "description": "Automatically rotate pages based on the orientation of the text. By Page option will rotate each page based on the direction of the text on that page. All option will rotate all pages in the document based on the orientation of the majority of text.\n * `Disabled` - Disabled\n * `ByPage` - By Page\n * `All` - All",
                    "default": "ByPage"
                  },
                  "EmbedFonts": {
                    "type": "boolean",
                    "description": "Embed fonts in PDF.",
                    "default": true
                  },
                  "SubsetFonts": {
                    "type": "boolean",
                    "description": "Include in the output PDF document only the font characters that are used in the original document.",
                    "default": true
                  },
                  "SubsetFontsThreshold": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Sets the Subset Fonts threshold. If the percentage of used characters, compared with total characters of the particular font, exceeds this threshold, the entire font is embedded.",
                    "default": 100
                  },
                  "ColorSpace": {
                    "enum": [
                      "Default",
                      "RGB",
                      "CMYK",
                      "Gray"
                    ],
                    "type": "string",
                    "description": "Set PDF color space.\n * `Default` - Default\n * `RGB` - RGB\n * `CMYK` - CMYK\n * `Gray` - Gray",
                    "default": "Default"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/xps/to/webp": {
      "summary": "XPS to WEBP File Conversion API",
      "description": "The API for converting XPS documents to WEBP images. \n Read more about the converter here: https://www.convertapi.com/xps-to-webp",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "FileName": {
                    "type": "string",
                    "description": "Converted output file name without extension. The extension will be added automatically."
                  },
                  "DetectPageSize": {
                    "type": "boolean",
                    "description": "Detect and convert custom page sizes.",
                    "default": true
                  },
                  "ImageQuality": {
                    "maximum": 100,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Set output image quality.",
                    "default": 75
                  },
                  "ImageResolutionH": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image horizontal resolution in dpi.",
                    "default": 200
                  },
                  "ImageResolutionV": {
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Set output image vertical resolution in dpi.",
                    "default": 200
                  },
                  "ScaleImage": {
                    "type": "boolean",
                    "description": "Scale the output image. If ScaleImage is False output document will be stripped to ImageHeight / ImageWidth, if ScalePage is True output document will be scaled to ImageHeight / ImageWidth.",
                    "default": false
                  },
                  "ScaleProportions": {
                    "type": "boolean",
                    "description": "Constrain proportions when scaling the output image.",
                    "default": true
                  },
                  "ScaleIfLarger": {
                    "type": "boolean",
                    "description": "Scaling only if the input image is larger than the output.",
                    "default": false
                  },
                  "ImageHeight": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image height in pixels."
                  },
                  "ImageWidth": {
                    "maximum": 20000,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Image width in pixels."
                  },
                  "TextAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of text subsample antialiasing. The subsampling box size should be 4 bits for optimum text antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "GraphicsAntialiasing": {
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "4"
                    ],
                    "type": "string",
                    "description": "Control the use of graphics content subsample antialiasing. The subsampling box size should be 4 bits for optimum graphics content antialiasing, but smaller values can be used for faster rendering.\n * `0` - None\n * `1` - 1 bit\n * `2` - 2 bits\n * `4` - 4 bits",
                    "default": "1"
                  },
                  "ImageInterpolation": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should use image interpolation. Enabling image interpolation will result in higher quality for scaled images at the expense of speed.",
                    "default": false
                  },
                  "UseCIEColor": {
                    "type": "boolean",
                    "description": "Specifies whether the image parser should remap the device-dependent.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    },
    "/convert/zip/to/extract": {
      "summary": "ZIP to EXTRACT File Conversion API",
      "description": "The API for extracting ZIP archives. \n Read more about the converter here: https://www.convertapi.com/zip-to-extract",
      "post": {
        "tags": [
          "Conversion"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "Timeout": {
                    "maximum": 1200,
                    "minimum": 10,
                    "type": "integer",
                    "description": "Conversion timeout in seconds.",
                    "default": 900
                  },
                  "StoreFile": {
                    "type": "boolean",
                    "description": "Store converted file on our secure server and provides download URL.",
                    "default": false
                  },
                  "File": {
                    "type": "string",
                    "description": "File to be converted. Value can be URL or file content.",
                    "format": "binary"
                  },
                  "Password": {
                    "type": "string",
                    "description": "Sets the password to open protected archive."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ConversionCost": {
                      "type": "integer",
                      "description": "This amount will be deducted from your balance after the conversion.",
                      "format": "int32",
                      "example": 1
                    },
                    "Files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "FileName": {
                            "type": "string",
                            "description": "Name of the converted file.",
                            "example": "myfile.pdf"
                          },
                          "FileExt": {
                            "type": "string",
                            "description": "File type (file name extension)",
                            "example": "pdf"
                          },
                          "FileSize": {
                            "type": "integer",
                            "description": "File size",
                            "format": "int32",
                            "example": 111955
                          },
                          "FileId": {
                            "type": "string",
                            "description": "File ID",
                            "example": "25811safe8e61dd3f51ef00ee5f58b92"
                          },
                          "Url": {
                            "type": "string",
                            "description": "File URL",
                            "example": "https://v2.convertapi.com/d/v01plsb72o0cmdooq90w4d1lnqsf6oy4/myfile.pdf"
                          },
                          "FileData": {
                            "type": "string",
                            "description": "Base64 encoded file data",
                            "format": "base64",
                            "example": "JVBERi0xLjcKJb662+4KMSAwIG9iago8PC9UeXBlIC9DYXRhbG9n..."
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationjson-1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#multipartmixed"
                  }
                },
                "example": "--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f\nConversionCost: 1\nContent-Type: application/octet-stream\nContent-Disposition: attachment; filename=\"my_file.pdf\"; size=8475\n\n--FILE CONTENT--\n--43cf1475-ab15-4c6b-b5ee-e2cbcedfe92f--\n"
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "externalDocs": {
                    "url": "https://www.convertapi.com/doc/content-types#applicationoctet-stream-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "secret": []
          },
          {
            "apiKey": []
          },
          {
            "token": []
          },
          {
            "basicAuth": []
          },
          {
            "jwt": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "fileId": {
        "maxLength": 32,
        "minLength": 32,
        "type": "string",
        "description": "Uploaded File ID",
        "example": "25811safe8e61dd3f51ef00ee5f58b92"
      },
      "error": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "description": "Error message code",
            "format": "int32",
            "example": 4000
          },
          "Message": {
            "type": "string",
            "description": "Error message text",
            "example": "Parameter validation error."
          }
        },
        "externalDocs": {
          "url": "https://www.convertapi.com/doc/response-codes"
        }
      }
    },
    "responses": {
      "400": {
        "description": "Malformed request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "401": {
        "description": "Authentication error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "415": {
        "description": "File type error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "500": {
        "description": "Conversion failure",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "503": {
        "description": "Conversion rate limit error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    },
    "parameters": {
      "fileId": {
        "name": "fileId",
        "in": "path",
        "description": "File ID",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/fileId"
        }
      },
      "src": {
        "name": "src",
        "in": "path",
        "description": "Source file format (docx, pdf, jpg etc.)",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "dst": {
        "name": "dst",
        "in": "path",
        "description": "Destination file format (docx, pdf, jpg etc.)",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "content-disposition": {
        "description": "File information ([docummentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition))",
        "schema": {
          "type": "string"
        }
      },
      "file-name": {
        "description": "File name",
        "schema": {
          "type": "string"
        }
      },
      "file-ext": {
        "description": "File name extension",
        "schema": {
          "type": "string"
        }
      },
      "file-size": {
        "description": "File size",
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": {
      "secret": {
        "type": "apiKey",
        "name": "secret",
        "in": "query"
      },
      "apiKey": {
        "type": "apiKey",
        "name": "apikey",
        "in": "query"
      },
      "token": {
        "type": "apiKey",
        "description": "[More information about the `Token`](https://www.convertapi.com/doc/auth#token)",
        "name": "token",
        "in": "query"
      },
      "basicAuth": {
        "type": "http",
        "description": "[More information about the `Basic Authentication`](https://www.convertapi.com/doc/auth#basic-authentication)",
        "scheme": "basic"
      },
      "jwt": {
        "type": "http",
        "description": "[More information about the `JWT`](https://www.convertapi.com/doc/auth#jwt-token)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Conversion",
      "description": "File Conversion API call",
      "externalDocs": {
        "description": "File Conversion related operations",
        "url": "https://www.convertapi.com/doc/content-types"
      }
    },
    {
      "name": "File Server",
      "description": "ConvertAPI temporary file storage",
      "externalDocs": {
        "description": "File Server related operations",
        "url": "https://www.convertapi.com/doc/upload"
      }
    },
    {
      "name": "User",
      "description": "API User",
      "externalDocs": {
        "description": "API User related operations",
        "url": "https://www.convertapi.com/doc/user"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about ConvertAPI",
    "url": "https://www.convertapi.com/doc"
  },
  "x-origin-servers": [
    {
      "url": "https://v2.convertapi.com"
    },
    {
      "url": "https://eu-v2.convertapi.com"
    },
    {
      "url": "https://uk-v2.convertapi.com"
    },
    {
      "url": "https://us-v2.convertapi.com"
    },
    {
      "url": "https://ca-v2.convertapi.com"
    },
    {
      "url": "https://as-v2.convertapi.com"
    },
    {
      "url": "https://au-v2.convertapi.com"
    }
  ]
}