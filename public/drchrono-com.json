{
  "components": {
    "schemas": {
      "Appointment": {
        "properties": {
          "allow_overlapping": {
            "description": "Bypass overlap check.",
            "title": "Allow overlapping",
            "type": "boolean"
          },
          "appt_is_break": {
            "description": "",
            "title": "Appt is break",
            "type": "boolean"
          },
          "base_recurring_appointment": {
            "description": "ID of base appointment of a recurring series",
            "readOnly": true,
            "title": "Base recurring appointment",
            "type": "string"
          },
          "recur_start_date": {
            "description": "For recurring appointments, the start date of the recurring series",
            "title": "Recur start date",
            "type": "string"
          },
          "recur_end_date": {
            "description": "For recurring appointments, the end date of the recurring series",
            "title": "Recur end date",
            "type": "string"
          },
          "recurring_days": {
            "description": "For recurring appointments, the days of the week on which the appointment recurs. Can include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday",
            "title": "Recurring days",
            "type": "array"
          },
          "recurs_every": {
            "description": "For recurring appointments, the number of weeks between recurrences. For example, if this is 2, the appointment recurs every other week.",
            "title": "Recurs every",
            "type": "integer"
          },
          "billing_notes": {
            "description": "Billing notes of the appointment. For writing, check `/api/claim_billing_notes`",
            "items": {
              "description": "Structure of a billing note",
              "properties": {
                "appointment": {
                  "description": "",
                  "title": "Appointment",
                  "type": "integer"
                },
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created by",
                  "type": "string"
                },
                "id": {
                  "description": "ID of the billing note",
                  "readOnly": true,
                  "title": "ID",
                  "type": "integer"
                },
                "text": {
                  "description": "Content of the note",
                  "title": "Text",
                  "type": "string"
                }
              },
              "title": "ClaimBillingNotes",
              "type": "object"
            },
            "readOnly": true,
            "title": "Billing notes",
            "type": "array"
          },
          "billing_provider": {
            "description": "",
            "title": "Billing provider",
            "type": "string"
          },
          "billing_status": {
            "description": "Should be one of `Auto Accident Claim`, `Balance Due`, `Bill Insurance`, `Bill Secondary Insurance`, `Durable Medical Equipment Claim`, `Internal Review`, `Paid In Full`, `Settled`, `Worker's Comp Claim` or one of the custom billing status",
            "title": "Billing status",
            "type": "string"
          },
          "clinical_note": {
            "description": "Associated clinical note object",
            "properties": {
              "locked": {
                "description": "",
                "title": "Locked",
                "type": "boolean"
              },
              "pdf": {
                "description": "",
                "readOnly": true,
                "title": "Pdf",
                "type": "string"
              },
              "updated_at": {
                "description": "",
                "title": "Updated at",
                "type": "string"
              }
            },
            "title": "ClinicalNote",
            "type": "object"
          },
          "cloned_from": {
            "description": "ID of the original appointment which this appointment cloned from. Will be null if the appointment is not cloned.",
            "title": "Cloned From",
            "type": "integer"
          },
          "color": {
            "description": "",
            "title": "Color",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "created_by": {
            "description": "",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "custom_fields": {
            "description": "Custom appointment fields",
            "items": {
              "description": "",
              "properties": {
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "field_type": {
                  "description": "",
                  "title": "Field type",
                  "type": "integer"
                },
                "field_value": {
                  "description": "",
                  "title": "Field value",
                  "type": "string"
                },
                "updated_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Updated at",
                  "type": "string"
                }
              },
              "title": "CustomAppointmentFieldValue",
              "type": "object"
            },
            "title": "Custom fields",
            "type": "array"
          },
          "custom_vitals": {
            "description": "Custom vitals associated with this appointment.",
            "items": {
              "description": "",
              "properties": {
                "value": {
                  "description": "",
                  "title": "Value",
                  "type": "string"
                },
                "vital_type": {
                  "description": "",
                  "title": "Vital type",
                  "type": "integer"
                }
              },
              "title": "CustomVitalValue",
              "type": "object"
            },
            "title": "Custom vitals",
            "type": "array"
          },
          "deleted_flag": {
            "description": "Whether the appointment is deleted.",
            "readOnly": true,
            "title": "Deleted flag",
            "type": "boolean"
          },
          "doctor": {
            "description": "Doctor ID",
            "title": "Doctor",
            "type": "integer"
          },
          "duration": {
            "description": "Length of the appointment in minutes. Optional if `profile` is provided.",
            "title": "Duration",
            "type": "integer"
          },
          "exam_room": {
            "description": "Index of the exam room that this appointment occurs in. See `/api/offices`",
            "title": "Exam room",
            "type": "integer"
          },
          "extended_updated_at": {
            "description": "The most recent update time among appointment itself, its vitals and its custom vitals",
            "readOnly": true,
            "title": "Extended updated at",
            "type": "string"
          },
          "first_billed_date": {
            "description": "",
            "readOnly": true,
            "title": "First billed date",
            "type": "string"
          },
          "first_edi_date": {
            "description": "",
            "readOnly": true,
            "title": "First edi date",
            "type": "string"
          },
          "icd10_codes": {
            "description": "",
            "items": {
              "description": "",
              "title": "",
              "type": "string"
            },
            "title": "Icd10 codes",
            "type": "array"
          },
          "icd9_codes": {
            "description": "",
            "items": {
              "description": "",
              "title": "",
              "type": "string"
            },
            "title": "ICD9 Codes",
            "type": "array"
          },
          "id": {
            "description": "Unique identifier. Usually numeric, but not always",
            "readOnly": true,
            "title": "Id",
            "type": "string"
          },
          "ins1_status": {
            "description": "Billing status of primary insurer",
            "enum": [
              "",
              "Incomplete Information",
              "In Process Emdeon",
              "Rejected Emdeon",
              "Rejected EPS",
              "Rejected Jopari",
              "In Process Payor",
              "Rejected Waystar Professional",
              "Rejected Waystar Institutional",
              "In Process Payer",
              "Payer Acknowledged",
              "Rejected Payor",
              "Rejected Payer",
              "Paid in Full",
              "Partially Paid",
              "Coordination of Benefits",
              "ERA Received",
              "ERA Denied",
              "HCFA Form Faxed"
            ],
            "readOnly": true,
            "title": "Ins1 status",
            "type": "string"
          },
          "ins2_status": {
            "description": "Billing status of secondary insurer",
            "enum": [
              "",
              "Incomplete Information",
              "In Process Emdeon",
              "Rejected Emdeon",
              "Rejected EPS",
              "Rejected Jopari",
              "In Process Payor",
              "Rejected Waystar Professional",
              "Rejected Waystar Institutional",
              "In Process Payer",
              "Payer Acknowledged",
              "Rejected Payor",
              "Rejected Payer",
              "Paid in Full",
              "Partially Paid",
              "Coordination of Benefits",
              "ERA Received",
              "ERA Denied",
              "HCFA Form Faxed"
            ],
            "readOnly": true,
            "title": "Ins2 status",
            "type": "string"
          },
          "is_virtual_base": {
            "description": "",
            "readOnly": true,
            "title": "Is virtual base",
            "type": "boolean"
          },
          "is_walk_in": {
            "description": "Whether the appointment is a walk-in appointment",
            "title": "Is walk in",
            "type": "boolean"
          },
          "last_billed_date": {
            "description": "",
            "readOnly": true,
            "title": "Last billed date",
            "type": "string"
          },
          "last_edi_date": {
            "description": "",
            "readOnly": true,
            "title": "Last edi date",
            "type": "string"
          },
          "notes": {
            "description": "",
            "title": "Notes",
            "type": "string"
          },
          "office": {
            "description": "Office ID",
            "title": "Office",
            "type": "integer"
          },
          "patient": {
            "description": "ID of this appointment's patient. Breaks have a null patient field.",
            "title": "Patient",
            "type": "integer"
          },
          "payment_profile": {
            "description": "Appointment Payment Profile",
            "title": "Payment profile",
            "type": "string"
          },
          "primary_insurance_id_number": {
            "description": "",
            "readOnly": true,
            "title": "Primary insurance id number",
            "type": "string"
          },
          "primary_insurer_name": {
            "description": "",
            "readOnly": true,
            "title": "Primary insurer name",
            "type": "string"
          },
          "primary_insurer_payer_id": {
            "description": "",
            "readOnly": true,
            "title": "Primary insurer payer id",
            "type": "string"
          },
          "profile": {
            "description": "ID of an `/api/appointment_profiles` instance. The profile sets default values for `color`, `duration`, and `reason` on creation, which can be overriden by setting these values explicitly.",
            "title": "Profile",
            "type": "integer"
          },
          "reason": {
            "description": "Default to `\"\"`",
            "title": "Reason",
            "type": "string"
          },
          "recurring_appointment": {
            "description": "Whether the appointment is a recurring appointment or not",
            "title": "Recurring appointment",
            "type": "boolean"
          },
          "reminder_profile": {
            "description": "Write-only. ID of an `/api/reminder_profiles` instance. Set this to apply a reminder profile to the appointment. Cannot be applied to an appointment with reminders.",
            "title": "Reminder profile",
            "type": "string"
          },
          "reminders": {
            "description": "Scheduled reminders of the appointment",
            "items": {
              "description": "",
              "properties": {
                "id": {
                  "description": "",
                  "readOnly": true,
                  "title": "ID",
                  "type": "integer"
                },
                "scheduled_time": {
                  "description": "",
                  "readOnly": true,
                  "title": "Scheduled time",
                  "type": "string"
                },
                "type": {
                  "description": "",
                  "enum": [
                    "email",
                    "sms",
                    "phone",
                    "auto_call"
                  ],
                  "title": "Type",
                  "type": "string"
                }
              },
              "title": "SimpleReminder",
              "type": "object"
            },
            "readOnly": true,
            "title": "Reminders",
            "type": "array"
          },
          "resubmit_claim_original_id": {
            "description": "ID of this claim id.",
            "title": "resubmit_claim_original_id",
            "type": "integer"
          },
          "scheduled_time": {
            "description": "The starting time of the appointment",
            "title": "Scheduled time",
            "type": "string"
          },
          "secondary_insurance_id_number": {
            "description": "",
            "readOnly": true,
            "title": "Secondary insurance id number",
            "type": "string"
          },
          "secondary_insurer_name": {
            "description": "",
            "readOnly": true,
            "title": "Secondary insurer name",
            "type": "string"
          },
          "secondary_insurer_payer_id": {
            "description": "",
            "readOnly": true,
            "title": "Secondary insurer payer id",
            "type": "string"
          },
          "status": {
            "description": "One of ``, `Arrived`, `Checked In`, `In Room`, `Cancelled`, `Complete`, `Confirmed`, `In Session`, `No Show`, `Not Confirmed`, or `Rescheduled`. Or one of the custom statuses.",
            "enum": [
              "",
              "Arrived",
              "Checked In",
              "Checked In Online",
              "In Room",
              "In Session",
              "Complete",
              "Confirmed",
              "Not Confirmed",
              "Rescheduled",
              "Cancelled",
              "No Show"
            ],
            "title": "Status",
            "type": "string"
          },
          "status_transitions": {
            "description": "",
            "items": {
              "description": "",
              "properties": {
                "appointment": {
                  "description": "",
                  "readOnly": true,
                  "title": "Appointment",
                  "type": "string"
                },
                "datetime": {
                  "description": "",
                  "readOnly": true,
                  "title": "Datetime",
                  "type": "string"
                },
                "from_status": {
                  "description": "",
                  "readOnly": true,
                  "title": "From status",
                  "type": "string"
                },
                "to_status": {
                  "description": "",
                  "readOnly": true,
                  "title": "To status",
                  "type": "string"
                }
              },
              "title": "AppointmentStatusTransition",
              "type": "object"
            },
            "readOnly": true,
            "title": "Status transitions",
            "type": "array"
          },
          "supervising_provider": {
            "description": "Supervising provider of appointment if set.",
            "title": "Supervising provider",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "vitals": {
            "description": "Clinical vitals associated with the appointment",
            "properties": {
              "blood_pressure_1": {
                "description": "",
                "title": "Blood pressure 1",
                "type": "integer"
              },
              "blood_pressure_2": {
                "description": "",
                "title": "Blood pressure 2",
                "type": "integer"
              },
              "bmi": {
                "description": "",
                "readOnly": true,
                "title": "Bmi",
                "type": "string"
              },
              "head_circumference": {
                "description": "",
                "title": "Head circumference",
                "type": "number"
              },
              "head_circumference_units": {
                "description": "",
                "title": "Head circumference units",
                "type": "string"
              },
              "height": {
                "description": "",
                "title": "Height",
                "type": "number"
              },
              "height_units": {
                "description": "",
                "title": "Height units",
                "type": "string"
              },
              "oxygen_saturation": {
                "description": "",
                "title": "Oxygen saturation",
                "type": "number"
              },
              "pain": {
                "description": "0-10 pain scale.",
                "title": "Pain",
                "type": "string"
              },
              "pulse": {
                "description": "Beats per minute.",
                "title": "Pulse",
                "type": "integer"
              },
              "respiratory_rate": {
                "description": "Breathes per minute.",
                "title": "Respiratory rate",
                "type": "integer"
              },
              "smoking_status": {
                "description": "",
                "enum": [
                  "blank",
                  "449868002",
                  "428041000124106",
                  "8517006",
                  "266919005",
                  "77176002",
                  "266927001",
                  "428071000124103",
                  "428061000124105"
                ],
                "title": "Smoking status",
                "type": "string"
              },
              "temperature": {
                "description": "",
                "title": "Temperature",
                "type": "number"
              },
              "temperature_units": {
                "description": "",
                "title": "Temperature units",
                "type": "string"
              },
              "weight": {
                "description": "",
                "title": "Weight",
                "type": "number"
              },
              "weight_units": {
                "description": "",
                "title": "Weight units",
                "type": "string"
              }
            },
            "title": "SystemVitals",
            "type": "object"
          }
        },
        "required": [
          "doctor",
          "exam_room",
          "office",
          "patient",
          "scheduled_time"
        ],
        "type": "object",
        "x-verbose-required": [
          "reminders",
          "vitals",
          "custom_fields",
          "custom_vitals",
          "clinical_note",
          "extended_updated_at",
          "status_transitions"
        ]
      },
      "AppointmentProfile": {
        "description": "Appointment profiles are for common kinds of appointments a doctor might have, such as \"physical exam\", which have a standard duration and should show up as the same color on the calendar.",
        "properties": {
          "archived": {
            "description": "Indicates that the object has been soft-deleted and should not be used",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "color": {
            "description": "",
            "title": "Color",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "duration": {
            "description": "Length of an appointment in minutes",
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "online_scheduling": {
            "description": "Whether this profile should be available for online scheduling",
            "title": "Online scheduling",
            "type": "boolean"
          },
          "reason": {
            "description": "",
            "title": "Reason",
            "type": "string"
          },
          "sort_order": {
            "description": "Override the usual ordering ordering of appointments in the patient's appointments page. Lower values are shown at the top",
            "title": "Sort order",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "color",
          "online_scheduling"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "AppointmentTemplate": {
        "description": "Appointment templates are blocks of time during which a doctor usually sees appointments with the same profile. These may have a longer duration then the corresponding profile, in which case they may allow multiple appointments to be booked during that period.",
        "properties": {
          "archived": {
            "description": "Indicats that the object has been soft-deleted and should not be used",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "date_end": {
            "description": "",
            "title": "Date end",
            "type": "string"
          },
          "date_start": {
            "description": "",
            "title": "Date start",
            "type": "string"
          },
          "duration": {
            "description": "Length of an appointment in minutes",
            "title": "Duration",
            "type": "integer"
          },
          "exam_room": {
            "description": "**1-based** index for the exam room",
            "title": "Exam room",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "office": {
            "description": "",
            "title": "Office",
            "type": "integer"
          },
          "open_slots": {
            "description": "Array of time intervals during which the template is available. Only computed if the available and verbose query parameters are passed. Note that only slots long enough to fit an appointment with the corresponding profile are included.",
            "items": {
              "description": "",
              "properties": {
                "end": {
                  "description": "",
                  "title": "End",
                  "type": "string"
                },
                "start": {
                  "description": "",
                  "title": "Start",
                  "type": "string"
                }
              },
              "title": "Open Slot",
              "type": "object"
            },
            "title": "Open Slots",
            "type": "array"
          },
          "profile": {
            "description": "ID of the appointment profile to default to",
            "title": "Profile",
            "type": "integer"
          },
          "scheduled_time": {
            "description": "",
            "title": "Scheduled time",
            "type": "string"
          },
          "week_days": {
            "description": "Array of integers that indicate week days (`0` = Monday, ..., `6` = Sunday)",
            "items": {
              "description": "",
              "title": "",
              "type": "integer"
            },
            "title": "Week days",
            "type": "array"
          }
        },
        "required": [
          "office",
          "exam_room",
          "scheduled_time",
          "profile",
          "week_days"
        ],
        "type": "object",
        "x-verbose-required": [
          "open_slots"
        ]
      },
      "AuditLog": {
        "properties": {
          "appointment": {
            "description": "Appointment",
            "title": "Appointment",
            "type": "string"
          },
          "billing_status": {
            "description": "One of `\"\"`, `\"Incomplete Information\"`, `\"In Process Emdeon\"`, `\"In Process iHCFA\"`, `\"In Process Gateway\"`, `\"Rejected Emdeon\"`, `\"Rejected iHCFA\"`, `\"Rejected Gateway\"`, `\"In Process Payer\"`, `\"Payer Acknowledged\"`, `\"Rejected Payer\"`, `\"Paid in Full\"`,  `\"Partially Paid\"`,  `\"Coordination of Benefits\"`,  `\"ERA Received\"`,  `\"ERA Denied\"`",
            "enum": [
              "",
              "Incomplete Information",
              "In Process Emdeon",
              "In Process iHCFA",
              "In Process Gateway",
              "In Process Jopari",
              "In Process Waystar",
              "In Process EPS",
              "Rejected Emdeon",
              "Rejected iHCFA",
              "Rejected Gateway",
              "Rejected Jopari",
              "Rejected Waystar",
              "Rejected EPS",
              "In Process Payer",
              "Payer Acknowledged",
              "Rejected Payer",
              "Paid in Full",
              "Partially Paid",
              "Coordination of Benefits",
              "ERA Received",
              "ERA Denied"
            ],
            "readOnly": true,
            "title": "Billing status",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "created_by": {
            "description": "",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "notes": {
            "description": "",
            "title": "Notes",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": [
          "description"
        ]
      },
      "BillingLineItem": {
        "properties": {
          "adjustment": {
            "description": "Adjustment from total billed",
            "readOnly": true,
            "title": "Adjustment",
            "type": "number"
          },
          "allowed": {
            "description": "Amount allowed by insurance",
            "readOnly": true,
            "title": "Allowed",
            "type": "number"
          },
          "appointment": {
            "description": "Appointment ID",
            "title": "Appointment",
            "type": "integer"
          },
          "balance_ins": {
            "description": "Insurance balance",
            "title": "Balance ins",
            "type": "number"
          },
          "balance_pt": {
            "description": "Patient balance",
            "readOnly": true,
            "title": "Balance pt",
            "type": "number"
          },
          "balance_total": {
            "description": "Total balance",
            "readOnly": true,
            "title": "Balance total",
            "type": "string"
          },
          "billed": {
            "description": "Total billed",
            "readOnly": true,
            "title": "Billed",
            "type": "number"
          },
          "billing_status": {
            "description": "One of `\"\"`, `\"Incomplete Information\"`, `\"In Process Emdeon\"`, `\"In Process iHCFA\"`, `\"In Process Gateway\"`, `\"Rejected Emdeon\"`, `\"Rejected iHCFA\"`, `\"Rejected Gateway\"`, `\"In Process Payer\"`, `\"Payer Acknowledged\"`, `\"Rejected Payer\"`, `\"Paid in Full\"`,  `\"Partially Paid\"`,  `\"Coordination of Benefits\"`,  `\"ERA Received\"`,  `\"ERA Denied\"`",
            "enum": [
              "",
              "Incomplete Information",
              "In Process Emdeon",
              "In Process iHCFA",
              "In Process Gateway",
              "In Process Jopari",
              "In Process Waystar",
              "In Process EPS",
              "Rejected Emdeon",
              "Rejected iHCFA",
              "Rejected Gateway",
              "Rejected Jopari",
              "Rejected Waystar",
              "Rejected EPS",
              "In Process Payer",
              "Payer Acknowledged",
              "Rejected Payer",
              "Paid in Full",
              "Partially Paid",
              "Coordination of Benefits",
              "ERA Received",
              "ERA Denied"
            ],
            "readOnly": true,
            "title": "Billing status",
            "type": "string"
          },
          "code": {
            "description": "",
            "title": "Code",
            "type": "string"
          },
          "denied_flag": {
            "description": "",
            "readOnly": true,
            "title": "Denied flag",
            "type": "boolean"
          },
          "description": {
            "description": "",
            "readOnly": true,
            "title": "Description",
            "type": "string"
          },
          "diagnosis_pointers": {
            "description": "List of 4 diagnosis pointers",
            "items": {
              "description": "String representation of an integer or ICD code",
              "title": "",
              "type": "string"
            },
            "title": "Diagnosis pointers",
            "type": "array"
          },
          "doctor": {
            "description": "Doctor ID",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "expected_reimbursement": {
            "description": "",
            "readOnly": true,
            "title": "Expected reimbursement",
            "type": "number"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "ins1_paid": {
            "description": "Amount paid by patient's primary insurer",
            "readOnly": true,
            "title": "Ins1 paid",
            "type": "number"
          },
          "ins2_paid": {
            "description": "Amount paid by patient's secondary insurer",
            "readOnly": true,
            "title": "Ins2 paid",
            "type": "number"
          },
          "ins3_paid": {
            "description": "Amount paid by patinet's tertiary insurer",
            "readOnly": true,
            "title": "Ins3 paid",
            "type": "number"
          },
          "ins_total": {
            "description": "Total amount paid by patient's insurers",
            "readOnly": true,
            "title": "Ins total",
            "type": "string"
          },
          "insurance_status": {
            "description": "This corresponds to the \"Status/Adj Type\" from billing detail screen",
            "readOnly": true,
            "title": "Insurance status",
            "type": "string"
          },
          "modifiers": {
            "description": "List of 4 code modifiers",
            "items": {
              "description": "String representation of modifier",
              "title": "",
              "type": "string"
            },
            "title": "Modifiers",
            "type": "array"
          },
          "paid_total": {
            "description": "Total amount paid",
            "readOnly": true,
            "title": "Paid total",
            "type": "string"
          },
          "patient": {
            "description": "Patient ID",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "posted_date": {
            "description": "date of line_item creation",
            "readOnly": true,
            "title": "Posted date",
            "type": "string"
          },
          "price": {
            "description": "Price of procedure",
            "title": "Price",
            "type": "number"
          },
          "procedure_type": {
            "description": "One of `\"CPT(C)\"`, `\"HCPCS(H)\"`, `\"Custom(U)\"`, use 1 character identifier when using `POST`",
            "enum": [
              "C",
              "H",
              "U",
              "S"
            ],
            "title": "Procedure type",
            "type": "string"
          },
          "pt_paid": {
            "description": "Amount paid by patient",
            "title": "Pt paid",
            "type": "number"
          },
          "quantity": {
            "description": "",
            "title": "Quantity",
            "type": "number"
          },
          "service_date": {
            "description": "Date on which the service was rendered",
            "readOnly": true,
            "title": "Service date",
            "type": "string"
          },
          "units": {
            "description": "Default to \"UN\"",
            "title": "Units",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "appointment",
          "code",
          "procedure_type",
          "diagnosis_pointers"
        ],
        "type": "object",
        "x-verbose-required": [
          "description"
        ]
      },
      "BillingLineItemDeletion": {
        "properties": {
          "billing_line_item_id": {
            "description": "The ID of the original billing line item",
            "readOnly": true,
            "title": "Billing Line Item ID",
            "type": "number"
          },
          "created_at": {
            "description": "Date when the billing line item was deleted",
            "readOnly": true,
            "title": "Created At",
            "type": "string"
          },
          "appointment_id": {
            "description": "Appointment ID of the original billing line item",
            "readOnly": true,
            "title": "Appointment ID",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BillingProfile": {
        "properties": {
          "archived": {
            "description": "",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "cpt_codes": {
            "description": "Array of CPT Code objects",
            "items": {
              "description": "CPT Code object",
              "properties": {
                "code": {
                  "description": "",
                  "title": "Code",
                  "type": "string"
                },
                "diagnosis_pointers_icd10": {
                  "description": "ICD10 codes represented in strings",
                  "items": {
                    "description": "",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Diagnosis pointers icd10",
                  "type": "array"
                },
                "diagnosis_pointers_icd9": {
                  "description": "ICD9 codes represented in strings",
                  "items": {
                    "description": "",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Diagnosis pointers icd9",
                  "type": "array"
                },
                "modifiers": {
                  "description": "Modifiers represented in strings",
                  "items": {
                    "description": "",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Modifiers",
                  "type": "array"
                },
                "ndc_code": {
                  "description": "Array of NDC Code objects",
                  "items": {
                    "description": "NDC code object",
                    "properties": {
                      "ndc_package_code": {
                        "description": "",
                        "title": "Ndc package code",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "",
                        "title": "Quantity",
                        "type": "string"
                      },
                      "units": {
                        "description": "Can be one of `F2`(International Unit), `GR`(Gram), `ME`(Milligram), `ML`(Millimeter) or `UN`(Unit)",
                        "enum": [
                          "F2",
                          "GR",
                          "ME",
                          "ML",
                          "UN"
                        ],
                        "title": "Units",
                        "type": "string"
                      }
                    },
                    "title": "",
                    "type": "object"
                  },
                  "title": "Ndc code",
                  "type": "array"
                },
                "price": {
                  "description": "This field is represented in string format",
                  "title": "Price",
                  "type": "string"
                },
                "quantity": {
                  "description": "This field is represented in string format",
                  "title": "Quantity",
                  "type": "string"
                }
              },
              "title": "",
              "type": "object"
            },
            "readOnly": true,
            "title": "Cpt codes",
            "type": "array"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "custom_procedure_codes": {
            "description": "Array of custom procedure code objects",
            "items": {
              "description": "Custom procedure code object",
              "properties": {
                "code": {
                  "description": "",
                  "title": "Code",
                  "type": "string"
                },
                "price": {
                  "description": "This field is represented in string format",
                  "title": "Price",
                  "type": "string"
                },
                "quantity": {
                  "description": "This field is represented in string format",
                  "title": "Quantity",
                  "type": "string"
                }
              },
              "title": "",
              "type": "object"
            },
            "readOnly": true,
            "title": "Custom procedure codes",
            "type": "array"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "hcpcs_codes": {
            "description": "Array of HCPCS Code objects",
            "items": {
              "description": "HCPCS code object",
              "properties": {
                "code": {
                  "description": "",
                  "title": "Code",
                  "type": "string"
                },
                "diagnosis_pointers_icd10": {
                  "description": "ICD10 codes represented in array of strings",
                  "items": {
                    "description": "ICD Code in string format",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Diagnosis pointers icd10",
                  "type": "array"
                },
                "diagnosis_pointers_icd9": {
                  "description": "ICD9 codes represented in array of strings",
                  "items": {
                    "description": "ICD9 Code in string format",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Diagnosis pointers icd9",
                  "type": "array"
                },
                "modifiers": {
                  "description": "Modifiers represented in array of strings",
                  "items": {
                    "description": "Modifier in string format",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Modifiers",
                  "type": "array"
                },
                "ndc_code": {
                  "description": "Array of NDC Code objects",
                  "items": {
                    "description": "NDC code object",
                    "properties": {
                      "ndc_package_code": {
                        "description": "",
                        "title": "Ndc package code",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "",
                        "title": "Quantity",
                        "type": "string"
                      },
                      "units": {
                        "description": "Can be one of `F2`(International Unit), `GR`(Gram), `ME`(Milligram), `ML`(Millimeter) or `UN`(Unit)",
                        "enum": [
                          "F2",
                          "GR",
                          "ME",
                          "ML",
                          "UN"
                        ],
                        "title": "Units",
                        "type": "string"
                      }
                    },
                    "title": "",
                    "type": "object"
                  },
                  "title": "Ndc code",
                  "type": "array"
                },
                "price": {
                  "description": "This field is represented in string format",
                  "title": "Price",
                  "type": "string"
                },
                "quantity": {
                  "description": "This field is represented in string format",
                  "title": "Quantity",
                  "type": "string"
                }
              },
              "title": "",
              "type": "object"
            },
            "readOnly": true,
            "title": "Hcpcs codes",
            "type": "array"
          },
          "icd10_codes": {
            "description": "ICD10 Codes represented in string format",
            "items": {
              "description": "ICD10 Code in string format",
              "title": "",
              "type": "string"
            },
            "readOnly": true,
            "title": "Icd10 codes",
            "type": "array"
          },
          "icd9_codes": {
            "description": "ICD9 Codes represented in string format",
            "items": {
              "description": "ICD9 Code in string format",
              "title": "",
              "type": "string"
            },
            "readOnly": true,
            "title": "Icd9 codes",
            "type": "array"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "CarePlan": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "code": {
            "description": "",
            "readOnly": true,
            "title": "Code",
            "type": "string"
          },
          "code_system": {
            "description": "",
            "readOnly": true,
            "title": "Code system",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "description": {
            "description": "",
            "readOnly": true,
            "title": "Description",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "instructions": {
            "description": "",
            "readOnly": true,
            "title": "Instructions",
            "type": "string"
          },
          "patient": {
            "description": "",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "plan_type": {
            "description": "Can be one of the following: `1`(Goal), `2`(Patient education), `3`(Patient decision aid), `4`(Patient clinical instruction), `5`(Referral to other doctor), `6`(Health concerns)",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "readOnly": true,
            "title": "Plan type",
            "type": "string"
          },
          "scheduled_date": {
            "description": "",
            "readOnly": true,
            "title": "Scheduled date",
            "type": "string"
          },
          "title": {
            "description": "",
            "readOnly": true,
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "CareTeamMember": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "patient": {
            "description": "",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "user": {
            "description": "",
            "readOnly": true,
            "title": "User",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "CashPayment": {
        "properties": {
          "amount": {
            "description": "Amount of cash for this payment, cannot be zero",
            "title": "Amount",
            "type": "number"
          },
          "appointment": {
            "description": "If this is absent, the apponitment will be inferred from line item",
            "title": "Appointment",
            "type": "integer"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "created_by": {
            "description": "",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "line_item": {
            "description": "",
            "title": "Line item",
            "type": "integer"
          },
          "notes": {
            "description": "",
            "title": "Notes",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "payment_method": {
            "description": "`\"CASH\", \"CHCK\" for Check, \"DBIT\" for Debit, \"CRDT\" for Credit Card, \"AMEX\" for American Express, \"VISA\", \"MSTR\" for Mastercard, \"DISC\" for Discover, \"SQR1\" for Square (legacy), \"SQRE\" for Square, \"PTPA\" for Patient Payments, \"ONPT\" for onpatient, \"OTHR\" for Other`",
            "enum": [
              "DRCP",
              "CASH",
              "CHCK",
              "DBIT",
              "CRDT",
              "AMEX",
              "VISA",
              "MSTR",
              "DISC",
              "SQR1",
              "SQRE",
              "PTPA",
              "ONPT",
              "OTHR"
            ],
            "title": "Payment method",
            "type": "string"
          },
          "payment_transaction_type": {
            "description": "`\"\" for Credit, \"REF\" for Refund, \"COR\" for Correction, \"COPAY\" for Copay, \"COINSR\" for Coinsurance, \"OTHR\" for Other`",
            "enum": [
              "",
              "REF",
              "COR",
              "COPAY",
              "COINSR",
              "OTHR"
            ],
            "title": "Payment transaction type",
            "type": "string"
          },
          "posted_date": {
            "description": "",
            "readOnly": true,
            "title": "Posted date",
            "type": "string"
          },
          "received_date": {
            "description": "",
            "title": "Received date",
            "type": "string"
          },
          "trace_number": {
            "description": "",
            "title": "Trace number",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "CashPaymentLog": {
        "properties": {
          "action": {
            "description": "`C`(Create), `U`(Update), `D`(Delete), `F`(Fill), `A`(Autofill)",
            "enum": [
              "C",
              "U",
              "D",
              "F",
              "A"
            ],
            "title": "Action",
            "type": "string"
          },
          "amount": {
            "description": "",
            "title": "Amount",
            "type": "number"
          },
          "appointment": {
            "description": "ID of appointment associated with the payment",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "created_by": {
            "description": "ID of user who created the payment",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "patient": {
            "description": "",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "payment_method": {
            "description": "`\"CASH\", \"CHCK\" for Check, \"DBIT\" for Debit, \"CRDT\" for Credit Card, \"AMEX\" for American Express, \"VISA\", \"MSTR\" for Mastercard, \"DISC\" for Discover, \"SQR1\" for Square (legacy), \"SQRE\" for Square, \"PTPA\" for Patient Payments, \"ONPT\" for onpatient, \"OTHR\" for Other`",
            "enum": [
              "DRCP",
              "CASH",
              "CHCK",
              "DBIT",
              "CRDT",
              "AMEX",
              "VISA",
              "MSTR",
              "DISC",
              "SQR1",
              "SQRE",
              "PTPA",
              "ONPT",
              "OTHR"
            ],
            "title": "Payment method",
            "type": "string"
          },
          "source": {
            "description": "",
            "title": "Source",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "ClaimBillingNotes": {
        "properties": {
          "appointment": {
            "description": "",
            "title": "Appointment",
            "type": "integer"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "created_by": {
            "description": "ID of `/users` when created the note",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "text": {
            "description": "",
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "appointment"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "ClinicalNote": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "archived": {
            "description": "",
            "title": "Archived",
            "type": "boolean"
          },
          "clinical_note_sections": {
            "description": "",
            "items": {
              "description": "",
              "properties": {
                "clinical_note_template": {
                  "description": "",
                  "title": "Clinical Note Template",
                  "type": "integer"
                },
                "name": {
                  "description": "",
                  "title": "Name",
                  "type": "string"
                },
                "values": {
                  "description": "",
                  "items": {
                    "description": "",
                    "properties": {
                      "clinical_note_field": {
                        "description": "",
                        "title": "Clinical Note Field",
                        "type": "integer"
                      },
                      "id": {
                        "description": "",
                        "title": "Id",
                        "type": "integer"
                      },
                      "value": {
                        "description": "",
                        "title": "",
                        "type": "string"
                      }
                    },
                    "title": "Value",
                    "type": "object"
                  },
                  "title": "Values",
                  "type": "array"
                }
              },
              "title": "Clinical Note Section",
              "type": "object"
            },
            "title": "Clinical Note Sections",
            "type": "array"
          },
          "patient": {
            "description": "",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "signee": {
            "description": "",
            "properties": {
              "locked_by": {
                "description": "",
                "readOnly": true,
                "title": "Locked by",
                "type": "string"
              },
              "supervisor_locked_by": {
                "description": "",
                "readOnly": true,
                "title": "Supervisor locked by",
                "type": "string"
              }
            },
            "title": "ClinicalNote",
            "type": "object"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "ConsentForm": {
        "properties": {
          "archived": {
            "description": "",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "assign_by_default": {
            "description": "If true, consent form will always be automatically assigned to appointments",
            "title": "Assign by default",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "is_mandatory": {
            "description": "If true, consent form must be signed prior to appointment check in",
            "title": "Is mandatory",
            "type": "boolean"
          },
          "order": {
            "description": "The order of consent forms that will show in management screen",
            "readOnly": true,
            "title": "Order",
            "type": "integer"
          },
          "title": {
            "description": "",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "uri": {
            "description": "Files are passed using `multipart/form-data` encoding, but returned as URLs.",
            "title": "Uri",
            "type": "string"
          }
        },
        "required": [
          "assign_by_default",
          "doctor",
          "is_mandatory",
          "title",
          "uri"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "Coverage": {
        "properties": {
          "id": {
            "description": "System identifier",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp of most recent record update",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "cob_level": {
            "description": "The level of insurance the eligibility check was run on. Can be one of the following: `Primary Insurance` or `Secondary Insurance`",
            "readOnly": true,
            "title": "Cob level",
            "type": "string"
          },
          "coverage_details": {
            "description": "A variable size object containing the details of the eligibility check, if returned by the clearinghouse that ran the eligibility check",
            "readOnly": true,
            "title": "Coverage details",
            "type": "string"
          },
          "coverage_subscriber": {
            "description": "A variable size object containing subscriber information, if returned by the clearinghouse that ran the eligibility check",
            "readOnly": true,
            "title": "Coverage subscriber",
            "type": "string"
          },
          "eligibility": {
            "description": "\nValue | Description\n--- | ----\n`'1'` | Active Coverage\n`'2'` | Active - Full Risk Capitation\n`'3'` | Active - Services Capitated\n`'4'` | Active - Services Capitated to Primary Care Physician\n`'5'` | Active - Pending Investigation\n`'6'` | Inactive\n`'7'` | Inactive - Pending Eligibility Update\n`'8'` | Inactive - Pending Investigation\n`'A'` | Co-Insurance\n`'B'` | Co-Payment\n`'C'` | Deductible\n`'CB'` | Coverage Basis\n`'D'` | Benefit Description\n`'E'` | Exclusions\n`'F'` | Limitations\n`'G'` | Out of Pocket (Stop Loss)\n`'H'` | Unlimited\n`'I'` | Non-Covered\n`'J'` | Cost Containment\n`'K'` | Reserve\n`'L'` | Primary Care Provider\n`'M'` | Pre-existing Condition\n`'MC'` | Managed Care Coordinator\n`'N'` | Services Restricted to Following Provider\n`'O'` | Not Deemed a Medical Necessity\n`'P'` | Benefit Disclaimer\n`'Q'` | Second Surgical Opinion Required\n`'R'` | Other or Additional Payor\n`'S'` | Prior Year(s) History\n`'T'` | Card(s) Reported Lost/Stolen\n`'U'` | Contact Following Entity for Eligibility or Benefit Information\n`'V'` | Cannot Process\n`'W'` | Other Source of Data\n`'X'` | Health Care Facility\n`'Y'` | Spend Down\n",
            "title": "Eligibility",
            "type": "string"
          },
          "patient": {
            "description": "",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "payer_name": {
            "description": "The name of the payer as returned by the clearinghouse that ran the eligibility check",
            "title": "Payer name",
            "type": "string"
          },
          "query_date": {
            "description": "The time at which the request was made",
            "readOnly": true,
            "title": "Query date",
            "type": "string"
          },
          "request_service_type": {
            "description": "\nValue | Description\n--- | ----\n`'1'` | Medical Care\n`'2'` | Surgical\n`'3'` | Consultation\n`'4'` | Diagnostic X-Ray\n`'5'` | Diagnostic Lab\n`'6'` | Radiation Therapy\n`'7'` | Anesthesia\n`'8'` | Surgical Assistance\n`'9'` | Other Medical\n`'10'` | Blood Charges\n`'11'` | Used Durable Medical Equipment\n`'12'` | Durable Medical Equipment Purchase\n`'13'` | Ambulatory Service Center Facility\n`'14'` | Renal Supplies in the Home\n`'15'` | Alternate Method Dialysis\n`'16'` | Chronic Renal Disease (CRD) Equipment\n`'17'` | Pre-Admission Testing\n`'18'` | Durable Medical Equipment Rental\n`'19'` | Pneumonia Vaccine\n`'20'` | Second Surgical Opinion\n`'21'` | Third Surgical Opinion\n`'22'` | Social Work\n`'23'` | Diagnostic Dental\n`'24'` | Periodontics\n`'25'` | Restorative\n`'26'` | Endodontics\n`'27'` | Maxillofacial Prosthetics\n`'28'` | Adjunctive Dental Services\n`'30'` | Health Benefit Plan Coverage\n`'32'` | Plan Waiting Period\n`'33'` | Chiropractic\n`'34'` | Chiropractic Office Visits\n`'35'` | Dental Care\n`'36'` | Dental Crowns\n`'37'` | Dental Accident\n`'38'` | Orthodontics\n`'39'` | Prosthodontics\n`'40'` | Oral Surgery\n`'41'` | Routine (Preventive) Dental\n`'42'` | Home Health Care\n`'43'` | Home Health Prescriptions\n`'44'` | Home Health Visits\n`'45'` | Hospice\n`'46'` | Respite Care\n`'47'` | Hospital\n`'48'` | Hospital - Inpatient\n`'49'` | Hospital - Room and Board\n`'50'` | Hospital - Outpatient\n`'51'` | Hospital - Emergency Accident\n`'52'` | Hospital - Emergency Medical\n`'53'` | Hospital - Ambulatory Surgical\n`'54'` | Long Term Care\n`'55'` | Major Medical\n`'56'` | Medically Related Transportation\n`'57'` | Air Transportation\n`'58'` | Cabulance\n`'59'` | Licensed Ambulance\n`'60'` | General Benefits\n`'61'` | In-vitro Fertilization\n`'62'` | MRI/CAT Scan\n`'63'` | Donor Procedures\n`'64'` | Acupuncture\n`'65'` | Newborn Care\n`'66'` | Pathology\n`'67'` | Smoking Cessation\n`'68'` | Well Baby Care\n`'69'` | Maternity\n`'70'` | Transplants\n`'71'` | Audiology Exam\n`'72'` | Inhalation Therapy\n`'73'` | Diagnostic Medical\n`'74'` | Private Duty Nursing\n`'75'` | Prosthetic Device\n`'76'` | Dialysis\n`'77'` | Otological Exam\n`'78'` | Chemotherapy\n`'79'` | Allergy Testing\n`'80'` | Immunizations\n`'81'` | Routine Physical\n`'82'` | Family Planning\n`'83'` | Infertility\n`'84'` | Abortion\n`'85'` | AIDS\n`'86'` | Emergency Services\n`'87'` | Cancer\n`'88'` | Pharmacy\n`'89'` | Free Standing Prescription Drug\n`'90'` | Mail Order Prescription Drug\n`'91'` | Brand Name Prescription Drug\n`'92'` | Generic Prescription Drug\n`'93'` | Podiatry\n`'94'` | Podiatry - Office Visits\n`'95'` | Podiatry - Nursing Home Visits\n`'96'` | Professional (Physician)\n`'97'` | Anesthesiologist\n`'98'` | Professional (Physician) Visit - Office\n`'99'` | Professional (Physician) Visit - Inpatient\n`'A0'` | Professional (Physician) Visit - Outpatient\n`'A1'` | Professional (Physician) Visit - Nursing Home\n`'A2'` | Professional (Physician) Visit - Skilled Nursing Facility\n`'A3'` | Professional (Physician) Visit - Home\n`'A4'` | Psychiatric\n`'A5'` | Psychiatric - Room and Board\n`'A6'` | Psychotherapy\n`'A7'` | Psychiatric - Inpatient\n`'A8'` | Psychiatric - Outpatient\n`'A9'` | Rehabilitation\n`'AA'` | Rehabilitation - Room and Board\n`'AB'` | Rehabilitation - Inpatient\n`'AC'` | Rehabilitation - Outpatient\n`'AD'` | Occupational Therapy\n`'AE'` | Physical Medicine\n`'AF'` | Speech Therapy\n`'AG'` | Skilled Nursing Care\n`'AH'` | Skilled Nursing Care - Room and Board\n`'AI'` | Substance Abuse\n`'AJ'` | Alcoholism\n`'AK'` | Drug Addiction\n`'AL'` | Vision (Optometry)\n`'AM'` | Frames\n`'AN'` | Routine Exam\n`'AO'` | Lenses\n`'AQ'` | Nonmedically Necessary Physical\n`'AR'` | Experimental Drug Therapy\n`'B1'` | Burn Care\n`'B2'` | Brand Name Prescription Drug - Formulary\n`'B3'` | Brand Name Prescription Drug - Non-Formulary\n`'BA'` | Independent Medical Evaluation\n`'BB'` | Partial Hospitalization (Psychiatric)\n`'BC'` | Day Care (Psychiatric)\n`'BD'` | Cognitive Therapy\n`'BE'` | Massage Therapy\n`'BF'` | Pulmonary Rehabilitation\n`'BG'` | Cardiac Rehabilitation\n`'BH'` | Pediatric\n`'BI'` | Nursery\n`'BJ'` | Skin\n`'BK'` | Orthopedic\n`'BL'` | Cardiac\n`'BM'` | Lymphatic\n`'BN'` | Gastrointestinal\n`'BP'` | Endocrine\n`'BQ'` | Neurology\n`'BR'` | Eye\n`'BS'` | Invasive Procedures\n`'BT'` | Gynecological\n`'BU'` | Obstetrical\n`'BV'` | Obstetrical/Gynecological\n`'BW'` | Mail Order Prescription Drug: Brand Name\n`'BX'` | Mail Order Prescription Drug: Generic\n`'BY'` | Physician Visit - Office: Sick\n`'BZ'` | Physician Visit - Office: Well\n`'C1'` | Coronary Care\n`'CA'` | Private Duty Nursing - Inpatient\n`'CB'` | Private Duty Nursing - Home\n`'CC'` | Surgical Benefits - Professional (Physician)\n`'CD'` | Surgical Benefits - Facility\n`'CE'` | Mental Health Provider - Inpatient\n`'CF'` | Mental Health Provider - Outpatient\n`'CG'` | Mental Health Facility - Inpatient\n`'CH'` | Mental Health Facility - Outpatient\n`'CI'` | Substance Abuse Facility - Inpatient\n`'CJ'` | Substance Abuse Facility - Outpatient\n`'CK'` | Screening X-ray\n`'CL'` | Screening laboratory\n`'CM'` | Mammogram, High Risk Patient\n`'CN'` | Mammogram, Low Risk Patient\n`'CO'` | Flu Vaccination\n`'CP'` | Eyewear and Eyewear Accessories\n`'CQ'` | Case Management\n`'DG'` | Dermatology\n`'DM'` | Durable Medical Equipment\n`'DS'` | Diabetic Supplies\n`'GF'` | Generic Prescription Drug - Formulary\n`'GN'` | Generic Prescription Drug - Non-Formulary\n`'GY'` | Allergy\n`'IC'` | Intensive Care\n`'MH'` | Mental Health\n`'NI'` | Neonatal Intensive Care\n`'ON'` | Oncology\n`'PT'` | Physical Therapy\n`'PU'` | Pulmonary\n`'RN'` | Renal\n`'RT'` | Residential Psychiatric Treatment\n`'TC'` | Transitional Care\n`'TN'` | Transitional Nursery Care\n`'UC'` | Urgent Care\n",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "30",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37",
              "38",
              "39",
              "40",
              "41",
              "42",
              "43",
              "44",
              "45",
              "46",
              "47",
              "48",
              "49",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "60",
              "61",
              "62",
              "63",
              "64",
              "65",
              "66",
              "67",
              "68",
              "69",
              "70",
              "71",
              "72",
              "73",
              "74",
              "75",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "84",
              "85",
              "86",
              "87",
              "88",
              "89",
              "90",
              "91",
              "92",
              "93",
              "94",
              "95",
              "96",
              "97",
              "98",
              "99",
              "A0",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AC",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AL",
              "AM",
              "AN",
              "AO",
              "AQ",
              "AR",
              "B1",
              "B2",
              "B3",
              "BA",
              "BB",
              "BC",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BK",
              "BL",
              "BM",
              "BN",
              "BP",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BU",
              "BV",
              "BW",
              "BX",
              "BY",
              "BZ",
              "C1",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "DG",
              "DM",
              "DS",
              "GF",
              "GN",
              "GY",
              "IC",
              "MH",
              "NI",
              "ON",
              "PT",
              "PU",
              "RN",
              "RT",
              "TC",
              "TN",
              "UC"
            ],
            "title": "Request service type",
            "type": "string"
          },
          "service_type_description": {
            "description": "",
            "readOnly": true,
            "title": "Service type description",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "CustomAppointmentFieldType": {
        "properties": {
          "archived": {
            "description": "Indicates that the object has been soft-deleted and should not be used",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "field_desc": {
            "description": "Description of the custom field",
            "title": "Field desc",
            "type": "string"
          },
          "field_name": {
            "description": "",
            "title": "Field name",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "order": {
            "description": "displayed order in patient's demographic page",
            "readOnly": true,
            "title": "Order",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "CustomInsurancePlanName": {
        "properties": {
          "archived": {
            "description": "",
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "List custom appointment fields defined by the doctor with the given ID",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "insurance_plan_name": {
            "description": "Custom name",
            "title": "Insurance plan name",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "user": {
            "description": "User who created the custom insurance plan name",
            "readOnly": true,
            "title": "User",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "CustomPatientFieldType": {
        "properties": {
          "allowed_values": {
            "description": "Allowed values if needed. Values must be separated by comma `,`",
            "title": "Allowed values",
            "type": "string"
          },
          "archived": {
            "description": "Indicates that the object has been soft-deleted, and should not be used",
            "title": "Archived",
            "type": "boolean"
          },
          "description": {
            "description": "",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "template_name": {
            "description": "Custom Patient Demographics with `template_name` set can be inserted into clinical notes via Form Builder. Only letters (a-z or A-Z), numbers (0-9) or underscore(_) are allowed for template name.",
            "title": "Template name",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "name"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "CustomVitalType": {
        "properties": {
          "allowed_values": {
            "description": "If `data_type` is `single_sel`, this is the array of values in the select's dropdown.",
            "items": {
              "description": "",
              "title": "",
              "type": "string"
            },
            "title": "Allowed values",
            "type": "array"
          },
          "archived": {
            "description": "Indicates that the object has been soft-deleted and should not be used",
            "title": "Archived",
            "type": "boolean"
          },
          "data_type": {
            "description": "One of `text`, `number`, or `single_sel`",
            "enum": [
              "text",
              "number",
              "single_sel"
            ],
            "title": "Data type",
            "type": "string"
          },
          "description": {
            "description": "",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "ID of the doctor who created the custom vital",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "fraction_delimiter": {
            "description": "If `is_fraction_field` is true, this is the character separating the numerator and denominator",
            "title": "Fraction delimiter",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "is_fraction_field": {
            "description": "",
            "title": "Is fraction field",
            "type": "boolean"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "unit": {
            "description": "",
            "title": "Unit",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "Doctor": {
        "properties": {
          "cell_phone": {
            "description": "",
            "title": "Cell phone",
            "type": "string"
          },
          "country": {
            "description": "Two-letter conutry code. Default is `US`",
            "enum": [
              "BD",
              "WF",
              "BF",
              "BG",
              "BA",
              "BB",
              "BE",
              "BL",
              "BM",
              "BN",
              "BO",
              "JP",
              "BI",
              "BJ",
              "BT",
              "JM",
              "BV",
              "JO",
              "WS",
              "BQ",
              "BR",
              "BS",
              "JE",
              "BY",
              "BZ",
              "RU",
              "RW",
              "RS",
              "TL",
              "RE",
              "TM",
              "TJ",
              "RO",
              "TK",
              "GW",
              "GU",
              "GT",
              "GS",
              "GR",
              "GQ",
              "GP",
              "BH",
              "GY",
              "GG",
              "GF",
              "GE",
              "GD",
              "GB",
              "GA",
              "GN",
              "GM",
              "GL",
              "KW",
              "GI",
              "GH",
              "OM",
              "TN",
              "BW",
              "HR",
              "HT",
              "HU",
              "HK",
              "HN",
              "HM",
              "KR",
              "AD",
              "PR",
              "PS",
              "PW",
              "PT",
              "KN",
              "PY",
              "AI",
              "PA",
              "PF",
              "PG",
              "PE",
              "PK",
              "PH",
              "PN",
              "PL",
              "PM",
              "ZM",
              "EH",
              "EE",
              "EG",
              "ZA",
              "EC",
              "AL",
              "AO",
              "KZ",
              "ET",
              "ZW",
              "KY",
              "ES",
              "ER",
              "ME",
              "MD",
              "MG",
              "MF",
              "MA",
              "MC",
              "UZ",
              "MM",
              "ML",
              "MO",
              "MN",
              "MH",
              "MK",
              "MU",
              "MT",
              "MW",
              "MV",
              "MQ",
              "MP",
              "MS",
              "MR",
              "AU",
              "UG",
              "MY",
              "MX",
              "MZ",
              "FR",
              "AW",
              "AF",
              "AX",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "NI",
              "NL",
              "NO",
              "NA",
              "VU",
              "NC",
              "NE",
              "NF",
              "NG",
              "NZ",
              "NP",
              "NR",
              "NU",
              "CK",
              "CI",
              "CH",
              "CO",
              "CN",
              "CM",
              "CL",
              "CC",
              "CA",
              "CG",
              "CF",
              "CD",
              "CZ",
              "CY",
              "CX",
              "CR",
              "KP",
              "CW",
              "CV",
              "CU",
              "SZ",
              "SY",
              "SX",
              "KG",
              "KE",
              "SS",
              "SR",
              "KI",
              "KH",
              "SV",
              "KM",
              "ST",
              "SK",
              "SJ",
              "SI",
              "SH",
              "SO",
              "SN",
              "SM",
              "SL",
              "SC",
              "SB",
              "SA",
              "SG",
              "SE",
              "SD",
              "DO",
              "DM",
              "DJ",
              "DK",
              "DE",
              "YE",
              "AT",
              "DZ",
              "US",
              "UY",
              "YT",
              "UM",
              "LB",
              "LC",
              "LA",
              "TV",
              "TW",
              "TT",
              "TR",
              "LK",
              "LI",
              "LV",
              "TO",
              "LT",
              "LU",
              "LR",
              "LS",
              "TH",
              "TF",
              "TG",
              "TD",
              "TC",
              "LY",
              "VA",
              "VC",
              "AE",
              "VE",
              "AG",
              "VG",
              "IQ",
              "VI",
              "IS",
              "IR",
              "AM",
              "IT",
              "VN",
              "AQ",
              "AS",
              "AR",
              "IM",
              "IL",
              "IO",
              "IN",
              "TZ",
              "AZ",
              "IE",
              "ID",
              "UA",
              "QA"
            ],
            "title": "Country",
            "type": "string"
          },
          "email": {
            "description": "",
            "readOnly": true,
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "description": "",
            "title": "First name",
            "type": "string"
          },
          "group_npi_number": {
            "description": "",
            "title": "Group npi number",
            "type": "string"
          },
          "home_phone": {
            "description": "",
            "title": "Home phone",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "is_account_suspended": {
            "description": "Indicates the doctor's account is suspended or not",
            "title": "Is account suspended",
            "type": "boolean"
          },
          "job_title": {
            "description": "",
            "enum": [
              "",
              "Provider/Staff (Private Practice)",
              "Provider/Staff (Hospital)",
              "Patients/Interview Candidate",
              "Educator/Student",
              "API/Developer",
              "Consultant",
              "Other"
            ],
            "title": "Job title",
            "type": "string"
          },
          "last_name": {
            "description": "",
            "title": "Last name",
            "type": "string"
          },
          "npi_number": {
            "description": "If both this field and `group_npi_number` are set, prefer this field",
            "title": "Npi number",
            "type": "string"
          },
          "office_phone": {
            "description": "",
            "title": "Office phone",
            "type": "string"
          },
          "practice_group": {
            "description": "The ID of the practice group this user belongs to. This can be used to identify users in the same practice.",
            "readOnly": true,
            "title": "Practice group",
            "type": "string"
          },
          "practice_group_name": {
            "description": "",
            "readOnly": true,
            "title": "Practice group name",
            "type": "string"
          },
          "profile_picture": {
            "description": "",
            "readOnly": true,
            "title": "Profile picture",
            "type": "string"
          },
          "specialty": {
            "description": "",
            "title": "Specialty",
            "type": "string"
          },
          "suffix": {
            "description": "",
            "title": "Suffix",
            "type": "string"
          },
          "timezone": {
            "description": "",
            "title": "Timezone",
            "type": "string"
          },
          "website": {
            "description": "",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "DoctorFeeSchedule": {
        "properties": {
          "allowed_amount": {
            "description": "Typical allowed amount for payer. Not used if blank.",
            "title": "Allowed amount",
            "type": "number"
          },
          "base_price": {
            "description": "",
            "title": "Base price",
            "type": "number"
          },
          "billing_description": {
            "description": "",
            "title": "Billing description",
            "type": "string"
          },
          "cash_price": {
            "description": "",
            "title": "Cash price",
            "type": "number"
          },
          "code": {
            "description": "",
            "title": "Code",
            "type": "string"
          },
          "code_type": {
            "description": "",
            "enum": [
              "CPT",
              "HCPCS",
              "Custom",
              "ICD9",
              "ICD10",
              "Revenue"
            ],
            "title": "Code type",
            "type": "string"
          },
          "cpt_hcpcs_modifier1": {
            "description": "",
            "title": "Cpt hcpcs modifier1",
            "type": "string"
          },
          "cpt_hcpcs_modifier2": {
            "description": "",
            "enum": [
              "",
              "17",
              "1D",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "29",
              "32",
              "33",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "62",
              "63",
              "66",
              "73",
              "74",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "90",
              "91",
              "92",
              "93",
              "95",
              "96",
              "97",
              "99",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AM",
              "AO",
              "AP",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AV",
              "AW",
              "AX",
              "AY",
              "AZ",
              "BA",
              "BL",
              "BO",
              "BP",
              "BR",
              "BU",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "CR",
              "CS",
              "CT",
              "DA",
              "E1",
              "E2",
              "E3",
              "E4",
              "EA",
              "EB",
              "EC",
              "ED",
              "EE",
              "EJ",
              "EM",
              "EP",
              "ER",
              "ET",
              "EX",
              "EY",
              "F1",
              "F2",
              "F3",
              "F4",
              "F5",
              "F6",
              "F7",
              "F8",
              "F9",
              "FA",
              "FB",
              "FC",
              "FS",
              "FP",
              "FQ",
              "FR",
              "FX",
              "FY",
              "G0",
              "G1",
              "G2",
              "G3",
              "G4",
              "G5",
              "G6",
              "G7",
              "G8",
              "G9",
              "GA",
              "GB",
              "GC",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GJ",
              "GK",
              "GL",
              "GM",
              "GN",
              "GO",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GV",
              "GW",
              "GX",
              "GY",
              "GZ",
              "H9",
              "HA",
              "HB",
              "HC",
              "HD",
              "HE",
              "HF",
              "HG",
              "HH",
              "HI",
              "HJ",
              "HK",
              "HL",
              "HM",
              "HN",
              "HO",
              "HP",
              "HQ",
              "HR",
              "HS",
              "HT",
              "HU",
              "HV",
              "HW",
              "HX",
              "HY",
              "HZ",
              "J1",
              "J2",
              "J3",
              "J4",
              "JA",
              "JB",
              "JC",
              "JD",
              "JE",
              "JF",
              "JG",
              "JW",
              "JZ",
              "K0",
              "K1",
              "K2",
              "K3",
              "K4",
              "KA",
              "KB",
              "KC",
              "KD",
              "KE",
              "KF",
              "KG",
              "KH",
              "KI",
              "KJ",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KP",
              "KQ",
              "KR",
              "KS",
              "KT",
              "KU",
              "KV",
              "KW",
              "KX",
              "KY",
              "KZ",
              "L1",
              "LC",
              "LD",
              "LL",
              "LM",
              "LR",
              "LS",
              "LT",
              "LU",
              "M2",
              "ME",
              "MI",
              "MR",
              "MS",
              "N1",
              "N2",
              "N3",
              "NB",
              "NH",
              "NM",
              "NR",
              "NU",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "PA",
              "PB",
              "PC",
              "PD",
              "PE",
              "PI",
              "PL",
              "PM",
              "PN",
              "PO",
              "PS",
              "PT",
              "Q0",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q5",
              "Q6",
              "Q7",
              "Q8",
              "Q9",
              "QA",
              "QB",
              "QC",
              "QD",
              "QE",
              "QF",
              "QG",
              "QH",
              "QJ",
              "QK",
              "QL",
              "QM",
              "QN",
              "QP",
              "QQ",
              "QR",
              "QS",
              "QT",
              "QU",
              "QV",
              "QW",
              "QX",
              "QY",
              "QZ",
              "RA",
              "RB",
              "RC",
              "RD",
              "RE",
              "RI",
              "RP",
              "RR",
              "RT",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SF",
              "SG",
              "SH",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "SY",
              "SZ",
              "T1",
              "T2",
              "T3",
              "T4",
              "T5",
              "T6",
              "T7",
              "T8",
              "T9",
              "TA",
              "TB",
              "TC",
              "TD",
              "TE",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TP",
              "TQ",
              "TR",
              "TS",
              "TT",
              "TU",
              "TV",
              "TW",
              "TX",
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "UA",
              "UB",
              "UC",
              "UD",
              "UE",
              "UF",
              "UG",
              "UH",
              "UJ",
              "UK",
              "UN",
              "UP",
              "UQ",
              "UR",
              "US",
              "V1",
              "V2",
              "V3",
              "V4",
              "V5",
              "V6",
              "V7",
              "V8",
              "V9",
              "VP",
              "VR",
              "W1",
              "W5",
              "W6",
              "W7",
              "W8",
              "W9",
              "WC",
              "WH",
              "WP",
              "X1",
              "X2",
              "X3",
              "X4",
              "X5",
              "XE",
              "XP",
              "XS",
              "XU",
              "VM",
              "ZA",
              "ZB",
              "ZL",
              "ZS",
              "1P",
              "2P",
              "3P",
              "8P"
            ],
            "title": "CPT/HCPCS Modifier #2",
            "type": "string"
          },
          "cpt_hcpcs_modifier3": {
            "description": "",
            "enum": [
              "",
              "17",
              "1D",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "29",
              "32",
              "33",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "62",
              "63",
              "66",
              "73",
              "74",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "90",
              "91",
              "92",
              "93",
              "95",
              "96",
              "97",
              "99",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AM",
              "AO",
              "AP",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AV",
              "AW",
              "AX",
              "AY",
              "AZ",
              "BA",
              "BL",
              "BO",
              "BP",
              "BR",
              "BU",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "CR",
              "CS",
              "CT",
              "DA",
              "E1",
              "E2",
              "E3",
              "E4",
              "EA",
              "EB",
              "EC",
              "ED",
              "EE",
              "EJ",
              "EM",
              "EP",
              "ER",
              "ET",
              "EX",
              "EY",
              "F1",
              "F2",
              "F3",
              "F4",
              "F5",
              "F6",
              "F7",
              "F8",
              "F9",
              "FA",
              "FB",
              "FC",
              "FS",
              "FP",
              "FQ",
              "FR",
              "FX",
              "FY",
              "G0",
              "G1",
              "G2",
              "G3",
              "G4",
              "G5",
              "G6",
              "G7",
              "G8",
              "G9",
              "GA",
              "GB",
              "GC",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GJ",
              "GK",
              "GL",
              "GM",
              "GN",
              "GO",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GV",
              "GW",
              "GX",
              "GY",
              "GZ",
              "H9",
              "HA",
              "HB",
              "HC",
              "HD",
              "HE",
              "HF",
              "HG",
              "HH",
              "HI",
              "HJ",
              "HK",
              "HL",
              "HM",
              "HN",
              "HO",
              "HP",
              "HQ",
              "HR",
              "HS",
              "HT",
              "HU",
              "HV",
              "HW",
              "HX",
              "HY",
              "HZ",
              "J1",
              "J2",
              "J3",
              "J4",
              "JA",
              "JB",
              "JC",
              "JD",
              "JE",
              "JF",
              "JG",
              "JW",
              "JZ",
              "K0",
              "K1",
              "K2",
              "K3",
              "K4",
              "KA",
              "KB",
              "KC",
              "KD",
              "KE",
              "KF",
              "KG",
              "KH",
              "KI",
              "KJ",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KP",
              "KQ",
              "KR",
              "KS",
              "KT",
              "KU",
              "KV",
              "KW",
              "KX",
              "KY",
              "KZ",
              "L1",
              "LC",
              "LD",
              "LL",
              "LM",
              "LR",
              "LS",
              "LT",
              "LU",
              "M2",
              "ME",
              "MI",
              "MR",
              "MS",
              "N1",
              "N2",
              "N3",
              "NB",
              "NH",
              "NM",
              "NR",
              "NU",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "PA",
              "PB",
              "PC",
              "PD",
              "PE",
              "PI",
              "PL",
              "PM",
              "PN",
              "PO",
              "PS",
              "PT",
              "Q0",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q5",
              "Q6",
              "Q7",
              "Q8",
              "Q9",
              "QA",
              "QB",
              "QC",
              "QD",
              "QE",
              "QF",
              "QG",
              "QH",
              "QJ",
              "QK",
              "QL",
              "QM",
              "QN",
              "QP",
              "QQ",
              "QR",
              "QS",
              "QT",
              "QU",
              "QV",
              "QW",
              "QX",
              "QY",
              "QZ",
              "RA",
              "RB",
              "RC",
              "RD",
              "RE",
              "RI",
              "RP",
              "RR",
              "RT",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SF",
              "SG",
              "SH",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "SY",
              "SZ",
              "T1",
              "T2",
              "T3",
              "T4",
              "T5",
              "T6",
              "T7",
              "T8",
              "T9",
              "TA",
              "TB",
              "TC",
              "TD",
              "TE",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TP",
              "TQ",
              "TR",
              "TS",
              "TT",
              "TU",
              "TV",
              "TW",
              "TX",
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "UA",
              "UB",
              "UC",
              "UD",
              "UE",
              "UF",
              "UG",
              "UH",
              "UJ",
              "UK",
              "UN",
              "UP",
              "UQ",
              "UR",
              "US",
              "V1",
              "V2",
              "V3",
              "V4",
              "V5",
              "V6",
              "V7",
              "V8",
              "V9",
              "VP",
              "VR",
              "W1",
              "W5",
              "W6",
              "W7",
              "W8",
              "W9",
              "WC",
              "WH",
              "WP",
              "X1",
              "X2",
              "X3",
              "X4",
              "X5",
              "XE",
              "XP",
              "XS",
              "XU",
              "VM",
              "ZA",
              "ZB",
              "ZL",
              "ZS",
              "1P",
              "2P",
              "3P",
              "8P"
            ],
            "title": "CPT/HCPCS Modifier #3",
            "type": "string"
          },
          "cpt_hcpcs_modifier4": {
            "description": "",
            "enum": [
              "",
              "17",
              "1D",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "29",
              "32",
              "33",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "62",
              "63",
              "66",
              "73",
              "74",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "90",
              "91",
              "92",
              "93",
              "95",
              "96",
              "97",
              "99",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AM",
              "AO",
              "AP",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AV",
              "AW",
              "AX",
              "AY",
              "AZ",
              "BA",
              "BL",
              "BO",
              "BP",
              "BR",
              "BU",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "CR",
              "CS",
              "CT",
              "DA",
              "E1",
              "E2",
              "E3",
              "E4",
              "EA",
              "EB",
              "EC",
              "ED",
              "EE",
              "EJ",
              "EM",
              "EP",
              "ER",
              "ET",
              "EX",
              "EY",
              "F1",
              "F2",
              "F3",
              "F4",
              "F5",
              "F6",
              "F7",
              "F8",
              "F9",
              "FA",
              "FB",
              "FC",
              "FS",
              "FP",
              "FQ",
              "FR",
              "FX",
              "FY",
              "G0",
              "G1",
              "G2",
              "G3",
              "G4",
              "G5",
              "G6",
              "G7",
              "G8",
              "G9",
              "GA",
              "GB",
              "GC",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GJ",
              "GK",
              "GL",
              "GM",
              "GN",
              "GO",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GV",
              "GW",
              "GX",
              "GY",
              "GZ",
              "H9",
              "HA",
              "HB",
              "HC",
              "HD",
              "HE",
              "HF",
              "HG",
              "HH",
              "HI",
              "HJ",
              "HK",
              "HL",
              "HM",
              "HN",
              "HO",
              "HP",
              "HQ",
              "HR",
              "HS",
              "HT",
              "HU",
              "HV",
              "HW",
              "HX",
              "HY",
              "HZ",
              "J1",
              "J2",
              "J3",
              "J4",
              "JA",
              "JB",
              "JC",
              "JD",
              "JE",
              "JF",
              "JG",
              "JW",
              "JZ",
              "K0",
              "K1",
              "K2",
              "K3",
              "K4",
              "KA",
              "KB",
              "KC",
              "KD",
              "KE",
              "KF",
              "KG",
              "KH",
              "KI",
              "KJ",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KP",
              "KQ",
              "KR",
              "KS",
              "KT",
              "KU",
              "KV",
              "KW",
              "KX",
              "KY",
              "KZ",
              "L1",
              "LC",
              "LD",
              "LL",
              "LM",
              "LR",
              "LS",
              "LT",
              "LU",
              "M2",
              "ME",
              "MI",
              "MR",
              "MS",
              "N1",
              "N2",
              "N3",
              "NB",
              "NH",
              "NM",
              "NR",
              "NU",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "PA",
              "PB",
              "PC",
              "PD",
              "PE",
              "PI",
              "PL",
              "PM",
              "PN",
              "PO",
              "PS",
              "PT",
              "Q0",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q5",
              "Q6",
              "Q7",
              "Q8",
              "Q9",
              "QA",
              "QB",
              "QC",
              "QD",
              "QE",
              "QF",
              "QG",
              "QH",
              "QJ",
              "QK",
              "QL",
              "QM",
              "QN",
              "QP",
              "QQ",
              "QR",
              "QS",
              "QT",
              "QU",
              "QV",
              "QW",
              "QX",
              "QY",
              "QZ",
              "RA",
              "RB",
              "RC",
              "RD",
              "RE",
              "RI",
              "RP",
              "RR",
              "RT",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SF",
              "SG",
              "SH",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "SY",
              "SZ",
              "T1",
              "T2",
              "T3",
              "T4",
              "T5",
              "T6",
              "T7",
              "T8",
              "T9",
              "TA",
              "TB",
              "TC",
              "TD",
              "TE",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TP",
              "TQ",
              "TR",
              "TS",
              "TT",
              "TU",
              "TV",
              "TW",
              "TX",
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "UA",
              "UB",
              "UC",
              "UD",
              "UE",
              "UF",
              "UG",
              "UH",
              "UJ",
              "UK",
              "UN",
              "UP",
              "UQ",
              "UR",
              "US",
              "V1",
              "V2",
              "V3",
              "V4",
              "V5",
              "V6",
              "V7",
              "V8",
              "V9",
              "VP",
              "VR",
              "W1",
              "W5",
              "W6",
              "W7",
              "W8",
              "W9",
              "WC",
              "WH",
              "WP",
              "X1",
              "X2",
              "X3",
              "X4",
              "X5",
              "XE",
              "XP",
              "XS",
              "XU",
              "VM",
              "ZA",
              "ZB",
              "ZL",
              "ZS",
              "1P",
              "2P",
              "3P",
              "8P"
            ],
            "title": "CPT/HCPCS Modifier #4",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "description": {
            "description": "",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "insured_out_of_network_price": {
            "description": "",
            "title": "Insured out of network price",
            "type": "number"
          },
          "insured_price": {
            "description": "",
            "title": "Insured price",
            "type": "number"
          },
          "ndc_code": {
            "description": "",
            "title": "NDC Code",
            "type": "string"
          },
          "ndc_quantity": {
            "description": "",
            "title": "NDC Quantity",
            "type": "number"
          },
          "ndc_units": {
            "description": "",
            "enum": [
              "F2",
              "GR",
              "ME",
              "ML",
              "UN"
            ],
            "title": "NDC Units",
            "type": "string"
          },
          "office": {
            "description": "",
            "title": "Office",
            "type": "integer"
          },
          "payer_id": {
            "description": "Fee Schedule pricing specific to this payer, if null, then applies as default to all payers without a more specific fee schedule.",
            "title": "Payer id",
            "type": "string"
          },
          "picklist_category": {
            "description": "Optional: Category to organize the code into.",
            "title": "Picklist category",
            "type": "string"
          },
          "plan_name": {
            "description": "Name of insurance plan.",
            "title": "Plan name",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "FeeSchedule": {
        "properties": {
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "assignee_type": {
            "description": "Type of assignee",
            "enum": [
              "Individual",
              "Speciality"
            ],
            "title": "Assignee Type",
            "type": "string"
          },
          "assignees": {
            "description": "Schedule specific to these assignees, if null, then applies as default to all assignees without a more specific fee schedule.",
            "title": "Assignees",
            "type": "array"
          },
          "specialities": {
            "description": "Schedule specific to these specialities, if null, then applies as default to all specialities without a more specific fee schedule.",
            "title": "Specialities",
            "type": "array"
          },
          "payer_id": {
            "description": "Fee Schedule pricing specific to this payer, if null, then applies as default to all payers without a more specific fee schedule.",
            "title": "Payer id",
            "type": "string"
          },
          "plan_name": {
            "description": "Name of insurance plan.",
            "title": "Plan name",
            "type": "string"
          },
          "effective_date": {
            "description": "Start date that this schedule is valid. If null, then since the beginning of time",
            "title": "Effective date",
            "type": "string"
          },
          "ineffective_date": {
            "description": "End date that this schedule is valid. If null, then it is applied until an end date is set",
            "title": "Ineffective date",
            "type": "string"
          },
          "items": {
            "description": "Items that belong to this fee schedule (this field is only available for single requests)",
            "title": "Items",
            "type": "array"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "FeeScheduleItem": {
        "properties": {
          "allowed_amount": {
            "description": "Typical allowed amount for payer. Not used if blank.",
            "title": "Allowed amount",
            "type": "number"
          },
          "base_price": {
            "description": "",
            "title": "Base price",
            "type": "number"
          },
          "billing_description": {
            "description": "",
            "title": "Billing description",
            "type": "string"
          },
          "cash_price": {
            "description": "",
            "title": "Cash price",
            "type": "number"
          },
          "code": {
            "description": "",
            "title": "Code",
            "type": "string"
          },
          "code_type": {
            "description": "",
            "enum": [
              "CPT",
              "HCPCS",
              "Custom",
              "ICD9",
              "ICD10",
              "Revenue"
            ],
            "title": "Code type",
            "type": "string"
          },
          "cpt_hcpcs_modifier1": {
            "description": "",
            "title": "Cpt hcpcs modifier1",
            "type": "string"
          },
          "cpt_hcpcs_modifier2": {
            "description": "",
            "enum": [
              "",
              "17",
              "1D",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "29",
              "32",
              "33",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "62",
              "63",
              "66",
              "73",
              "74",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "90",
              "91",
              "92",
              "93",
              "95",
              "96",
              "97",
              "99",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AM",
              "AO",
              "AP",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AV",
              "AW",
              "AX",
              "AY",
              "AZ",
              "BA",
              "BL",
              "BO",
              "BP",
              "BR",
              "BU",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "CR",
              "CS",
              "CT",
              "DA",
              "E1",
              "E2",
              "E3",
              "E4",
              "EA",
              "EB",
              "EC",
              "ED",
              "EE",
              "EJ",
              "EM",
              "EP",
              "ER",
              "ET",
              "EX",
              "EY",
              "F1",
              "F2",
              "F3",
              "F4",
              "F5",
              "F6",
              "F7",
              "F8",
              "F9",
              "FA",
              "FB",
              "FC",
              "FS",
              "FP",
              "FQ",
              "FR",
              "FX",
              "FY",
              "G0",
              "G1",
              "G2",
              "G3",
              "G4",
              "G5",
              "G6",
              "G7",
              "G8",
              "G9",
              "GA",
              "GB",
              "GC",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GJ",
              "GK",
              "GL",
              "GM",
              "GN",
              "GO",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GV",
              "GW",
              "GX",
              "GY",
              "GZ",
              "H9",
              "HA",
              "HB",
              "HC",
              "HD",
              "HE",
              "HF",
              "HG",
              "HH",
              "HI",
              "HJ",
              "HK",
              "HL",
              "HM",
              "HN",
              "HO",
              "HP",
              "HQ",
              "HR",
              "HS",
              "HT",
              "HU",
              "HV",
              "HW",
              "HX",
              "HY",
              "HZ",
              "J1",
              "J2",
              "J3",
              "J4",
              "JA",
              "JB",
              "JC",
              "JD",
              "JE",
              "JF",
              "JG",
              "JW",
              "JZ",
              "K0",
              "K1",
              "K2",
              "K3",
              "K4",
              "KA",
              "KB",
              "KC",
              "KD",
              "KE",
              "KF",
              "KG",
              "KH",
              "KI",
              "KJ",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KP",
              "KQ",
              "KR",
              "KS",
              "KT",
              "KU",
              "KV",
              "KW",
              "KX",
              "KY",
              "KZ",
              "L1",
              "LC",
              "LD",
              "LL",
              "LM",
              "LR",
              "LS",
              "LT",
              "LU",
              "M2",
              "ME",
              "MI",
              "MR",
              "MS",
              "N1",
              "N2",
              "N3",
              "NB",
              "NH",
              "NM",
              "NR",
              "NU",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "PA",
              "PB",
              "PC",
              "PD",
              "PE",
              "PI",
              "PL",
              "PM",
              "PN",
              "PO",
              "PS",
              "PT",
              "Q0",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q5",
              "Q6",
              "Q7",
              "Q8",
              "Q9",
              "QA",
              "QB",
              "QC",
              "QD",
              "QE",
              "QF",
              "QG",
              "QH",
              "QJ",
              "QK",
              "QL",
              "QM",
              "QN",
              "QP",
              "QQ",
              "QR",
              "QS",
              "QT",
              "QU",
              "QV",
              "QW",
              "QX",
              "QY",
              "QZ",
              "RA",
              "RB",
              "RC",
              "RD",
              "RE",
              "RI",
              "RP",
              "RR",
              "RT",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SF",
              "SG",
              "SH",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "SY",
              "SZ",
              "T1",
              "T2",
              "T3",
              "T4",
              "T5",
              "T6",
              "T7",
              "T8",
              "T9",
              "TA",
              "TB",
              "TC",
              "TD",
              "TE",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TP",
              "TQ",
              "TR",
              "TS",
              "TT",
              "TU",
              "TV",
              "TW",
              "TX",
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "UA",
              "UB",
              "UC",
              "UD",
              "UE",
              "UF",
              "UG",
              "UH",
              "UJ",
              "UK",
              "UN",
              "UP",
              "UQ",
              "UR",
              "US",
              "V1",
              "V2",
              "V3",
              "V4",
              "V5",
              "V6",
              "V7",
              "V8",
              "V9",
              "VP",
              "VR",
              "W1",
              "W5",
              "W6",
              "W7",
              "W8",
              "W9",
              "WC",
              "WH",
              "WP",
              "X1",
              "X2",
              "X3",
              "X4",
              "X5",
              "XE",
              "XP",
              "XS",
              "XU",
              "VM",
              "ZA",
              "ZB",
              "ZL",
              "ZS",
              "1P",
              "2P",
              "3P",
              "8P"
            ],
            "title": "CPT/HCPCS Modifier #2",
            "type": "string"
          },
          "cpt_hcpcs_modifier3": {
            "description": "",
            "enum": [
              "",
              "17",
              "1D",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "29",
              "32",
              "33",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "62",
              "63",
              "66",
              "73",
              "74",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "90",
              "91",
              "92",
              "93",
              "95",
              "96",
              "97",
              "99",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AM",
              "AO",
              "AP",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AV",
              "AW",
              "AX",
              "AY",
              "AZ",
              "BA",
              "BL",
              "BO",
              "BP",
              "BR",
              "BU",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "CR",
              "CS",
              "CT",
              "DA",
              "E1",
              "E2",
              "E3",
              "E4",
              "EA",
              "EB",
              "EC",
              "ED",
              "EE",
              "EJ",
              "EM",
              "EP",
              "ER",
              "ET",
              "EX",
              "EY",
              "F1",
              "F2",
              "F3",
              "F4",
              "F5",
              "F6",
              "F7",
              "F8",
              "F9",
              "FA",
              "FB",
              "FC",
              "FS",
              "FP",
              "FQ",
              "FR",
              "FX",
              "FY",
              "G0",
              "G1",
              "G2",
              "G3",
              "G4",
              "G5",
              "G6",
              "G7",
              "G8",
              "G9",
              "GA",
              "GB",
              "GC",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GJ",
              "GK",
              "GL",
              "GM",
              "GN",
              "GO",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GV",
              "GW",
              "GX",
              "GY",
              "GZ",
              "H9",
              "HA",
              "HB",
              "HC",
              "HD",
              "HE",
              "HF",
              "HG",
              "HH",
              "HI",
              "HJ",
              "HK",
              "HL",
              "HM",
              "HN",
              "HO",
              "HP",
              "HQ",
              "HR",
              "HS",
              "HT",
              "HU",
              "HV",
              "HW",
              "HX",
              "HY",
              "HZ",
              "J1",
              "J2",
              "J3",
              "J4",
              "JA",
              "JB",
              "JC",
              "JD",
              "JE",
              "JF",
              "JG",
              "JW",
              "JZ",
              "K0",
              "K1",
              "K2",
              "K3",
              "K4",
              "KA",
              "KB",
              "KC",
              "KD",
              "KE",
              "KF",
              "KG",
              "KH",
              "KI",
              "KJ",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KP",
              "KQ",
              "KR",
              "KS",
              "KT",
              "KU",
              "KV",
              "KW",
              "KX",
              "KY",
              "KZ",
              "L1",
              "LC",
              "LD",
              "LL",
              "LM",
              "LR",
              "LS",
              "LT",
              "LU",
              "M2",
              "ME",
              "MI",
              "MR",
              "MS",
              "N1",
              "N2",
              "N3",
              "NB",
              "NH",
              "NM",
              "NR",
              "NU",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "PA",
              "PB",
              "PC",
              "PD",
              "PE",
              "PI",
              "PL",
              "PM",
              "PN",
              "PO",
              "PS",
              "PT",
              "Q0",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q5",
              "Q6",
              "Q7",
              "Q8",
              "Q9",
              "QA",
              "QB",
              "QC",
              "QD",
              "QE",
              "QF",
              "QG",
              "QH",
              "QJ",
              "QK",
              "QL",
              "QM",
              "QN",
              "QP",
              "QQ",
              "QR",
              "QS",
              "QT",
              "QU",
              "QV",
              "QW",
              "QX",
              "QY",
              "QZ",
              "RA",
              "RB",
              "RC",
              "RD",
              "RE",
              "RI",
              "RP",
              "RR",
              "RT",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SF",
              "SG",
              "SH",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "SY",
              "SZ",
              "T1",
              "T2",
              "T3",
              "T4",
              "T5",
              "T6",
              "T7",
              "T8",
              "T9",
              "TA",
              "TB",
              "TC",
              "TD",
              "TE",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TP",
              "TQ",
              "TR",
              "TS",
              "TT",
              "TU",
              "TV",
              "TW",
              "TX",
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "UA",
              "UB",
              "UC",
              "UD",
              "UE",
              "UF",
              "UG",
              "UH",
              "UJ",
              "UK",
              "UN",
              "UP",
              "UQ",
              "UR",
              "US",
              "V1",
              "V2",
              "V3",
              "V4",
              "V5",
              "V6",
              "V7",
              "V8",
              "V9",
              "VP",
              "VR",
              "W1",
              "W5",
              "W6",
              "W7",
              "W8",
              "W9",
              "WC",
              "WH",
              "WP",
              "X1",
              "X2",
              "X3",
              "X4",
              "X5",
              "XE",
              "XP",
              "XS",
              "XU",
              "VM",
              "ZA",
              "ZB",
              "ZL",
              "ZS",
              "1P",
              "2P",
              "3P",
              "8P"
            ],
            "title": "CPT/HCPCS Modifier #3",
            "type": "string"
          },
          "cpt_hcpcs_modifier4": {
            "description": "",
            "enum": [
              "",
              "17",
              "1D",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "29",
              "32",
              "33",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "62",
              "63",
              "66",
              "73",
              "74",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "90",
              "91",
              "92",
              "93",
              "95",
              "96",
              "97",
              "99",
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "AA",
              "AB",
              "AD",
              "AE",
              "AF",
              "AG",
              "AH",
              "AI",
              "AJ",
              "AK",
              "AM",
              "AO",
              "AP",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AV",
              "AW",
              "AX",
              "AY",
              "AZ",
              "BA",
              "BL",
              "BO",
              "BP",
              "BR",
              "BU",
              "CA",
              "CB",
              "CC",
              "CD",
              "CE",
              "CF",
              "CG",
              "CH",
              "CI",
              "CJ",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CP",
              "CQ",
              "CR",
              "CS",
              "CT",
              "DA",
              "E1",
              "E2",
              "E3",
              "E4",
              "EA",
              "EB",
              "EC",
              "ED",
              "EE",
              "EJ",
              "EM",
              "EP",
              "ER",
              "ET",
              "EX",
              "EY",
              "F1",
              "F2",
              "F3",
              "F4",
              "F5",
              "F6",
              "F7",
              "F8",
              "F9",
              "FA",
              "FB",
              "FC",
              "FS",
              "FP",
              "FQ",
              "FR",
              "FX",
              "FY",
              "G0",
              "G1",
              "G2",
              "G3",
              "G4",
              "G5",
              "G6",
              "G7",
              "G8",
              "G9",
              "GA",
              "GB",
              "GC",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GJ",
              "GK",
              "GL",
              "GM",
              "GN",
              "GO",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GV",
              "GW",
              "GX",
              "GY",
              "GZ",
              "H9",
              "HA",
              "HB",
              "HC",
              "HD",
              "HE",
              "HF",
              "HG",
              "HH",
              "HI",
              "HJ",
              "HK",
              "HL",
              "HM",
              "HN",
              "HO",
              "HP",
              "HQ",
              "HR",
              "HS",
              "HT",
              "HU",
              "HV",
              "HW",
              "HX",
              "HY",
              "HZ",
              "J1",
              "J2",
              "J3",
              "J4",
              "JA",
              "JB",
              "JC",
              "JD",
              "JE",
              "JF",
              "JG",
              "JW",
              "JZ",
              "K0",
              "K1",
              "K2",
              "K3",
              "K4",
              "KA",
              "KB",
              "KC",
              "KD",
              "KE",
              "KF",
              "KG",
              "KH",
              "KI",
              "KJ",
              "KK",
              "KL",
              "KM",
              "KN",
              "KO",
              "KP",
              "KQ",
              "KR",
              "KS",
              "KT",
              "KU",
              "KV",
              "KW",
              "KX",
              "KY",
              "KZ",
              "L1",
              "LC",
              "LD",
              "LL",
              "LM",
              "LR",
              "LS",
              "LT",
              "LU",
              "M2",
              "ME",
              "MI",
              "MR",
              "MS",
              "N1",
              "N2",
              "N3",
              "NB",
              "NH",
              "NM",
              "NR",
              "NU",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "PA",
              "PB",
              "PC",
              "PD",
              "PE",
              "PI",
              "PL",
              "PM",
              "PN",
              "PO",
              "PS",
              "PT",
              "Q0",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q5",
              "Q6",
              "Q7",
              "Q8",
              "Q9",
              "QA",
              "QB",
              "QC",
              "QD",
              "QE",
              "QF",
              "QG",
              "QH",
              "QJ",
              "QK",
              "QL",
              "QM",
              "QN",
              "QP",
              "QQ",
              "QR",
              "QS",
              "QT",
              "QU",
              "QV",
              "QW",
              "QX",
              "QY",
              "QZ",
              "RA",
              "RB",
              "RC",
              "RD",
              "RE",
              "RI",
              "RP",
              "RR",
              "RT",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SF",
              "SG",
              "SH",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "SY",
              "SZ",
              "T1",
              "T2",
              "T3",
              "T4",
              "T5",
              "T6",
              "T7",
              "T8",
              "T9",
              "TA",
              "TB",
              "TC",
              "TD",
              "TE",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TP",
              "TQ",
              "TR",
              "TS",
              "TT",
              "TU",
              "TV",
              "TW",
              "TX",
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "UA",
              "UB",
              "UC",
              "UD",
              "UE",
              "UF",
              "UG",
              "UH",
              "UJ",
              "UK",
              "UN",
              "UP",
              "UQ",
              "UR",
              "US",
              "V1",
              "V2",
              "V3",
              "V4",
              "V5",
              "V6",
              "V7",
              "V8",
              "V9",
              "VP",
              "VR",
              "W1",
              "W5",
              "W6",
              "W7",
              "W8",
              "W9",
              "WC",
              "WH",
              "WP",
              "X1",
              "X2",
              "X3",
              "X4",
              "X5",
              "XE",
              "XP",
              "XS",
              "XU",
              "VM",
              "ZA",
              "ZB",
              "ZL",
              "ZS",
              "1P",
              "2P",
              "3P",
              "8P"
            ],
            "title": "CPT/HCPCS Modifier #4",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "description": {
            "description": "",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "insured_out_of_network_price": {
            "description": "",
            "title": "Insured out of network price",
            "type": "number"
          },
          "insured_price": {
            "description": "",
            "title": "Insured price",
            "type": "number"
          },
          "ndc_code": {
            "description": "",
            "title": "NDC Code",
            "type": "string"
          },
          "ndc_quantity": {
            "description": "",
            "title": "NDC Quantity",
            "type": "number"
          },
          "ndc_units": {
            "description": "",
            "enum": [
              "F2",
              "GR",
              "ME",
              "ML",
              "UN"
            ],
            "title": "NDC Units",
            "type": "string"
          },
          "payer_id": {
            "description": "Fee Schedule pricing specific to this payer, if null, then applies as default to all payers without a more specific fee schedule.",
            "title": "Payer id",
            "type": "string"
          },
          "picklist_category": {
            "description": "Optional: Category to organize the code into.",
            "title": "Picklist category",
            "type": "string"
          },
          "plan_name": {
            "description": "Name of insurance plan.",
            "title": "Plan name",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "DoctorMessage": {
        "properties": {
          "archived": {
            "description": "If true, indicates that the message has been soft-deleted",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "attachment": {
            "description": "Files are passed using `multipart/form-data` encoding, but returned as URLs.",
            "title": "Attachment",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "doctor_first_name": {
            "description": "Doctor First Name",
            "readOnly": true,
            "title": "Doctor first name",
            "type": "string"
          },
          "doctor_last_name": {
            "description": "Doctor Last Name",
            "readOnly": true,
            "title": "Doctor last name",
            "type": "string"
          },
          "doctor_middle_name": {
            "description": "Doctor Middle Name",
            "readOnly": true,
            "title": "Doctor middle name",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "message_notes": {
            "description": "Array of notes attached to the message",
            "items": {
              "description": "Additional note",
              "properties": {
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "created_by": {
                  "description": "ID of `/api/users` who created the note",
                  "readOnly": true,
                  "title": "Created by",
                  "type": "string"
                },
                "text": {
                  "description": "Content of the note",
                  "title": "Text",
                  "type": "string"
                }
              },
              "title": "MessageNote",
              "type": "object"
            },
            "title": "Message notes",
            "type": "array"
          },
          "outgoing_fax_recipient_fax_number": {
            "description": "Outgoing fax recipient fax number",
            "readOnly": true,
            "title": "Outgoing fax recipient fax number",
            "type": "string"
          },
          "outgoing_fax_recipient_name": {
            "description": "Outgoing fax recipient name",
            "readOnly": true,
            "title": "Outgoing fax recipient name",
            "type": "string"
          },
          "owner": {
            "description": "ID of `/api/users` who owns the message, who may be the doctor themselves or one of their staff members",
            "title": "Owner",
            "type": "string"
          },
          "owner_first_name": {
            "description": "Owner First Name",
            "readOnly": true,
            "title": "Owner first name",
            "type": "string"
          },
          "owner_last_name": {
            "description": "Owner Last Name",
            "readOnly": true,
            "title": "Owner last name",
            "type": "string"
          },
          "patient": {
            "description": "ID of patient that the message concerns, if applicable",
            "title": "Patient",
            "type": "integer"
          },
          "patient_first_name": {
            "description": "Patient First Name",
            "readOnly": true,
            "title": "Patient first name",
            "type": "string"
          },
          "patient_last_name": {
            "description": "Patient Last Name",
            "readOnly": true,
            "title": "Patient last name",
            "type": "string"
          },
          "patient_middle_name": {
            "description": "Patient Middle Name",
            "readOnly": true,
            "title": "Patient middle name",
            "type": "string"
          },
          "read": {
            "description": "",
            "readOnly": true,
            "title": "Read",
            "type": "boolean"
          },
          "received_at": {
            "description": "",
            "readOnly": true,
            "title": "Received at",
            "type": "string"
          },
          "responsible_user": {
            "description": "ID of `/api/users` who has been assigned to process the message, who may be the doctor themselves or one of their staff members",
            "title": "Responsible user",
            "type": "string"
          },
          "responsible_user_first_name": {
            "description": "Responsible User First Name",
            "readOnly": true,
            "title": "Responsible user first name",
            "type": "string"
          },
          "responsible_user_last_name": {
            "description": "Responsible User Last Name",
            "readOnly": true,
            "title": "Responsible user last name",
            "type": "string"
          },
          "starred": {
            "description": "",
            "readOnly": true,
            "title": "Starred",
            "type": "boolean"
          },
          "title": {
            "description": "",
            "title": "Title",
            "type": "string"
          },
          "type": {
            "description": "\nValue | Description\n----- | -----------\n`\"GP\"` | Generated PDF\n`\"GC\"` | Generated CSV\n`\"GZ\"` | Generated ZIP\n`\"IF\"` | Incoming Fax\n`\"OF\"` | Outgoing Fax\n`\"IL\"` | Incoming Labs\n`\"IR\"` | Inbound Referrals\n`\"OR\"` | Outbound Referrals\n`\"IE\"` | Incoming eRx\n`\"OA\"` | Online Appointments\n`\"PO\"` | Patient Onboarding\n`\"PI\"` | Patient Incoming Message\n`\"PM\"` | Patient Outgoing Message\n`\"OO\"` | Demo Meeting Message\n`\"OD\"` | Outbound Direct Message\n`\"ID\"` | Inbound Direct Message\n",
            "enum": [
              "GP",
              "GC",
              "GT",
              "GZ",
              "IF",
              "OF",
              "IL",
              "IR",
              "OR",
              "IE",
              "CE",
              "CH",
              "OA",
              "PO",
              "PI",
              "PM",
              "OO",
              "OD",
              "ID",
              "DL",
              "CN"
            ],
            "title": "Type",
            "type": "string"
          },
          "type_description": {
            "description": "Type Description",
            "readOnly": true,
            "title": "Type description",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "workflow_step": {
            "description": "Used by doctors and their staff to keep track of what step of processing the message is in",
            "readOnly": true,
            "title": "Workflow step",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "title"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "EOBObject": {
        "properties": {
          "check_date": {
            "description": "Date of check. If missing, default to the date when the request is made",
            "title": "Check date",
            "type": "string"
          },
          "deposit_date": {
            "description": "Date when EOB gets deposited.",
            "title": "Deposit date",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "insurance_payer_id": {
            "description": "",
            "title": "Insurance payer id",
            "type": "string"
          },
          "insurance_payer_name": {
            "description": "",
            "title": "Insurance payer name",
            "type": "string"
          },
          "insurance_payer_trace_number": {
            "description": "",
            "title": "Insurance payer trace number",
            "type": "string"
          },
          "payment_method": {
            "description": "`\"\"` - Unknown, `\"ACH\"` - Automated Clearing House (ACH), `\"BOPCCP\"` - Cash Concentration/Disbursement plus Addenda (CCD+) (ACH), `\"BOPCTX\"` - Corporate Trade Exchange (CTX) (ACH), `\"CHK\"` - Check, `\"FWT\"` - Federal Reserve Funds/Wire Transfer - Nonrepetitive, `\"VPAY\"` - vPayment, `\"NON\"` - Non-Payment Data",
            "enum": [
              "",
              "ACH",
              "BOPCCP",
              "BOPCTX",
              "CHK",
              "FWT",
              "VPAY",
              "NON"
            ],
            "title": "Payment method",
            "type": "string"
          },
          "posted_date": {
            "description": "",
            "readOnly": true,
            "title": "Posted date",
            "type": "string"
          },
          "scanned_eob": {
            "description": "",
            "title": "Scanned eob",
            "type": "string"
          },
          "total_paid": {
            "description": "Total amount paid. If missing, default to 0.00",
            "title": "Total paid",
            "type": "number"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "insurance_payer_id",
          "insurance_payer_name",
          "insurance_payer_trace_number"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "ImplantableDevice": {
        "properties": {
          "archived": {
            "description": "",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "brand_name": {
            "description": "",
            "readOnly": true,
            "title": "Brand name",
            "type": "string"
          },
          "company_name": {
            "description": "",
            "readOnly": true,
            "title": "Company name",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "expiration_date": {
            "description": "",
            "readOnly": true,
            "title": "Expiration date",
            "type": "string"
          },
          "gmdn_pt_name": {
            "description": "\"GMDN PT Name\" or \"SNOMED CT Description\" mapped to the attribute in  the \"GMDN PT Name\"",
            "readOnly": true,
            "title": "GMDN PT Name",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "manufacturing_date": {
            "description": "",
            "readOnly": true,
            "title": "Manufacturing date",
            "type": "string"
          },
          "patient": {
            "description": "",
            "readOnly": true,
            "title": "Patient",
            "type": "string"
          },
          "procedure": {
            "description": "ID of `/api/procedures` object",
            "readOnly": true,
            "title": "Procedure",
            "type": "string"
          },
          "serial_number": {
            "description": "",
            "readOnly": true,
            "title": "Serial number",
            "type": "string"
          },
          "status": {
            "description": "One of `'active'` or `'inactive'`",
            "enum": [
              "active",
              "inactive"
            ],
            "readOnly": true,
            "title": "Status",
            "type": "string"
          },
          "udi": {
            "description": "",
            "readOnly": true,
            "title": "Unique Device Identifier",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "version_or_model": {
            "description": "",
            "readOnly": true,
            "title": "Version or model",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "Insurance": {
        "properties": {
          "payer_id": {
            "description": "",
            "title": "payer_id",
            "type": "string"
          },
          "payer_name": {
            "description": "",
            "title": "payer_name",
            "type": "string"
          },
          "state": {
            "description": "",
            "title": "state",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "InventoryCategory": {
        "properties": {
          "archived": {
            "description": "If the category is archived or not",
            "title": "Archived",
            "type": "boolean"
          },
          "category_type": {
            "description": "Can be one of `\"vaccine\"`, `\"product\"` or `\"service\"`",
            "enum": [
              "vaccine",
              "product",
              "service"
            ],
            "title": "Category type",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the inventory category",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "InventoryVaccine": {
        "properties": {
          "category": {
            "description": "ID of `/api/inventory_categories`",
            "title": "Category",
            "type": "integer"
          },
          "cost": {
            "description": "Base cost for consumables.",
            "title": "Cost",
            "type": "number"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "current_quantity": {
            "description": "This field can onlyu be changed by creating new patient vaccine record. Current quantity of an inventory vaccine is calculated by subtract number of records pointing to this inventory from the original quantity value.",
            "readOnly": true,
            "title": "Current quantity",
            "type": "integer"
          },
          "cvx_code": {
            "description": "",
            "title": "Cvx code",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "expiry": {
            "description": "When will the vaccine expire",
            "title": "Expiry",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "lot_number": {
            "description": "",
            "title": "Lot number",
            "type": "string"
          },
          "manufacturer": {
            "description": "",
            "title": "Manufacturer",
            "type": "string"
          },
          "manufacturer_code": {
            "description": "",
            "title": "Manufacturer code",
            "type": "string"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "note": {
            "description": "",
            "title": "Note",
            "type": "string"
          },
          "original_quantity": {
            "description": "Default to zero",
            "title": "Original quantity",
            "type": "integer"
          },
          "price": {
            "description": "",
            "title": "Price",
            "type": "number"
          },
          "price_with_tax": {
            "description": "",
            "title": "Price with tax",
            "type": "number"
          },
          "sales_tax_applicable": {
            "description": "Is sales tax applicable to this service/product? Default to false",
            "title": "Sales tax applicable",
            "type": "boolean"
          },
          "status": {
            "description": "Status of vaccine, could be one of `active`, `inactive`, `archived`, `voided`, default to `active`",
            "enum": [
              "active",
              "inactive",
              "archived",
              "voided"
            ],
            "title": "Status",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "vaccination_type": {
            "description": "Default to `\"standard vaccine\"`",
            "title": "Vaccination type",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "name",
          "manufacturer_code"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "LabOrder": {
        "properties": {
          "accession_number": {
            "description": "For external use only",
            "title": "Accession number",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "documents": {
            "description": "Associated `/lab_documents` objects",
            "items": {
              "description": "ID of an associated lab document",
              "title": "",
              "type": "string"
            },
            "readOnly": true,
            "title": "Documents",
            "type": "array"
          },
          "icd10_codes": {
            "description": "ICD-10 codes of the conditions which the tests concerns.",
            "items": {
              "description": "",
              "properties": {
                "code": {
                  "description": "The numeric ICD-10 code",
                  "title": "Code",
                  "type": "string"
                },
                "description": {
                  "description": "Short description  of the ICD-10 code",
                  "readOnly": true,
                  "title": "Description",
                  "type": "string"
                }
              },
              "title": "ICD10Code",
              "type": "object"
            },
            "title": "Icd10 codes",
            "type": "array"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "notes": {
            "description": "",
            "title": "Notes",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "priority": {
            "description": "`\"Normal\"` or `\"STAT\"`. Default `\"Normal\"`",
            "enum": [
              "N",
              "S"
            ],
            "title": "Priority",
            "type": "string"
          },
          "requisition_id": {
            "description": "The ID printed on the requisition PDF. Generally the same as id.",
            "readOnly": true,
            "title": "Requisition id",
            "type": "string"
          },
          "status": {
            "description": "Equivalent to HL7's ORC.5. Defaults to `\"N\"`.\nValue | Notes\n----- | -----\n`\"N\"` | not sent                                          |\n`\"Q\"` | queued for processing                             |\n`\"A\"` | `ABN (Advance Beneficiary Notice)` required       |\n`\"S\"` | send                                              |\n`\"R\"` | results received                                  |\n`\"E\"` | error                                             |\n",
            "title": "Status",
            "type": "string"
          },
          "sublab": {
            "description": "",
            "title": "Sublab",
            "type": "integer"
          },
          "timestamp": {
            "description": "Time at which the order was submitted. Defaults to now",
            "readOnly": true,
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "sublab",
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "LabOrderDocument": {
        "properties": {
          "document": {
            "description": "",
            "title": "Document",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "lab_order": {
            "description": "ID of the order this document is associated with",
            "title": "Lab order",
            "type": "integer"
          },
          "timestamp": {
            "description": "Time at which the document was uploaded",
            "readOnly": true,
            "title": "Timestamp",
            "type": "string"
          },
          "type": {
            "description": "\nValue | Notes\n----- | -----\n`\"REQ\"` | requisition form                                              |\n`\"ABN\"` | `ABN (Advance Beneficiary Notice)`                            |\n`\"R-A\"` | requisition form and :abbr:`ABN (Advance Beneficiary Notice)` |\n`\"RES\"` | lab results                                                   |\n",
            "enum": [
              "REQ",
              "ABN",
              "R-A",
              "RES"
            ],
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "lab_order",
          "document",
          "type"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "LabResult": {
        "properties": {
          "abnormal_status": {
            "description": "\nValue | Notes\n----- | -----\n`'L'` | `'low'`\n`'LL'` | `'alert low'`\n`'H'` | `'high'`\n`'HH'` | `'alert high'`\n`'<'` | `'panic low'`\n`'>'` | `'panic high'`\n`'A'` | `'abnormal'`\n`'AA'` | `'very abnormal'`\n`'S'` | `'susceptible'`\n`'R'` | `'resistant'`\n`'I'` | `'intermediate'`\n`'NEG'` | `'negative'`\n`'POS'` | `'positive'`\n`'N'` | `'normal'`\n`''` | `'no comment'`\n",
            "enum": [
              "L",
              "LL",
              "H",
              "HH",
              "<",
              ">",
              "A",
              "AA",
              "S",
              "R",
              "I",
              "NEG",
              "POS",
              "N",
              ""
            ],
            "title": "Abnormal status",
            "type": "string"
          },
          "comments": {
            "description": "",
            "title": "Comments",
            "type": "string"
          },
          "document": {
            "description": "ID of `/lab_documents` object for the result",
            "title": "Document",
            "type": "integer"
          },
          "group_code": {
            "description": "This is the code used for grouping result data.",
            "title": "Group code",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "is_abnormal": {
            "description": "If true, the result will be flagged for the doctor's attention",
            "title": "Is abnormal",
            "type": "string"
          },
          "lab_order": {
            "description": "ID of `/lab_orders` object the result belongs to",
            "readOnly": true,
            "title": "Lab order",
            "type": "string"
          },
          "lab_test": {
            "description": "ID of `/lab_tests` object for the result",
            "title": "Lab test",
            "type": "integer"
          },
          "normal_range": {
            "description": "When ``value_is_numeric`` is True, this parameter must be a string of the form ``\"<lower> <upper>\", where both lower and upper are numerical``",
            "title": "Normal range",
            "type": "string"
          },
          "observation_code": {
            "description": "",
            "title": "Observation code",
            "type": "string"
          },
          "observation_description": {
            "description": "For example, ``\"Blood Urea Nitrogen (BUN)\"``",
            "title": "Observation description",
            "type": "string"
          },
          "specimen_received": {
            "description": "",
            "title": "Specimen received",
            "type": "string"
          },
          "status": {
            "description": "\nValue | Notes\n----- | -----\n`'P'` | `'preliminary'`\n`'I'` | `'pending'`\n`'C'` | `'correction'`\n`'F'` | `'final'`\n`'X'` | `'canceled'`\n",
            "enum": [
              "P",
              "I",
              "C",
              "F",
              "X"
            ],
            "title": "Status",
            "type": "string"
          },
          "test_performed": {
            "description": "",
            "title": "Test performed",
            "type": "string"
          },
          "unit": {
            "description": "Unit used for the value",
            "title": "Unit",
            "type": "string"
          },
          "value": {
            "description": "",
            "title": "Value",
            "type": "string"
          },
          "value_is_numeric": {
            "description": "Default to `False`",
            "title": "Value is numeric",
            "type": "boolean"
          }
        },
        "required": [
          "document",
          "lab_test",
          "test_performed",
          "status",
          "value"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "LabTest": {
        "properties": {
          "code": {
            "description": "",
            "title": "Code",
            "type": "string"
          },
          "collection_date": {
            "description": "The date the specimen were collected",
            "title": "Collection date",
            "type": "string"
          },
          "description": {
            "description": "Short description of the ICD-10 code",
            "title": "Description",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "internal_notes": {
            "description": "Notes which are meant for, and read by, the labs",
            "title": "Internal notes",
            "type": "string"
          },
          "lab_order": {
            "description": "ID of associated lab order",
            "title": "Lab order",
            "type": "integer"
          },
          "name": {
            "description": "Name for the test",
            "title": "Name",
            "type": "string"
          },
          "report_notes": {
            "description": "Notes which are not meant for labs, but are copied on the results.",
            "title": "Report notes",
            "type": "string"
          },
          "specimen_condition": {
            "description": "",
            "title": "Specimen condition",
            "type": "string"
          },
          "specimen_source": {
            "description": "",
            "title": "Specimen source",
            "type": "string"
          },
          "specimen_total_volume": {
            "description": "",
            "title": "Specimen total volume",
            "type": "number"
          },
          "status": {
            "description": "One of `\"preliminary\"`, `\"pending\"`, `\"correction\"`, `\"final\"` or `\"canceled\"`. Defaults to `\"preliminary\"`",
            "enum": [
              "P",
              "I",
              "C",
              "F",
              "X"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "lab_order"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "LabVendorLocation": {
        "properties": {
          "facility_code": {
            "description": "Used for identifying the lab in orders and results",
            "title": "Facility code",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "vendor_name": {
            "description": "",
            "readOnly": true,
            "title": "Vendor name",
            "type": "string"
          }
        },
        "required": [
          "name",
          "facility_code"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "LineItemTransaction": {
        "properties": {
          "adjustment": {
            "description": "Adjustment from total billed",
            "title": "Adjustment",
            "type": "number"
          },
          "adjustment_group_code": {
            "description": "Group code for adjustment",
            "enum": [
              "",
              "CO",
              "OA",
              "PI",
              "PR"
            ],
            "readOnly": true,
            "title": "Adjustment group code",
            "type": "string"
          },
          "adjustment_reason": {
            "description": "Reason for adjustment",
            "enum": [
              "-3",
              "-2",
              "-4",
              "-1",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "26",
              "27",
              "29",
              "31",
              "32",
              "33",
              "34",
              "35",
              "39",
              "40",
              "44",
              "45",
              "49",
              "50",
              "51",
              "53",
              "54",
              "55",
              "56",
              "58",
              "59",
              "60",
              "61",
              "66",
              "69",
              "70",
              "74",
              "75",
              "76",
              "78",
              "85",
              "87",
              "89",
              "90",
              "91",
              "94",
              "95",
              "96",
              "97",
              "100",
              "101",
              "102",
              "103",
              "104",
              "105",
              "106",
              "107",
              "108",
              "109",
              "110",
              "111",
              "112",
              "114",
              "115",
              "116",
              "117",
              "118",
              "119",
              "121",
              "122",
              "125",
              "128",
              "129",
              "130",
              "131",
              "132",
              "133",
              "134",
              "135",
              "136",
              "137",
              "138",
              "139",
              "140",
              "142",
              "143",
              "144",
              "146",
              "147",
              "148",
              "149",
              "150",
              "151",
              "152",
              "153",
              "154",
              "155",
              "157",
              "158",
              "159",
              "160",
              "161",
              "162",
              "163",
              "164",
              "165",
              "166",
              "167",
              "168",
              "169",
              "170",
              "171",
              "172",
              "173",
              "174",
              "175",
              "176",
              "177",
              "178",
              "179",
              "180",
              "181",
              "182",
              "183",
              "184",
              "185",
              "186",
              "187",
              "188",
              "189",
              "190",
              "191",
              "192",
              "193",
              "194",
              "195",
              "197",
              "198",
              "199",
              "200",
              "201",
              "202",
              "203",
              "204",
              "205",
              "206",
              "207",
              "208",
              "209",
              "210",
              "211",
              "212",
              "213",
              "214",
              "215",
              "216",
              "217",
              "218",
              "219",
              "220",
              "221",
              "222",
              "223",
              "224",
              "225",
              "226",
              "227",
              "228",
              "229",
              "230",
              "231",
              "232",
              "233",
              "234",
              "235",
              "236",
              "237",
              "238",
              "239",
              "240",
              "241",
              "242",
              "243",
              "244",
              "245",
              "246",
              "247",
              "248",
              "249",
              "250",
              "251",
              "252",
              "253",
              "254",
              "256",
              "257",
              "258",
              "259",
              "260",
              "261",
              "262",
              "263",
              "264",
              "265",
              "266",
              "267",
              "268",
              "269",
              "270",
              "271",
              "272",
              "273",
              "274",
              "275",
              "276",
              "277",
              "279",
              "286",
              "287",
              "288",
              "297",
              "A0",
              "A1",
              "A5",
              "A6",
              "A7",
              "A8",
              "B1",
              "B4",
              "B5",
              "B7",
              "B8",
              "B9",
              "B10",
              "B11",
              "B12",
              "B13",
              "B14",
              "B15",
              "B16",
              "B20",
              "B22",
              "B23",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5",
              "P6",
              "P7",
              "P8",
              "P9",
              "P10",
              "P11",
              "P12",
              "P13",
              "P14",
              "P15",
              "P16",
              "P17",
              "P18",
              "P19",
              "P20",
              "P21",
              "P22",
              "P23",
              "W1",
              "W2",
              "W3",
              "W4",
              "Y1",
              "Y2",
              "Y3"
            ],
            "title": "Adjustment reason",
            "type": "string"
          },
          "appointment": {
            "description": "Appointment ID",
            "title": "Appointment",
            "type": "integer"
          },
          "check_date": {
            "description": "Date of check",
            "readOnly": true,
            "title": "Check date",
            "type": "string"
          },
          "claim_status": {
            "description": "Status of claim",
            "enum": [
              "",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "10",
              "13",
              "15",
              "16",
              "17",
              "19",
              "20",
              "21",
              "22",
              "23",
              "25",
              "27"
            ],
            "readOnly": true,
            "title": "Claim status",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "Doctor ID",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "ins_name": {
            "description": "Can be one of the following, `1`(Primary Insurance), `2`(Secondary Insurance)",
            "title": "Ins name",
            "type": "integer"
          },
          "ins_paid": {
            "description": "",
            "title": "Ins paid",
            "type": "number"
          },
          "line_item": {
            "description": "ID of `/api/line_item` object",
            "title": "Line item",
            "type": "integer"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "posted_date": {
            "description": "Date when transaction is created",
            "readOnly": true,
            "title": "Posted date",
            "type": "string"
          },
          "trace_number": {
            "description": "Check number",
            "title": "Trace number",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "Office": {
        "properties": {
          "address": {
            "description": "",
            "readOnly": true,
            "title": "Address",
            "type": "string"
          },
          "archived": {
            "description": "Indicates that the object has been soft-deleted and should not be used",
            "title": "Archived",
            "type": "boolean"
          },
          "city": {
            "description": "",
            "readOnly": true,
            "title": "City",
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code",
            "enum": [
              "",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "CYM",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ],
            "readOnly": true,
            "title": "Country",
            "type": "string"
          },
          "doctor": {
            "description": "ID of the doctor who owns the office",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "end_time": {
            "description": "Truncated to the hour. Default is `24:00`",
            "title": "End time",
            "type": "string"
          },
          "exam_rooms": {
            "description": "",
            "readOnly": true,
            "title": "Exam rooms",
            "type": "string"
          },
          "fax_number": {
            "description": "",
            "readOnly": true,
            "title": "Fax number",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "online_scheduling": {
            "description": "Default is `false`",
            "title": "Online scheduling",
            "type": "boolean"
          },
          "online_timeslots": {
            "description": "Array of timslots",
            "items": {
              "description": "",
              "properties": {
                "day": {
                  "description": "`0`(Monday), ..., `6`(Sunday)",
                  "title": "Day",
                  "type": "integer"
                },
                "hour": {
                  "description": "From `0` to `23`",
                  "title": "Hour",
                  "type": "integer"
                },
                "minute": {
                  "description": "One of `0`, `15`, `30` or `45`",
                  "title": "Minute",
                  "type": "integer"
                }
              },
              "title": "OfficeOnlineHours",
              "type": "object"
            },
            "title": "Online timeslots",
            "type": "array"
          },
          "phone_number": {
            "description": "",
            "readOnly": true,
            "title": "Phone number",
            "type": "string"
          },
          "start_time": {
            "description": "Truncated to the hour. Default is `00:00:00`",
            "title": "Start time",
            "type": "string"
          },
          "state": {
            "description": "Two-letter abbreviation",
            "enum": [
              "AL",
              "AK",
              "AS",
              "AZ",
              "AR",
              "AA",
              "AE",
              "AP",
              "CA",
              "CO",
              "CT",
              "DE",
              "DC",
              "FL",
              "GA",
              "GU",
              "HI",
              "ID",
              "IL",
              "IN",
              "IA",
              "KS",
              "KY",
              "LA",
              "ME",
              "MD",
              "MA",
              "MI",
              "MN",
              "MS",
              "MO",
              "MT",
              "NE",
              "NV",
              "NH",
              "NJ",
              "NM",
              "NY",
              "NC",
              "ND",
              "MP",
              "OH",
              "OK",
              "OR",
              "PA",
              "PR",
              "RI",
              "SC",
              "SD",
              "TN",
              "TX",
              "UT",
              "VT",
              "VI",
              "VA",
              "WA",
              "WV",
              "WI",
              "WY"
            ],
            "readOnly": true,
            "title": "State",
            "type": "string"
          },
          "tax_id_number_professional": {
            "description": "Billing Tax ID #",
            "readOnly": true,
            "title": "Tax id number professional",
            "type": "string"
          },
          "zip_code": {
            "description": "",
            "readOnly": true,
            "title": "Zip code",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": [
          "online_timeslots"
        ]
      },
      "Patient": {
        "properties": {
          "address": {
            "description": "",
            "title": "Address",
            "type": "string"
          },
          "auto_accident_insurance": {
            "description": "",
            "properties": {
              "auto_accident_case_number": {
                "description": "",
                "title": "Auto accident case number",
                "type": "string"
              },
              "auto_accident_claim_rep_address": {
                "description": "",
                "title": "Auto accident claim rep address",
                "type": "string"
              },
              "auto_accident_claim_rep_city": {
                "description": "",
                "title": "Auto accident claim rep city",
                "type": "string"
              },
              "auto_accident_claim_rep_is_insurer": {
                "description": "Is the insurer's claim representative the insurer?",
                "title": "Auto accident claim rep is insurer",
                "type": "boolean"
              },
              "auto_accident_claim_rep_name": {
                "description": "",
                "title": "Auto accident claim rep name",
                "type": "string"
              },
              "auto_accident_claim_rep_state": {
                "description": "",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Auto accident claim rep state",
                "type": "string"
              },
              "auto_accident_claim_rep_zip": {
                "description": "",
                "title": "Auto accident claim rep zip",
                "type": "string"
              },
              "auto_accident_company": {
                "description": "",
                "title": "Auto accident company",
                "type": "string"
              },
              "auto_accident_date_of_accident": {
                "description": "",
                "title": "Auto accident date of accident",
                "type": "string"
              },
              "auto_accident_disabled_from_date": {
                "description": "Patient was disabled (unable to work) from",
                "title": "Auto accident disabled from date",
                "type": "string"
              },
              "auto_accident_disabled_to_date": {
                "description": "Patient was disabled (unable to work) to",
                "title": "Auto accident disabled to date",
                "type": "string"
              },
              "auto_accident_had_similar_condition": {
                "description": "Has the patient had same or similar condition?",
                "title": "Auto accident had similar condition",
                "type": "boolean"
              },
              "auto_accident_is_subscriber_the_patient": {
                "description": "True if the insurance policy is under patient's own name.",
                "title": "Auto accident is subscriber the patient",
                "type": "boolean"
              },
              "auto_accident_notes": {
                "description": "",
                "title": "Auto accident notes",
                "type": "string"
              },
              "auto_accident_patient_relationship_to_subscriber": {
                "description": "",
                "enum": [
                  "",
                  "01",
                  "04",
                  "05",
                  "07",
                  "10",
                  "15",
                  "17",
                  "19",
                  "20",
                  "21",
                  "22",
                  "23",
                  "24",
                  "29",
                  "32",
                  "33",
                  "36",
                  "39",
                  "40",
                  "41",
                  "43",
                  "53",
                  "76",
                  "G8"
                ],
                "title": "Auto accident patient relationship to subscriber",
                "type": "string"
              },
              "auto_accident_payer_address": {
                "description": "",
                "title": "Auto accident payer address",
                "type": "string"
              },
              "auto_accident_payer_city": {
                "description": "",
                "title": "Auto accident payer city",
                "type": "string"
              },
              "auto_accident_payer_id": {
                "description": "Auto Accident Payer ID",
                "title": "Auto accident payer id",
                "type": "string"
              },
              "auto_accident_payer_state": {
                "description": "",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Auto accident payer state",
                "type": "string"
              },
              "auto_accident_payer_zip": {
                "description": "",
                "title": "Auto accident payer zip",
                "type": "string"
              },
              "auto_accident_policy_number": {
                "description": "",
                "title": "Auto accident policy number",
                "type": "string"
              },
              "auto_accident_return_to_work_date": {
                "description": "If still disabled, patient should be able to return to work on",
                "title": "Auto accident return to work date",
                "type": "string"
              },
              "auto_accident_significant_injury": {
                "description": "",
                "enum": [
                  "YES",
                  "NO",
                  "N\\A"
                ],
                "title": "Auto accident significant injury",
                "type": "string"
              },
              "auto_accident_significant_injury_notes": {
                "description": "",
                "title": "Auto accident significant injury notes",
                "type": "string"
              },
              "auto_accident_similar_condition_date": {
                "description": "Date of same or similar condition",
                "title": "Auto accident similar condition date",
                "type": "string"
              },
              "auto_accident_similar_condition_notes": {
                "description": "",
                "title": "Auto accident similar condition notes",
                "type": "string"
              },
              "auto_accident_state_of_occurrence": {
                "description": "",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Auto accident state of occurrence",
                "type": "string"
              },
              "auto_accident_still_under_care": {
                "description": "Is patient still under your care for this condition?",
                "title": "Auto accident still under care",
                "type": "boolean"
              },
              "auto_accident_subscriber_address": {
                "description": "",
                "title": "Auto accident subscriber address",
                "type": "string"
              },
              "auto_accident_subscriber_city": {
                "description": "",
                "title": "Auto accident subscriber city",
                "type": "string"
              },
              "auto_accident_subscriber_date_of_birth": {
                "description": "",
                "title": "Auto accident subscriber date of birth",
                "type": "string"
              },
              "auto_accident_subscriber_first_name": {
                "description": "",
                "title": "Auto accident subscriber first name",
                "type": "string"
              },
              "auto_accident_subscriber_last_name": {
                "description": "",
                "title": "Auto accident subscriber last name",
                "type": "string"
              },
              "auto_accident_subscriber_middle_name": {
                "description": "",
                "title": "Auto accident subscriber middle name",
                "type": "string"
              },
              "auto_accident_subscriber_phone_number": {
                "description": "",
                "title": "Auto accident subscriber phone number",
                "type": "string"
              },
              "auto_accident_subscriber_social_security": {
                "description": "",
                "title": "Auto accident subscriber social security",
                "type": "string"
              },
              "auto_accident_subscriber_state": {
                "description": "",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Auto accident subscriber state",
                "type": "string"
              },
              "auto_accident_subscriber_suffix": {
                "description": "",
                "title": "Auto accident subscriber suffix",
                "type": "string"
              },
              "auto_accident_subscriber_zip_code": {
                "description": "",
                "title": "Auto accident subscriber zip code",
                "type": "string"
              },
              "auto_accident_treatment_duration": {
                "description": "",
                "title": "Auto accident treatment duration",
                "type": "string"
              },
              "auto_accident_will_require_therapy": {
                "description": "Will the patient require rehabilitation and/or occupational therapy as a result of the injuries sustained in this accident?",
                "title": "Auto accident will require therapy",
                "type": "boolean"
              },
              "auto_accident_will_require_therapy_rec": {
                "description": "",
                "title": "Auto accident will require therapy rec",
                "type": "string"
              }
            },
            "title": "AutoAccidentInsurance",
            "type": "object"
          },
          "cell_phone": {
            "description": "",
            "title": "Cell phone",
            "type": "string"
          },
          "chart_id": {
            "description": "Automatically set using first & last name if absent",
            "title": "Chart id",
            "type": "string"
          },
          "city": {
            "description": "",
            "title": "City",
            "type": "string"
          },
          "copay": {
            "description": "",
            "title": "Copay",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "custom_demographics": {
            "description": "",
            "items": {
              "description": "Custom demographic values the patient has",
              "properties": {
                "field_type": {
                  "description": "ID of the `/api/custom_demographics` object",
                  "title": "Field type",
                  "type": "integer"
                },
                "updated_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Updated at",
                  "type": "string"
                },
                "value": {
                  "description": "",
                  "title": "Value",
                  "type": "string"
                }
              },
              "title": "CustomPatientFieldValue",
              "type": "object"
            },
            "title": "Custom demographics",
            "type": "array"
          },
          "date_of_birth": {
            "description": "",
            "title": "Date of birth",
            "type": "string"
          },
          "date_of_first_appointment": {
            "description": "Date of first patient visit.",
            "title": "Date of first appointment",
            "type": "string"
          },
          "date_of_last_appointment": {
            "description": "Date of previous patient visit",
            "title": "Date of last appointment",
            "type": "string"
          },
          "default_pharmacy": {
            "description": "ncpdp id of patient's default pharmacy",
            "title": "Default pharmacy",
            "type": "string"
          },
          "disable_sms_messages": {
            "description": "If True, suppress SMS/Txt messages to this patient even if we have a cell phone # for them.",
            "title": "Disable sms messages",
            "type": "boolean"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "email": {
            "description": "",
            "title": "Email",
            "type": "string"
          },
          "emergency_contact_name": {
            "description": "",
            "title": "Emergency contact name",
            "type": "string"
          },
          "emergency_contact_phone": {
            "description": "",
            "title": "Emergency contact phone",
            "type": "string"
          },
          "emergency_contact_relation": {
            "description": "",
            "title": "Emergency contact relation",
            "type": "string"
          },
          "employer": {
            "description": "",
            "title": "Employer",
            "type": "string"
          },
          "employer_address": {
            "description": "",
            "title": "Employer address",
            "type": "string"
          },
          "employer_city": {
            "description": "",
            "title": "Employer city",
            "type": "string"
          },
          "employer_state": {
            "description": "Two-letter abbreviation",
            "title": "Employer state",
            "type": "string"
          },
          "employer_zip_code": {
            "description": "",
            "title": "Employer zip code",
            "type": "string"
          },
          "ethnicity": {
            "description": "One of `\"blank\"`, `\"hispanic\"`, `\"not_hispanic\"` or `\"declined\"`",
            "enum": [
              "blank",
              "hispanic",
              "not_hispanic",
              "declined"
            ],
            "title": "Ethnicity",
            "type": "string"
          },
          "first_name": {
            "description": "",
            "title": "First name",
            "type": "string"
          },
          "gender": {
            "description": "One of `\"Male\"`, `\"Female\"`, or `\"Other\"`",
            "enum": [
              "",
              "Male",
              "Female",
              "Other",
              "UNK",
              "ASKU"
            ],
            "title": "Gender",
            "type": "string"
          },
          "home_phone": {
            "description": "",
            "title": "Home phone",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "last_name": {
            "description": "",
            "title": "Last name",
            "type": "string"
          },
          "middle_name": {
            "description": "",
            "title": "Middle name",
            "type": "string"
          },
          "nick_name": {
            "description": "Common name for patient, should be used instead of first name if supplied.",
            "title": "Nick name",
            "type": "string"
          },
          "office_phone": {
            "description": "",
            "title": "Office phone",
            "type": "string"
          },
          "offices": {
            "description": "IDs of every office this patient has been to",
            "items": {
              "description": "",
              "title": "",
              "type": "integer"
            },
            "title": "Offices",
            "type": "array"
          },
          "patient_flags": {
            "description": "Possible patient flag type that can be attached to the patient",
            "items": {
              "description": "Array of patien flag type objects",
              "properties": {
                "archived": {
                  "description": "",
                  "readOnly": true,
                  "title": "Archived",
                  "type": "boolean"
                },
                "color": {
                  "description": "",
                  "title": "Color",
                  "type": "string"
                },
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "doctor": {
                  "description": "ID of doctor who owns the flag",
                  "title": "Doctor",
                  "type": "integer"
                },
                "id": {
                  "description": "",
                  "readOnly": true,
                  "title": "ID",
                  "type": "integer"
                },
                "name": {
                  "description": "",
                  "title": "Name",
                  "type": "string"
                },
                "priority": {
                  "description": "",
                  "title": "Priority",
                  "type": "integer"
                },
                "updated_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Updated at",
                  "type": "string"
                }
              },
              "title": "PatientFlagType",
              "type": "object"
            },
            "readOnly": true,
            "title": "Patient flags",
            "type": "array"
          },
          "patient_flags_attached": {
            "description": "Patient flags attached to the patient",
            "items": {
              "description": "Array of patient flag objects",
              "properties": {
                "archived": {
                  "description": "",
                  "readOnly": true,
                  "title": "Archived",
                  "type": "boolean"
                },
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "flag_text": {
                  "description": "Description of the patient flag",
                  "title": "Flag text",
                  "type": "string"
                },
                "flag_type": {
                  "description": "ID of the associated `/api/patient_flag_types` object",
                  "title": "Flag type",
                  "type": "integer"
                },
                "id": {
                  "description": "",
                  "readOnly": true,
                  "title": "ID",
                  "type": "integer"
                },
                "updated_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Updated at",
                  "type": "string"
                }
              },
              "title": "PatientFlag",
              "type": "object"
            },
            "title": "Patient flags attached",
            "type": "array"
          },
          "patient_payment_profile": {
            "description": "One of `\"\"`, `\"Cash\"`, `\"Insurance\"`, `\"Insurance Out of Network\"`, `\"Auto Accident\"` or `\"Worker's Comp\"`.<br>**Note:** Patient must already have either `primary_insurance` or `secondary_insurance` or new `primary_insurance` or `secondary_insurance` is passed in request if `Insurance`, `Auto Accident` or `Worker's Comp` payment profiles are chosen.",
            "enum": [
              "",
              "Cash",
              "Insurance",
              "Insurance Out of Network",
              "Auto Accident",
              "Worker's Comp"
            ],
            "title": "Patient payment profile",
            "type": "string"
          },
          "patient_photo": {
            "description": "",
            "title": "Patient photo",
            "type": "string"
          },
          "patient_photo_date": {
            "description": "Cannot be passed without `patient_photo`",
            "title": "Patient photo date",
            "type": "string"
          },
          "patient_status": {
            "description": "One of `\"A\"` (active), `\"I\"` (inactive), `\"D\"` (inactive-deceased)",
            "enum": [
              "A",
              "I",
              "D"
            ],
            "title": "Patient status",
            "type": "string"
          },
          "preferred_language": {
            "description": "Use ISO 639 alpha-3 codes",
            "enum": [
              "blank",
              "eng",
              "zho",
              "fra",
              "ita",
              "jpn",
              "por",
              "rus",
              "spa",
              "other",
              "unknown",
              "declined"
            ],
            "title": "Preferred language",
            "type": "string"
          },
          "preferred_pharmacies": {
            "description": "ncpdp id of patient's preferred pharmacies",
            "enum": [
              [
                "string"
              ]
            ],
            "items": {
              "description": "",
              "title": "",
              "type": "string"
            },
            "title": "Preferred pharmacies",
            "type": "array"
          },
          "primary_care_physician": {
            "description": "Referring doctor for this patient",
            "title": "Primary care physician",
            "type": "string"
          },
          "primary_insurance": {
            "description": "**Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.",
            "properties": {
              "insurance_claim_office_number": {
                "description": "Insurance office phone number",
                "title": "Insurance claim office number",
                "type": "string"
              },
              "insurance_company": {
                "description": "",
                "title": "Insurance company",
                "type": "string"
              },
              "insurance_group_name": {
                "description": "",
                "title": "Insurance group name",
                "type": "string"
              },
              "insurance_group_number": {
                "description": "",
                "title": "Insurance group number",
                "type": "string"
              },
              "insurance_id_number": {
                "description": "",
                "title": "Insurance id number",
                "type": "string"
              },
              "insurance_payer_id": {
                "description": "",
                "title": "Insurance payer id",
                "type": "string"
              },
              "insurance_plan_name": {
                "description": "Name of insurance plan.",
                "title": "Insurance plan name",
                "type": "string"
              },
              "insurance_plan_type": {
                "description": "",
                "enum": [
                  "",
                  "AM",
                  "BL",
                  "CH",
                  "CI",
                  "17",
                  "DS",
                  "14",
                  "FI",
                  "HM",
                  "16",
                  "15",
                  "LM",
                  "MC",
                  "MA",
                  "MB",
                  "ZZ",
                  "OF",
                  "11",
                  "13",
                  "12",
                  "TV",
                  "VA",
                  "WC"
                ],
                "title": "Insurance plan type",
                "type": "string"
              },
              "is_subscriber_the_patient": {
                "description": "True if the insurance policy is under patient's own name. Defaults to true",
                "title": "Is subscriber the patient",
                "type": "boolean"
              },
              "patient_relationship_to_subscriber": {
                "description": "HCFA/1500 individual relationship code",
                "enum": [
                  "",
                  "01",
                  "04",
                  "05",
                  "07",
                  "10",
                  "15",
                  "17",
                  "19",
                  "20",
                  "21",
                  "22",
                  "23",
                  "24",
                  "29",
                  "32",
                  "33",
                  "36",
                  "39",
                  "40",
                  "41",
                  "43",
                  "53",
                  "76",
                  "G8"
                ],
                "title": "Patient relationship to subscriber",
                "type": "string"
              },
              "photo_back": {
                "description": "Photo of back of insurance card",
                "title": "Photo back",
                "type": "string"
              },
              "photo_front": {
                "description": "Photo of front of insurance card",
                "title": "Photo front",
                "type": "string"
              },
              "subscriber_address": {
                "description": "",
                "title": "Subscriber address",
                "type": "string"
              },
              "subscriber_city": {
                "description": "",
                "title": "Subscriber city",
                "type": "string"
              },
              "subscriber_country": {
                "description": "Two-letter country code",
                "enum": [
                  "",
                  "AF",
                  "AX",
                  "AL",
                  "DZ",
                  "AS",
                  "AD",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AT",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BE",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "BN",
                  "BG",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CG",
                  "CD",
                  "CK",
                  "CR",
                  "CI",
                  "HR",
                  "CU",
                  "CW",
                  "CY",
                  "CZ",
                  "CYM",
                  "DK",
                  "DJ",
                  "DM",
                  "DO",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "EE",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "FI",
                  "FR",
                  "GF",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "DE",
                  "GH",
                  "GI",
                  "GR",
                  "GL",
                  "GD",
                  "GP",
                  "GU",
                  "GT",
                  "GG",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "VA",
                  "HN",
                  "HK",
                  "HU",
                  "IS",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IE",
                  "IM",
                  "IL",
                  "IT",
                  "JM",
                  "JP",
                  "JE",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "KP",
                  "KR",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LV",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "LI",
                  "LT",
                  "LU",
                  "MO",
                  "MK",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MT",
                  "MH",
                  "MQ",
                  "MR",
                  "MU",
                  "YT",
                  "MX",
                  "FM",
                  "MD",
                  "MC",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "NL",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "MP",
                  "NO",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PL",
                  "PT",
                  "PR",
                  "QA",
                  "RE",
                  "RO",
                  "RU",
                  "RW",
                  "BL",
                  "SH",
                  "KN",
                  "LC",
                  "MF",
                  "PM",
                  "VC",
                  "WS",
                  "SM",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SK",
                  "SI",
                  "SB",
                  "SO",
                  "ZA",
                  "GS",
                  "SS",
                  "ES",
                  "LK",
                  "SD",
                  "SR",
                  "SJ",
                  "SZ",
                  "SE",
                  "CH",
                  "SY",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TL",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "GB",
                  "US",
                  "UM",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VG",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ],
                "title": "Subscriber country",
                "type": "string"
              },
              "subscriber_date_of_birth": {
                "description": "",
                "title": "Subscriber date of birth",
                "type": "string"
              },
              "subscriber_first_name": {
                "description": "",
                "title": "Subscriber first name",
                "type": "string"
              },
              "subscriber_gender": {
                "description": "One of `\"Male\"` or `\"Female\"`",
                "enum": [
                  "",
                  "Male",
                  "Female",
                  "Other",
                  "UNK",
                  "ASKU"
                ],
                "title": "Subscriber gender",
                "type": "string"
              },
              "subscriber_last_name": {
                "description": "",
                "title": "Subscriber last name",
                "type": "string"
              },
              "subscriber_middle_name": {
                "description": "",
                "title": "Subscriber middle name",
                "type": "string"
              },
              "subscriber_social_security": {
                "description": "",
                "title": "Subscriber social security",
                "type": "string"
              },
              "subscriber_state": {
                "description": "Two-letter state code",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Subscriber state",
                "type": "string"
              },
              "subscriber_suffix": {
                "description": "E.g. `\"II\"` or `\"III\"`",
                "title": "Subscriber suffix",
                "type": "string"
              },
              "subscriber_zip_code": {
                "description": "",
                "title": "Subscriber zip code",
                "type": "string"
              }
            },
            "title": "PrimaryInsurance",
            "type": "object"
          },
          "race": {
            "description": "One of `\"blank\"`, `\"indian\"`, `\"asian\"`, `\"black\"`, `\"hawaiian\"`, `\"white\"` or `\"declined\"`",
            "enum": [
              "blank",
              "indian",
              "asian",
              "black",
              "hawaiian",
              "white",
              "other",
              "declined"
            ],
            "title": "Race",
            "type": "string"
          },
          "referring_doctor": {
            "description": "",
            "properties": {
              "address": {
                "description": "",
                "title": "Address",
                "type": "string"
              },
              "email": {
                "description": "",
                "title": "Email",
                "type": "string"
              },
              "fax": {
                "description": "Should follow format \"xxx-xx-xxxx\"",
                "title": "Fax",
                "type": "string"
              },
              "first_name": {
                "description": "",
                "title": "First name",
                "type": "string"
              },
              "last_name": {
                "description": "",
                "title": "Last name",
                "type": "string"
              },
              "middle_name": {
                "description": "",
                "title": "Middle name",
                "type": "string"
              },
              "npi": {
                "description": "",
                "title": "Npi",
                "type": "string"
              },
              "phone": {
                "description": "Should follow format \"xxx-xx-xxxx\"",
                "title": "Phone",
                "type": "string"
              },
              "provider_number": {
                "description": "",
                "title": "Provider number",
                "type": "string"
              },
              "provider_qualifier": {
                "description": "Can be one of following, `''`, `'0B'`(State License #), `'1G'`(Provider UPIN #), `'G2'`(Provider Commercial #)",
                "enum": [
                  "",
                  "0B",
                  "1G",
                  "G2"
                ],
                "title": "Provider qualifier",
                "type": "string"
              },
              "specialty": {
                "description": "Can be one of following, `''`, `'Acupuncture'`, `'Advanced Practice Midwife'`, `'Aesthetic Medicine'`, `'Aesthetician'`, `'Allergist/Immunologist'`, `'Anesthesiologist'`, `'Cardiac Electrophysiologist'`, `'Cardiologist'`, `'Cardiothoracic Surgeon'`, `'Child/Adolescent Psychiatry'`, `'Chiropractor'`, `'Clinical Social Worker'`, `'Colorectal Surgeon'`, `'Correactology'`, `'Cosmetic Medicine'`, `'Counselor Mental Health'`, `'Counselor Professional'`, `'Counselor'`, `'Dentist'`, `'Diabetology'`, `'Dermatologist'`, `'Diagnostic Medical Sonographer'`, `'Dietitian, Registered'`, `'Ear-Nose-Throat Specialist (ENT)'`, `'Emergency Medicine Physician'`, `'Endocrinologist'`, `'Endodontist'`, `'Epidemiologist'`, `'Family Practitioner'`, `'Gastroenterologist'`, `'General Practice'`, `'General Surgeon'`, `'Geneticist'`, `'Geriatrician'`, `'Gerontologist'`, `'Gynecologist (no OB)'`, `'Gynegologic Oncologist'`, `'Hand Surgeon'`, `'Hematologist'`, `'Home Care'`, `'Hospice'`, `'Hospitalist'`, `'Infectious Disease Specialist'`, `'Integrative and Functional Medicine'`, `'Integrative Medicine'`, `'Internist'`, `'Interventional Radiology'`, `'Laboratory Medicine Specialist'`, `'Laser Surgery'`, `'Massage Therapist'`, `'Naturopathic Physician'`, `'Neonatologist'`, `'Nephrologist'`, `'Neurologist'`, `'Neuropsychology'`, `'Neurosurgeon'`, `'Not Actively Practicing'`, `'Nuclear Medicine Specialist'`, `'Nurse Practitioner'`, `'Nursing'`, `'Nutritionist'`, `'Obstetrician/Gynecologist'`, `'Occupational Medicine'`, `'Occupational Therapist'`, `'Oncologist'`, `'Ophthalmologist'`, `'Optometrist'`, `'Oral Surgeon'`, `'Orofacial Pain'`, `'Orthodontist'`, `'Orthopedic Surgeon'`, `'Orthotist'`, `'Other'`, `'Pain Management Specialist'`, `'Pathologist'`, `'Pediatric Dentist'`, `'Pediatric Gastroenterology'`, `'Pediatric Surgeon'`, `'Pediatrician'`, `'Perinatologist'`, `'Periodontist'`, `'Physical Medicine and Rehab Specialist'`, `'Physical Therapist'`, `'Physician Assistant'`, `'Plastic Surgeon'`, `'Podiatrist'`, `'Preventive-Aging Medicine'`, `'Preventive Medicine/Occupational-Environmental Medicine'`, `'Primary Care Physician'`, `'Prosthetist'`, `'Prosthodontist'`, `'Psychiatrist'`, `'Psychologist'`, `'Public Health Professional'`, `'Pulmonologist'`, `'Radiation Oncologist'`, `'Radiologist'`, `'Registered Nurse'`, `'Religious Nonmedical Practitioner'`, `'Reproductive Endocrinologist'`, `'Reproductive Medicine'`, `'Rheumatologist'`, `'Sleep Medicine'`, `'Speech-Language Pathologist'`, `'Sports Medicine Specialist'`, `'Urologist'`, `'Urgent Care'`, `'Vascular Surgeon'`",
                "enum": [
                  "",
                  "Acupuncture",
                  "Advanced Practice Midwife",
                  "Aesthetic Medicine",
                  "Aesthetician",
                  "Allergist/Immunologist",
                  "Anesthesiologist",
                  "Cardiac Electrophysiologist",
                  "Cardiologist",
                  "Cardiothoracic Surgeon",
                  "Child/Adolescent Psychiatry",
                  "Chiropractor",
                  "Clinical Social Worker",
                  "Colorectal Surgeon",
                  "Correactology",
                  "Cosmetic Medicine",
                  "Counselor Mental Health",
                  "Counselor Professional",
                  "Counselor",
                  "Dentist",
                  "Diabetology",
                  "Dermatologist",
                  "Diagnostic Medical Sonographer",
                  "Dietitian, Registered",
                  "Ear-Nose-Throat Specialist (ENT)",
                  "Emergency Medicine Physician",
                  "Endocrinologist",
                  "Endodontist",
                  "Epidemiologist",
                  "Family Practitioner",
                  "Gastroenterologist",
                  "General Practice",
                  "General Surgeon",
                  "Geneticist",
                  "Geriatrician",
                  "Gerontologist",
                  "Gynecologist (no OB)",
                  "Gynegologic Oncologist",
                  "Hand Surgeon",
                  "Hematologist",
                  "Home Care",
                  "Hospice",
                  "Hospitalist",
                  "Infectious Disease Specialist",
                  "Integrative and Functional Medicine",
                  "Integrative Medicine",
                  "Internist",
                  "Interventional Radiology",
                  "Laboratory Medicine Specialist",
                  "Laser Surgery",
                  "Massage Therapist",
                  "Naturopathic Physician",
                  "Neonatologist",
                  "Nephrologist",
                  "Neurologist",
                  "Neuropsychology",
                  "Neurosurgeon",
                  "Not Actively Practicing",
                  "Nuclear Medicine Specialist",
                  "Nurse Practitioner",
                  "Nursing",
                  "Nutritionist",
                  "Obstetrician/Gynecologist",
                  "Occupational Medicine",
                  "Occupational Therapist",
                  "Oncologist",
                  "Ophthalmologist",
                  "Optometrist",
                  "Oral Surgeon",
                  "Orofacial Pain",
                  "Orthodontist",
                  "Orthopedic Surgeon",
                  "Orthotist",
                  "Other",
                  "Pain Management Specialist",
                  "Pathologist",
                  "Pediatric Dentist",
                  "Pediatric Gastroenterology",
                  "Pediatric Surgeon",
                  "Pediatrician",
                  "Perinatologist",
                  "Periodontist",
                  "Physical Medicine and Rehab Specialist",
                  "Physical Therapist",
                  "Physician Assistant",
                  "Plastic Surgeon",
                  "Podiatrist",
                  "Preventive-Aging Medicine",
                  "Preventive Medicine/Occupational-Environmental Medicine",
                  "Primary Care Physician",
                  "Prosthetist",
                  "Prosthodontist",
                  "Psychiatrist",
                  "Psychologist",
                  "Public Health Professional",
                  "Pulmonologist",
                  "Radiation Oncologist",
                  "Radiologist",
                  "Registered Nurse",
                  "Religious Nonmedical Practitioner",
                  "Reproductive Endocrinologist",
                  "Reproductive Medicine",
                  "Rheumatologist",
                  "Sleep Medicine",
                  "Speech-Language Pathologist",
                  "Sports Medicine Specialist",
                  "Urologist",
                  "Urgent Care",
                  "Vascular Surgeon"
                ],
                "title": "Specialty",
                "type": "string"
              },
              "suffix": {
                "description": "",
                "title": "Suffix",
                "type": "string"
              }
            },
            "title": "Patient",
            "type": "object"
          },
          "referring_source": {
            "description": "Referring source.",
            "title": "Referring source",
            "type": "string"
          },
          "responsible_party_email": {
            "description": "",
            "title": "Responsible party email",
            "type": "string"
          },
          "responsible_party_name": {
            "description": "",
            "title": "Responsible party name",
            "type": "string"
          },
          "responsible_party_phone": {
            "description": "",
            "title": "Responsible party phone",
            "type": "string"
          },
          "responsible_party_relation": {
            "description": "",
            "title": "Responsible party relation",
            "type": "string"
          },
          "secondary_insurance": {
            "description": "**Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.",
            "properties": {
              "insurance_claim_office_number": {
                "description": "Insurance office phone number",
                "title": "Insurance claim office number",
                "type": "string"
              },
              "insurance_company": {
                "description": "",
                "title": "Insurance company",
                "type": "string"
              },
              "insurance_group_name": {
                "description": "",
                "title": "Insurance group name",
                "type": "string"
              },
              "insurance_group_number": {
                "description": "",
                "title": "Insurance group number",
                "type": "string"
              },
              "insurance_id_number": {
                "description": "",
                "title": "Insurance id number",
                "type": "string"
              },
              "insurance_payer_id": {
                "description": "",
                "title": "Insurance payer id",
                "type": "string"
              },
              "insurance_plan_name": {
                "description": "Name of insurance plan.",
                "title": "Insurance plan name",
                "type": "string"
              },
              "insurance_plan_type": {
                "description": "",
                "enum": [
                  "",
                  "AM",
                  "BL",
                  "CH",
                  "CI",
                  "17",
                  "DS",
                  "14",
                  "FI",
                  "HM",
                  "16",
                  "15",
                  "LM",
                  "MC",
                  "MA",
                  "MB",
                  "ZZ",
                  "OF",
                  "11",
                  "13",
                  "12",
                  "TV",
                  "VA",
                  "WC"
                ],
                "title": "Insurance plan type",
                "type": "string"
              },
              "is_subscriber_the_patient": {
                "description": "True if the insurance policy is under patient's own name. Defaults to true",
                "title": "Is subscriber the patient",
                "type": "boolean"
              },
              "patient_relationship_to_subscriber": {
                "description": "HCFA/1500 individual relationship code",
                "enum": [
                  "",
                  "01",
                  "04",
                  "05",
                  "07",
                  "10",
                  "15",
                  "17",
                  "19",
                  "20",
                  "21",
                  "22",
                  "23",
                  "24",
                  "29",
                  "32",
                  "33",
                  "36",
                  "39",
                  "40",
                  "41",
                  "43",
                  "53",
                  "76",
                  "G8"
                ],
                "title": "Patient relationship to subscriber",
                "type": "string"
              },
              "photo_back": {
                "description": "Photo of back of insurance card",
                "title": "Photo back",
                "type": "string"
              },
              "photo_front": {
                "description": "Photo of front of insurance card",
                "title": "Photo front",
                "type": "string"
              },
              "subscriber_address": {
                "description": "",
                "title": "Subscriber address",
                "type": "string"
              },
              "subscriber_city": {
                "description": "",
                "title": "Subscriber city",
                "type": "string"
              },
              "subscriber_country": {
                "description": "Two-letter country code",
                "enum": [
                  "",
                  "AF",
                  "AX",
                  "AL",
                  "DZ",
                  "AS",
                  "AD",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AT",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BE",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "BN",
                  "BG",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CG",
                  "CD",
                  "CK",
                  "CR",
                  "CI",
                  "HR",
                  "CU",
                  "CW",
                  "CY",
                  "CZ",
                  "CYM",
                  "DK",
                  "DJ",
                  "DM",
                  "DO",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "EE",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "FI",
                  "FR",
                  "GF",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "DE",
                  "GH",
                  "GI",
                  "GR",
                  "GL",
                  "GD",
                  "GP",
                  "GU",
                  "GT",
                  "GG",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "VA",
                  "HN",
                  "HK",
                  "HU",
                  "IS",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IE",
                  "IM",
                  "IL",
                  "IT",
                  "JM",
                  "JP",
                  "JE",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "KP",
                  "KR",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LV",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "LI",
                  "LT",
                  "LU",
                  "MO",
                  "MK",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MT",
                  "MH",
                  "MQ",
                  "MR",
                  "MU",
                  "YT",
                  "MX",
                  "FM",
                  "MD",
                  "MC",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "NL",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "MP",
                  "NO",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PL",
                  "PT",
                  "PR",
                  "QA",
                  "RE",
                  "RO",
                  "RU",
                  "RW",
                  "BL",
                  "SH",
                  "KN",
                  "LC",
                  "MF",
                  "PM",
                  "VC",
                  "WS",
                  "SM",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SK",
                  "SI",
                  "SB",
                  "SO",
                  "ZA",
                  "GS",
                  "SS",
                  "ES",
                  "LK",
                  "SD",
                  "SR",
                  "SJ",
                  "SZ",
                  "SE",
                  "CH",
                  "SY",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TL",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "GB",
                  "US",
                  "UM",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VG",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ],
                "title": "Subscriber country",
                "type": "string"
              },
              "subscriber_date_of_birth": {
                "description": "",
                "title": "Subscriber date of birth",
                "type": "string"
              },
              "subscriber_first_name": {
                "description": "",
                "title": "Subscriber first name",
                "type": "string"
              },
              "subscriber_gender": {
                "description": "One of `\"Male\"` or `\"Female\"`",
                "enum": [
                  "",
                  "Male",
                  "Female",
                  "Other",
                  "UNK",
                  "ASKU"
                ],
                "title": "Subscriber gender",
                "type": "string"
              },
              "subscriber_last_name": {
                "description": "",
                "title": "Subscriber last name",
                "type": "string"
              },
              "subscriber_middle_name": {
                "description": "",
                "title": "Subscriber middle name",
                "type": "string"
              },
              "subscriber_social_security": {
                "description": "",
                "title": "Subscriber social security",
                "type": "string"
              },
              "subscriber_state": {
                "description": "Two-letter state code",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Subscriber state",
                "type": "string"
              },
              "subscriber_suffix": {
                "description": "E.g. `\"II\"` or `\"III\"`",
                "title": "Subscriber suffix",
                "type": "string"
              },
              "subscriber_zip_code": {
                "description": "",
                "title": "Subscriber zip code",
                "type": "string"
              }
            },
            "title": "SecondaryInsurance",
            "type": "object"
          },
          "social_security_number": {
            "description": "",
            "title": "Social security number",
            "type": "string"
          },
          "state": {
            "description": "Two-letter abbreviation",
            "title": "State",
            "type": "string"
          },
          "tertiary_insurance": {
            "description": "**Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.",
            "properties": {
              "insurance_claim_office_number": {
                "description": "Insurance office phone number",
                "title": "Insurance claim office number",
                "type": "string"
              },
              "insurance_company": {
                "description": "",
                "title": "Insurance company",
                "type": "string"
              },
              "insurance_group_name": {
                "description": "",
                "title": "Insurance group name",
                "type": "string"
              },
              "insurance_group_number": {
                "description": "",
                "title": "Insurance group number",
                "type": "string"
              },
              "insurance_id_number": {
                "description": "",
                "title": "Insurance id number",
                "type": "string"
              },
              "insurance_payer_id": {
                "description": "",
                "title": "Insurance payer id",
                "type": "string"
              },
              "insurance_plan_name": {
                "description": "Name of insurance plan.",
                "title": "Insurance plan name",
                "type": "string"
              },
              "insurance_plan_type": {
                "description": "",
                "enum": [
                  "",
                  "AM",
                  "BL",
                  "CH",
                  "CI",
                  "17",
                  "DS",
                  "14",
                  "FI",
                  "HM",
                  "16",
                  "15",
                  "LM",
                  "MC",
                  "MA",
                  "MB",
                  "ZZ",
                  "OF",
                  "11",
                  "13",
                  "12",
                  "TV",
                  "VA",
                  "WC"
                ],
                "title": "Insurance plan type",
                "type": "string"
              },
              "is_subscriber_the_patient": {
                "description": "True if the insurance policy is under patient's own name. Defaults to true",
                "title": "Is subscriber the patient",
                "type": "boolean"
              },
              "patient_relationship_to_subscriber": {
                "description": "HCFA/1500 individual relationship code",
                "enum": [
                  "",
                  "01",
                  "04",
                  "05",
                  "07",
                  "10",
                  "15",
                  "17",
                  "19",
                  "20",
                  "21",
                  "22",
                  "23",
                  "24",
                  "29",
                  "32",
                  "33",
                  "36",
                  "39",
                  "40",
                  "41",
                  "43",
                  "53",
                  "76",
                  "G8"
                ],
                "title": "Patient relationship to subscriber",
                "type": "string"
              },
              "photo_back": {
                "description": "Photo of back of insurance card",
                "title": "Photo back",
                "type": "string"
              },
              "photo_front": {
                "description": "Photo of front of insurance card",
                "title": "Photo front",
                "type": "string"
              },
              "subscriber_address": {
                "description": "",
                "title": "Subscriber address",
                "type": "string"
              },
              "subscriber_city": {
                "description": "",
                "title": "Subscriber city",
                "type": "string"
              },
              "subscriber_country": {
                "description": "Two-letter country code",
                "enum": [
                  "",
                  "AF",
                  "AX",
                  "AL",
                  "DZ",
                  "AS",
                  "AD",
                  "AO",
                  "AI",
                  "AQ",
                  "AG",
                  "AR",
                  "AM",
                  "AW",
                  "AU",
                  "AT",
                  "AZ",
                  "BS",
                  "BH",
                  "BD",
                  "BB",
                  "BY",
                  "BE",
                  "BZ",
                  "BJ",
                  "BM",
                  "BT",
                  "BO",
                  "BQ",
                  "BA",
                  "BW",
                  "BV",
                  "BR",
                  "IO",
                  "BN",
                  "BG",
                  "BF",
                  "BI",
                  "KH",
                  "CM",
                  "CA",
                  "CV",
                  "KY",
                  "CF",
                  "TD",
                  "CL",
                  "CN",
                  "CX",
                  "CC",
                  "CO",
                  "KM",
                  "CG",
                  "CD",
                  "CK",
                  "CR",
                  "CI",
                  "HR",
                  "CU",
                  "CW",
                  "CY",
                  "CZ",
                  "CYM",
                  "DK",
                  "DJ",
                  "DM",
                  "DO",
                  "EC",
                  "EG",
                  "SV",
                  "GQ",
                  "ER",
                  "EE",
                  "ET",
                  "FK",
                  "FO",
                  "FJ",
                  "FI",
                  "FR",
                  "GF",
                  "PF",
                  "TF",
                  "GA",
                  "GM",
                  "GE",
                  "DE",
                  "GH",
                  "GI",
                  "GR",
                  "GL",
                  "GD",
                  "GP",
                  "GU",
                  "GT",
                  "GG",
                  "GN",
                  "GW",
                  "GY",
                  "HT",
                  "HM",
                  "VA",
                  "HN",
                  "HK",
                  "HU",
                  "IS",
                  "IN",
                  "ID",
                  "IR",
                  "IQ",
                  "IE",
                  "IM",
                  "IL",
                  "IT",
                  "JM",
                  "JP",
                  "JE",
                  "JO",
                  "KZ",
                  "KE",
                  "KI",
                  "KP",
                  "KR",
                  "XK",
                  "KW",
                  "KG",
                  "LA",
                  "LV",
                  "LB",
                  "LS",
                  "LR",
                  "LY",
                  "LI",
                  "LT",
                  "LU",
                  "MO",
                  "MK",
                  "MG",
                  "MW",
                  "MY",
                  "MV",
                  "ML",
                  "MT",
                  "MH",
                  "MQ",
                  "MR",
                  "MU",
                  "YT",
                  "MX",
                  "FM",
                  "MD",
                  "MC",
                  "MN",
                  "ME",
                  "MS",
                  "MA",
                  "MZ",
                  "MM",
                  "NA",
                  "NR",
                  "NP",
                  "NL",
                  "NC",
                  "NZ",
                  "NI",
                  "NE",
                  "NG",
                  "NU",
                  "NF",
                  "MP",
                  "NO",
                  "OM",
                  "PK",
                  "PW",
                  "PS",
                  "PA",
                  "PG",
                  "PY",
                  "PE",
                  "PH",
                  "PN",
                  "PL",
                  "PT",
                  "PR",
                  "QA",
                  "RE",
                  "RO",
                  "RU",
                  "RW",
                  "BL",
                  "SH",
                  "KN",
                  "LC",
                  "MF",
                  "PM",
                  "VC",
                  "WS",
                  "SM",
                  "ST",
                  "SA",
                  "SN",
                  "RS",
                  "SC",
                  "SL",
                  "SG",
                  "SX",
                  "SK",
                  "SI",
                  "SB",
                  "SO",
                  "ZA",
                  "GS",
                  "SS",
                  "ES",
                  "LK",
                  "SD",
                  "SR",
                  "SJ",
                  "SZ",
                  "SE",
                  "CH",
                  "SY",
                  "TW",
                  "TJ",
                  "TZ",
                  "TH",
                  "TL",
                  "TG",
                  "TK",
                  "TO",
                  "TT",
                  "TN",
                  "TR",
                  "TM",
                  "TC",
                  "TV",
                  "UG",
                  "UA",
                  "AE",
                  "GB",
                  "US",
                  "UM",
                  "UY",
                  "UZ",
                  "VU",
                  "VE",
                  "VN",
                  "VG",
                  "VI",
                  "WF",
                  "EH",
                  "YE",
                  "ZM",
                  "ZW"
                ],
                "title": "Subscriber country",
                "type": "string"
              },
              "subscriber_date_of_birth": {
                "description": "",
                "title": "Subscriber date of birth",
                "type": "string"
              },
              "subscriber_first_name": {
                "description": "",
                "title": "Subscriber first name",
                "type": "string"
              },
              "subscriber_gender": {
                "description": "One of `\"Male\"` or `\"Female\"`",
                "enum": [
                  "",
                  "Male",
                  "Female",
                  "Other",
                  "UNK",
                  "ASKU"
                ],
                "title": "Subscriber gender",
                "type": "string"
              },
              "subscriber_last_name": {
                "description": "",
                "title": "Subscriber last name",
                "type": "string"
              },
              "subscriber_middle_name": {
                "description": "",
                "title": "Subscriber middle name",
                "type": "string"
              },
              "subscriber_social_security": {
                "description": "",
                "title": "Subscriber social security",
                "type": "string"
              },
              "subscriber_state": {
                "description": "Two-letter state code",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Subscriber state",
                "type": "string"
              },
              "subscriber_suffix": {
                "description": "E.g. `\"II\"` or `\"III\"`",
                "title": "Subscriber suffix",
                "type": "string"
              },
              "subscriber_zip_code": {
                "description": "",
                "title": "Subscriber zip code",
                "type": "string"
              }
            },
            "title": "TertiaryInsurance",
            "type": "object"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "workers_comp_insurance": {
            "description": "",
            "properties": {
              "property_and_casualty_agency_claim_number": {
                "description": "",
                "title": "Property and casualty agency claim number",
                "type": "string"
              },
              "workers_comp_carrier_code": {
                "description": "",
                "title": "Workers comp carrier code",
                "type": "string"
              },
              "workers_comp_case_number": {
                "description": "",
                "title": "Workers comp case number",
                "type": "string"
              },
              "workers_comp_company": {
                "description": "",
                "title": "Workers comp company",
                "type": "string"
              },
              "workers_comp_date_of_accident": {
                "description": "",
                "title": "Workers comp date of accident",
                "type": "string"
              },
              "workers_comp_group_name": {
                "description": "",
                "title": "Workers comp group name",
                "type": "string"
              },
              "workers_comp_group_number": {
                "description": "",
                "title": "Workers comp group number",
                "type": "string"
              },
              "workers_comp_notes": {
                "description": "",
                "title": "Workers comp notes",
                "type": "string"
              },
              "workers_comp_payer_address": {
                "description": "",
                "title": "Workers comp payer address",
                "type": "string"
              },
              "workers_comp_payer_city": {
                "description": "",
                "title": "Workers comp payer city",
                "type": "string"
              },
              "workers_comp_payer_id": {
                "description": "",
                "title": "Workers comp payer id",
                "type": "string"
              },
              "workers_comp_payer_state": {
                "description": "",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Workers comp payer state",
                "type": "string"
              },
              "workers_comp_payer_zip": {
                "description": "",
                "title": "Workers comp payer zip",
                "type": "string"
              },
              "workers_comp_state_of_occurrence": {
                "description": "",
                "enum": [
                  "AL",
                  "AK",
                  "AS",
                  "AZ",
                  "AR",
                  "AA",
                  "AE",
                  "AP",
                  "CA",
                  "CO",
                  "CT",
                  "DE",
                  "DC",
                  "FL",
                  "GA",
                  "GU",
                  "HI",
                  "ID",
                  "IL",
                  "IN",
                  "IA",
                  "KS",
                  "KY",
                  "LA",
                  "ME",
                  "MD",
                  "MA",
                  "MI",
                  "MN",
                  "MS",
                  "MO",
                  "MT",
                  "NE",
                  "NV",
                  "NH",
                  "NJ",
                  "NM",
                  "NY",
                  "NC",
                  "ND",
                  "MP",
                  "OH",
                  "OK",
                  "OR",
                  "PA",
                  "PR",
                  "RI",
                  "SC",
                  "SD",
                  "TN",
                  "TX",
                  "UT",
                  "VT",
                  "VI",
                  "VA",
                  "WA",
                  "WV",
                  "WI",
                  "WY"
                ],
                "title": "Workers comp state of occurrence",
                "type": "string"
              },
              "workers_comp_wcb": {
                "description": "",
                "title": "Workers comp wcb",
                "type": "string"
              },
              "workers_comp_wcb_rating_code": {
                "description": "",
                "title": "Workers comp wcb rating code",
                "type": "string"
              }
            },
            "title": "WorkerCompInsurance",
            "type": "object"
          },
          "zip_code": {
            "description": "",
            "title": "Zip code",
            "type": "string"
          }
        },
        "required": [
          "gender",
          "doctor"
        ],
        "type": "object",
        "x-verbose-required": [
          "auto_accident_insurance",
          "custom_demographics",
          "patient_flags",
          "patient_flags_attached",
          "primary_insurance",
          "referring_doctor",
          "secondary_insurance",
          "tertiary_insurance",
          "workers_comp_insurance"
        ]
      },
      "PatientAllergy": {
        "properties": {
          "description": {
            "description": "Description of the allergy, such as `\"Cat hair\"`",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "Id of the doctor who diagnosed the allergy",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "notes": {
            "description": "Any additional notes from the provider",
            "title": "Notes",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "reaction": {
            "description": "Short description of the patient's allergic reaction, such as `\"Hives\"`",
            "title": "Reaction",
            "type": "string"
          },
          "rxnorm": {
            "description": "If the allergy is a drug allergy, this is the RxNorm code of the drug",
            "title": "Rxnorm",
            "type": "string"
          },
          "snomed_reaction": {
            "description": "SNOMED code for the reaction. For possible SnoMED codes, please see [this link from PHIN VADS](https://phinvads.cdc.gov/vads/ViewValueSet.action?id=896AABB4-5ACD-DE11-913D-0015173D1785)",
            "enum": [
              "",
              "14669001",
              "4448006",
              "39579001",
              "57676002",
              "43724002",
              "49727002",
              "386661006",
              "25064002",
              "247472004",
              "271795006",
              "68962001",
              "68235000",
              "422587007",
              "95388000",
              "271807003",
              "271825005",
              "64531003",
              "267036007",
              "162397003",
              "65124004"
            ],
            "title": "Snomed reaction",
            "type": "string"
          },
          "status": {
            "description": "One of `\"active\"`, `\"inactive\"`. If absent in `POST`, default to `\"active\"`",
            "enum": [
              "active",
              "inactive"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": [
          "description"
        ]
      },
      "PatientAmendment": {
        "properties": {
          "amendment_file": {
            "description": "A PDF file containing the amended information for the patient's record",
            "title": "Amendment file",
            "type": "string"
          },
          "amendment_name": {
            "description": "",
            "title": "Amendment name",
            "type": "string"
          },
          "appointment": {
            "description": "ID of the appointment to which the amendment applies, if any. If present, the `amendment_file` will be appended to the clinical note for this appointment.",
            "title": "Appointment",
            "type": "integer"
          },
          "comments": {
            "description": "",
            "title": "Comments",
            "type": "string"
          },
          "doctor": {
            "description": "ID of the doctor who owns the amendment",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "patient": {
            "description": "ID of the patient to whom the amendment applies",
            "title": "Patient",
            "type": "integer"
          }
        },
        "required": [
          "patient",
          "doctor",
          "amendment_name",
          "amendment_file"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientAuthorization": {
        "properties": {
          "auth_number": {
            "description": "Authorization Number",
            "title": "Authorization Number",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "end_date": {
            "description": "",
            "readOnly": true,
            "title": "End Date",
            "type": "string"
          },
          "expired": {
            "description": "",
            "readOnly": true,
            "title": "Expired authorization",
            "type": "boolean"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "notes": {
            "description": "Notes",
            "title": "Notes",
            "type": "string"
          },
          "number_of_visits": {
            "description": "",
            "readOnly": true,
            "title": "Number of visits",
            "type": "integer"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "procedure_codes": {
            "description": "Array of procedure code objects",
            "items": {
              "description": "Procedure code object",
              "properties": {
                "code": {
                  "description": "",
                  "title": "Code",
                  "type": "string"
                },
                "price": {
                  "description": "This field is represented in string format",
                  "title": "Price",
                  "type": "string"
                },
                "quantity": {
                  "description": "This field is represented in string format",
                  "title": "Quantity",
                  "type": "string"
                }
              },
              "title": "",
              "type": "object"
            },
            "readOnly": true,
            "title": "Procedure codes",
            "type": "array"
          },
          "specialty": {
            "description": "Specialty",
            "title": "Specialty",
            "type": "string"
          },
          "start_date": {
            "description": "",
            "readOnly": true,
            "title": "Start Date",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "title": "Status",
            "type": "string"
          },
          "visits_remaining": {
            "description": "",
            "readOnly": true,
            "title": "Visits remainings",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientCommunication": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "code": {
            "description": "Code from different code system",
            "title": "Code",
            "type": "string"
          },
          "code_system": {
            "description": "Can be `SNOMEDCT`, `LOINC`",
            "title": "Code system",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "effective_time": {
            "description": "",
            "title": "Effective time",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "value_code": {
            "description": "Code from different code system represent communication value",
            "title": "Value code",
            "type": "string"
          },
          "value_code_system": {
            "description": "Can be `SNOMEDCT`, `ICD10CM`, `LOINC`",
            "title": "Value code system",
            "type": "string"
          },
          "value_name": {
            "description": "Description of value",
            "readOnly": true,
            "title": "Value name",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientDrug": {
        "properties": {
          "appointment": {
            "description": "Appointment ID corresponding to the initial prescription",
            "title": "Appointment",
            "type": "integer"
          },
          "date_prescribed": {
            "description": "",
            "title": "Date prescribed",
            "type": "string"
          },
          "date_started_taking": {
            "description": "",
            "title": "Date started taking",
            "type": "string"
          },
          "date_stopped_taking": {
            "description": "",
            "title": "Date stopped taking",
            "type": "string"
          },
          "daw": {
            "description": "If true, the prescription should be dispensed as written and not substituted",
            "title": "Daw",
            "type": "boolean"
          },
          "dispense_quantity": {
            "description": "",
            "title": "Dispense quantity",
            "type": "number"
          },
          "doctor": {
            "description": "Prescribing doctor ID",
            "title": "Doctor",
            "type": "integer"
          },
          "dosage_quantity": {
            "description": "Please note, this used to be an decimal field, you can still pass decimal value to it. Or you can pass in some formatted string if needed.",
            "title": "Dosage quantity",
            "type": "string"
          },
          "dosage_units": {
            "description": "",
            "title": "Dosage units",
            "type": "string"
          },
          "frequency": {
            "description": "Frequency pf administration",
            "title": "Frequency",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "indication": {
            "description": "",
            "title": "Indication",
            "type": "string"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "ndc": {
            "description": "",
            "title": "Ndc",
            "type": "string"
          },
          "notes": {
            "description": "Any additional notes from the provider",
            "title": "Notes",
            "type": "string"
          },
          "number_refills": {
            "description": "",
            "title": "Number refills",
            "type": "integer"
          },
          "order_status": {
            "description": "One of `\"\"`, `\"Ordered\"`, `\"Administered during visit\"`, `\"Electronic eRx Sent\"`, `\"Phoned into Pharmacy\"`, `\"Faxed to Pharmacy\"`, `\"Paper Rx\"`, `\"Prescription Printed\"`, `\"Discontinued\"`, `\"Prescribed by other Dr\"` or `\"Over the Counter\"`. If omitted in writing, default to `\"\"`",
            "enum": [
              "",
              "Administered during visit",
              "Discontinued",
              "Electronic eRx Sent",
              "Faxed to Pharmacy",
              "Ordered",
              "Over the Counter",
              "Paper Rx",
              "Phoned into Pharmacy",
              "Prescribed by other Dr",
              "Prescription Printed"
            ],
            "title": "Order status",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "pharmacy_note": {
            "description": "",
            "title": "Pharmacy note",
            "type": "string"
          },
          "prn": {
            "description": "If `True`, the medication should be taken when necessary",
            "title": "Prn",
            "type": "boolean"
          },
          "route": {
            "description": "Route of administration",
            "title": "Route",
            "type": "string"
          },
          "rxnorm": {
            "description": "RxNorm code for the medication",
            "title": "Rxnorm",
            "type": "string"
          },
          "signature_note": {
            "description": "",
            "title": "Signature note",
            "type": "string"
          },
          "status": {
            "description": "If present, one of `\"active\"` or `\"inactive\"`. If omitted in writing, default to `\"active\"`",
            "enum": [
              "active",
              "inactive"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientFlagType": {
        "properties": {
          "archived": {
            "description": "Indicates the flag type is soft-deleted and should not be used",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "color": {
            "description": "",
            "title": "Color",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "Doctor who owns the flag type",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the patient flag type",
            "title": "Name",
            "type": "string"
          },
          "priority": {
            "description": "Priority of the flag type",
            "title": "Priority",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "name"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientIntervention": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "code": {
            "description": "Code from different code system",
            "title": "Code",
            "type": "string"
          },
          "code_system": {
            "description": "Can be `SNOMEDCT`, `HCPCS`, `CPT`, `ICD10CM`",
            "title": "Code system",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "effective_time": {
            "description": "",
            "title": "Effective time",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "Description of intervention",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "value_code": {
            "description": "Code from different code system represent intervention value",
            "title": "Value code",
            "type": "string"
          },
          "value_code_system": {
            "description": "Can be `SNOMEDCT`, `ICD10CM`, `LOINC`",
            "title": "Value code system",
            "type": "string"
          },
          "value_name": {
            "description": "Description of value",
            "readOnly": true,
            "title": "Value name",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientLabResultSet": {
        "properties": {
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "date_test_performed": {
            "description": "Date of lab test.",
            "title": "Date test performed",
            "type": "string"
          },
          "doctor_comments": {
            "description": "Comment from the doctor on lab result.",
            "title": "Comments",
            "type": "string"
          },
          "doctor_signoff": {
            "description": "Check this box when the doctor has reviewed the lab result and taken appropriate action.",
            "title": "Doctor signoff",
            "type": "boolean"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "lab_abnormal_flag": {
            "description": "HL7 codified abnormal flag for the result.",
            "enum": [
              "",
              "L",
              "H",
              "LL",
              "HH",
              "<",
              ">",
              "N",
              "A",
              "AA",
              "null",
              "U",
              "D",
              "B",
              "W",
              "S",
              "R",
              "I",
              "MS",
              "VS"
            ],
            "title": "Abnormal flag",
            "type": "string"
          },
          "lab_imported_from_ccr": {
            "description": "Imported CCR document that contains lab results.",
            "readOnly": true,
            "title": "Lab imported from ccr",
            "type": "string"
          },
          "lab_normal_range": {
            "description": "",
            "title": "Normal range",
            "type": "string"
          },
          "lab_normal_range_units": {
            "description": "",
            "title": "Normal range units",
            "type": "string"
          },
          "lab_order_status": {
            "description": "Status of the lab order.",
            "enum": [
              "",
              "Order Entered",
              "Discontinued",
              "In Progress",
              "Results Received",
              "Results Reviewed with Patient",
              "Paper Order"
            ],
            "title": "Status",
            "type": "string"
          },
          "lab_result_value": {
            "description": "",
            "title": "Result value",
            "type": "string"
          },
          "lab_result_value_as_float": {
            "description": "",
            "title": "Lab result value as float",
            "type": "number"
          },
          "lab_result_value_units": {
            "description": "",
            "title": "Result units",
            "type": "string"
          },
          "loinc_code": {
            "description": "",
            "title": "LOINC code",
            "type": "string"
          },
          "ordering_doctor": {
            "description": "",
            "title": "Ordering doctor",
            "type": "integer"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "scanned_in_result": {
            "description": "Scanned in PDF for this lab result (optional).",
            "readOnly": true,
            "title": "Scanned in result",
            "type": "string"
          },
          "title": {
            "description": "",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "ordering_doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientMessage": {
        "properties": {
          "attachments": {
            "description": "",
            "items": {
              "description": "",
              "properties": {
                "attachment": {
                  "description": "",
                  "title": "Attachment",
                  "type": "string"
                },
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "doctor": {
                  "description": "",
                  "title": "Doctor",
                  "type": "integer"
                },
                "updated_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Updated at",
                  "type": "string"
                }
              },
              "title": "PatientMessageAttachment",
              "type": "object"
            },
            "title": "Attachments",
            "type": "array"
          },
          "body": {
            "description": "",
            "title": "Body",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "message": {
            "description": "",
            "readOnly": true,
            "title": "Message",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "subject": {
            "description": "",
            "title": "Subject",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient",
          "subject"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientPhysicalExam": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "code": {
            "description": "Code from different code system",
            "title": "Code",
            "type": "string"
          },
          "code_system": {
            "description": "Can be `SNOMEDCT`, `LOINC`",
            "title": "Code system",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "effective_time": {
            "description": "",
            "title": "Effective time",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "Description of physical exam",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "value_code": {
            "description": "Code from different code system represent physical exam value",
            "title": "Value code",
            "type": "string"
          },
          "value_code_system": {
            "description": "Can be `SNOMEDCT`, `ICD10CM`, `LOINC`",
            "title": "Value code system",
            "type": "string"
          },
          "value_name": {
            "description": "Description of value",
            "readOnly": true,
            "title": "Value name",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientProblem": {
        "properties": {
          "appointment": {
            "description": "",
            "title": "Appointment",
            "type": "integer"
          },
          "date_changed": {
            "description": "",
            "title": "Date changed",
            "type": "string"
          },
          "date_diagnosis": {
            "description": "",
            "title": "Date diagnosis",
            "type": "string"
          },
          "date_onset": {
            "description": "",
            "title": "Date onset",
            "type": "string"
          },
          "description": {
            "description": "",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "icd_code": {
            "description": "ICD9 or ICD10 code for the problem",
            "title": "Icd code",
            "type": "string"
          },
          "icd_version": {
            "description": "Either `9` or `10`. If omitted in writing, default to 10.",
            "enum": [
              "9",
              "10"
            ],
            "title": "Icd version",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "info_url": {
            "description": "External URL with more information about the problem, intended for patient education",
            "readOnly": true,
            "title": "Info url",
            "type": "string"
          },
          "name": {
            "description": "Name of the problem",
            "title": "Name",
            "type": "string"
          },
          "notes": {
            "description": "Any additional notes by the provider",
            "title": "Notes",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "snomed_ct_code": {
            "description": "SnoMED code for the problem",
            "title": "SnoMED CT code",
            "type": "string"
          },
          "status": {
            "description": "Either `active`, `inactive` or `resolved`. If omitted in writing, default to `active`",
            "enum": [
              "active",
              "inactive",
              "resolved"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientRiskAssessment": {
        "properties": {
          "appointment": {
            "description": "",
            "readOnly": true,
            "title": "Appointment",
            "type": "string"
          },
          "code": {
            "description": "",
            "title": "Code",
            "type": "string"
          },
          "code_system": {
            "description": "",
            "title": "Code system",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "effective_time": {
            "description": "",
            "title": "Effective time",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "value_code": {
            "description": "",
            "title": "Value code",
            "type": "string"
          },
          "value_code_system": {
            "description": "",
            "title": "Value code system",
            "type": "string"
          },
          "value_name": {
            "description": "",
            "readOnly": true,
            "title": "Value name",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PatientVaccineRecord": {
        "properties": {
          "administered_at": {
            "description": "ID of `/api/offices` where the administration happened",
            "title": "Administered at",
            "type": "integer"
          },
          "administered_by": {
            "description": "ID of `/api/users` who performs the administration",
            "title": "Administered by",
            "type": "string"
          },
          "administration_start": {
            "description": "Datetime when the administration starts",
            "title": "Administration start",
            "type": "string"
          },
          "amount": {
            "description": "Amount of vaccine administered",
            "title": "Amount",
            "type": "number"
          },
          "comments": {
            "description": "",
            "title": "Comments",
            "type": "string"
          },
          "completion_status": {
            "description": "Vaccination status, can be `CP`(Complete), `RE`(Refused), `NA`(Not administered), `PA`(Partially administered)",
            "enum": [
              "CP",
              "RE",
              "NA",
              "PA"
            ],
            "title": "Vaccination Status",
            "type": "string"
          },
          "consent_form": {
            "description": "Consent form related with vaccine record",
            "title": "Consent form",
            "type": "integer"
          },
          "cpt_code": {
            "description": "Vaccine cpt code",
            "title": "Cpt code",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "cvx_code": {
            "description": "Vaccine cvx code",
            "title": "Cvx code",
            "type": "string"
          },
          "doses": {
            "description": "Vaccine dose IDs received in consent form signed hook",
            "items": {
              "description": "Vaccine dose ID",
              "properties": {
                "id": {
                  "description": "",
                  "readOnly": true,
                  "title": "ID",
                  "type": "integer"
                },
                "max_age_months": {
                  "description": "",
                  "title": "Max age months",
                  "type": "integer"
                },
                "min_age_months": {
                  "description": "",
                  "title": "Min age months",
                  "type": "integer"
                },
                "title": {
                  "description": "",
                  "title": "Title",
                  "type": "string"
                }
              },
              "title": "VaccineDose",
              "type": "object"
            },
            "title": "Doses",
            "type": "array"
          },
          "entered_by": {
            "description": "ID of user who created the record",
            "readOnly": true,
            "title": "Entered by",
            "type": "string"
          },
          "funding_eligibility": {
            "description": "The funding program that should pay for a given immunization",
            "enum": [
              "V01",
              "V02",
              "V03",
              "V04",
              "V05",
              "V07"
            ],
            "title": "Funding Eligibility",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "next_dose_date": {
            "description": "Date for next dose of vaccine",
            "title": "Date for next dose",
            "type": "string"
          },
          "observed_immunity": {
            "description": "",
            "enum": [
              "398102009",
              "409498004",
              "397428000",
              "18624000",
              "91428005",
              "271511000",
              "240532009",
              "6142004",
              "52947006",
              "14189004",
              "23511006",
              "36989005",
              "27836007",
              "16814004",
              "14168008",
              "36653000",
              "76902006",
              "66071002",
              "4834000",
              "111852003",
              "38907003",
              "40468003",
              "16541001"
            ],
            "title": "Observed Immunity",
            "type": "string"
          },
          "ordering_doctor": {
            "description": "",
            "title": "Ordering doctor",
            "type": "integer"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "record_source": {
            "description": "",
            "enum": [
              "00",
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08"
            ],
            "title": "Record Type",
            "type": "string"
          },
          "route": {
            "description": "",
            "title": "Route",
            "type": "string"
          },
          "site": {
            "description": "",
            "title": "Site",
            "type": "string"
          },
          "units": {
            "description": "",
            "title": "Units",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "vaccine_inventory": {
            "description": "ID of `/api/vaccine_inventories` the vaccine is from",
            "title": "Vaccine inventory",
            "type": "integer"
          },
          "vis": {
            "description": "Related vaccine information statement",
            "readOnly": true,
            "title": "Vis",
            "type": "string"
          }
        },
        "required": [
          "patient",
          "cvx_code",
          "name"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PhoneCallLog": {
        "properties": {
          "appointment": {
            "description": "Appointment related with the phone call log",
            "title": "Appointment",
            "type": "integer"
          },
          "archived": {
            "description": "If this phone call log is archived or not",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "author": {
            "description": "Author of post.",
            "readOnly": true,
            "title": "Author",
            "type": "string"
          },
          "cash_charged": {
            "description": "Amount of cash needs to be charged",
            "title": "Cash charged",
            "type": "number"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "duration": {
            "description": "Duration of the phone call",
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "message": {
            "description": "Additional message for the phone call",
            "title": "Message",
            "type": "string"
          },
          "patient": {
            "description": "",
            "title": "Patient",
            "type": "integer"
          },
          "scheduled_time": {
            "description": "Date of phone call, if `appointment` is set, this field will be set as the `scheduled_time` of that appointment",
            "title": "Scheduled time",
            "type": "string"
          },
          "title": {
            "description": "Title of this log",
            "title": "Title",
            "type": "string"
          },
          "type": {
            "description": "Type of phone call log",
            "title": "Type",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "patient",
          "doctor"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "PrescriptionMessage": {
        "properties": {
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "json_data": {
            "description": "Data sent along with `NewRx`, `RefillRequest`, and `RefillResponses` messages. The format varies, but most likely it will contain `BenefitsCoordination` section with insurance info and `MedicationPrescribed` with medication info. `Patient`, `Pharmacy`, and `Prescriber` are also usually present.",
            "readOnly": true,
            "title": "Json data",
            "type": "string"
          },
          "message_direction": {
            "description": "Possible values are `Outgoing` and `Incoming`.",
            "enum": [
              "I",
              "O"
            ],
            "readOnly": true,
            "title": "Message direction",
            "type": "string"
          },
          "message_status": {
            "description": "Message status for Incoming and Outgoing values. Success message for message_type are: `NewRx` : `Sent`, `RefillRequest` : `Received`, `RefillResponse` : `Sent`.",
            "readOnly": true,
            "title": "Message status",
            "type": "string"
          },
          "message_type": {
            "description": "Possible values are `NewRx` for outgoing new prescriptions, `RefillRequest` for incoming refill requests, `RefillResponse` for outgoing refill responses, `Error` for incoming errors, `Status` and `Verify` for incoming status reports from Surescripts.",
            "title": "Message type",
            "type": "string"
          },
          "parent_message": {
            "description": "Refers to the parent message, used for refill responses and incoming error/status reports.",
            "readOnly": true,
            "title": "Parent message",
            "type": "string"
          },
          "patient": {
            "description": "An optional field which refers to a patient.",
            "title": "Patient",
            "type": "integer"
          },
          "pharmacy": {
            "description": "NCPDPID allocated #ID of the Pharmacy",
            "title": "Pharmacy",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "Procedure": {
        "properties": {
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "appointment": {
            "description": "Appointment ID",
            "title": "Appointment",
            "type": "integer"
          },
          "doctor": {
            "description": "Doctor ID",
            "readOnly": true,
            "title": "Doctor",
            "type": "integer"
          },
          "patient": {
            "description": "Patient ID",
            "readOnly": true,
            "title": "Patient",
            "type": "integer"
          },
          "code": {
            "description": "",
            "title": "Code",
            "type": "string"
          },
          "procedure_type": {
            "description": "One of `\"CPT(C)\"`, `\"HCPCS(H)\"`, `\"Custom(U)\"`",
            "enum": [
              "C",
              "H",
              "U",
              "S"
            ],
            "title": "Procedure type",
            "type": "string"
          },
          "description": {
            "description": "",
            "readOnly": true,
            "title": "Description",
            "type": "string"
          },
          "status": {
            "description": "",
            "readOnly": true,
            "title": "Status",
            "type": "string"
          },
          "date": {
            "description": "Date of service for the procedure",
            "readOnly": true,
            "title": "Date",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        }
      },
      "ReminderProfile": {
        "properties": {
          "doctor": {
            "description": "Doctor who created the profile. Other doctors in the practice group may have access to their profiles",
            "title": "Doctor",
            "type": "integer"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "reminders": {
            "description": "Reminders set in the profile",
            "items": {
              "description": "Array of reminders",
              "properties": {
                "amount": {
                  "description": "",
                  "title": "Amount",
                  "type": "integer"
                },
                "type": {
                  "description": "One of `\"email\"`, `\"sms\"` or `\"auto_call\"`",
                  "enum": [
                    "email",
                    "sms",
                    "phone",
                    "auto_call"
                  ],
                  "title": "Type",
                  "type": "string"
                },
                "unit": {
                  "description": "One of `\"email\"`, `\"sms\"` or `\"auto_call\"`",
                  "enum": [
                    "minutes",
                    "hours",
                    "days",
                    "weeks"
                  ],
                  "title": "Unit",
                  "type": "string"
                }
              },
              "title": "ReminderTemplate",
              "type": "object"
            },
            "title": "Reminders",
            "type": "array"
          }
        },
        "required": [
          "doctor",
          "reminders"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "ScannedClinicalDocument": {
        "properties": {
          "archived": {
            "description": "`DELETE` operation will set this field to `true`",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "date": {
            "description": "",
            "title": "Date",
            "type": "string"
          },
          "description": {
            "description": "",
            "title": "Description",
            "type": "string"
          },
          "doctor": {
            "description": "ID of the doctor who owns the document",
            "title": "Doctor",
            "type": "integer"
          },
          "document": {
            "description": "When creating, if you receive response as 201, but this field is `null`, please send a `GET` request with the created object's ID to retrieve the updated file URL",
            "title": "Document",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "metatags": {
            "description": "Array of tags represented as string. This should be quoted--e.g. `'[\"a\", \"b\"]'`--since this endpoint requires `multipart/form-data` encoding",
            "title": "Metatags",
            "type": "string"
          },
          "patient": {
            "description": "ID of the patient the document concerns",
            "title": "Patient",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "description",
          "date",
          "document",
          "patient"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "SoapNoteCustomReport": {
        "properties": {
          "archived": {
            "description": "Indicates that the doctor has soft-deleted this template, and will not use it for future appointments",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "clinical_note_fields": {
            "description": "clinical note fields",
            "items": {
              "description": "Array of field objects",
              "properties": {
                "allowed_values": {
                  "description": "",
                  "items": {
                    "description": "",
                    "title": "",
                    "type": "string"
                  },
                  "title": "Allowed Values",
                  "type": "array"
                },
                "archived": {
                  "description": "Indicates that the field has been soft-deleted by the doctor",
                  "title": "Archived",
                  "type": "boolean"
                },
                "clinical_note_template": {
                  "description": "",
                  "title": "Clinical Note Template",
                  "type": "integer"
                },
                "data_type": {
                  "description": "One of `\"\"`, `\"Checkbox\"`, `\"NullCheckbox\"`, `\"String\"`, `\"TwoStrings\"`, `\"FreeDraw\"`, `\"Photo\"`, `\"Header\"`, `\"Subheader\"`",
                  "title": "Data Type",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "title": "Name",
                  "type": "string"
                },
                "required": {
                  "description": "Indicates that a note should not be locked unless a value is provided for this field",
                  "title": "Required",
                  "type": "boolean"
                }
              },
              "title": "Clinical Note Field",
              "type": "object"
            },
            "title": "Clinical Note Fields",
            "type": "array"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "is_onpatient": {
            "description": "",
            "title": "Is onpatient",
            "type": "boolean"
          },
          "is_persistent": {
            "description": "If this is true, this report will be the same across all notes",
            "title": "Is persistent",
            "type": "boolean"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "order": {
            "description": "Order of templates",
            "properties": {
              "on_complete_note": {
                "description": "Order of the template on complete notes",
                "title": "On complete note",
                "type": "integer"
              },
              "on_ipad": {
                "description": "Order of the template on iPad",
                "title": "On ipad",
                "type": "integer"
              }
            },
            "title": "SoapNoteCustomReport",
            "type": "object"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": [
          "clinical_note_fields"
        ]
      },
      "SoapNoteLineItemFieldType": {
        "properties": {
          "allowed_values": {
            "description": "Value options the field type relies on if applicable, otherwise it will be an empty array",
            "items": {
              "description": "Value option",
              "title": "",
              "type": "string"
            },
            "title": "Allowed values",
            "type": "array"
          },
          "archived": {
            "description": "Indicates that the field has been soft-deleted by the doctor and will not be used in future notes",
            "title": "Archived",
            "type": "boolean"
          },
          "clinical_note_template": {
            "description": "ID of the `/api/clinical_note_templates` object that the field belongs to",
            "readOnly": true,
            "title": "Clinical note template",
            "type": "string"
          },
          "comment": {
            "description": "Comment",
            "title": "Comment",
            "type": "string"
          },
          "data_type": {
            "description": "One of `\"\"`, `\"Checkbox\"`, `\"NullCheckbox\"`, `\"String\"`, `\"TwoStrings\"`, `\"FreeDraw\"`, `\"Photo\"`, `\"Header\"`, `\"Subheader\"`",
            "title": "Data type",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "required": {
            "description": "Indicates that a note should not be locked unless a value is provided for this field",
            "title": "Required",
            "type": "boolean"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "SoapNoteLineItemFieldValue": {
        "description": "Values entered by doctor when charting a particular appointment",
        "properties": {
          "appointment": {
            "description": "ID of appointment that the value applies to",
            "title": "Appointment",
            "type": "integer"
          },
          "clinical_note_field": {
            "description": "ID of `/api/clinical_note_field_types` object that indicates type of the value",
            "title": "Clinical note field",
            "type": "integer"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "value": {
            "description": "Value of the field. Interpretation varies by field type.\n`clinical_note_field.data_type` | Value | Description\n------------------------------- | ----- | -----------\n`\"Header\"` | string | \n`\"SubHeader\"` | string |\n`\"String\"` | string | If field is single/multiple select field, make sure value presents in allowed values set.\n`\"TwoStrings\"` | string | String is seperated by `\"/\"`\n`\"NullCheckbox\"` | string | Can be `\"0\"`, `\"1\"`, `\"2\"`, `\"0\"`-`Not selected`, `\"1\"`-`No`, `\"2\"`-`Yes`\n`\"Checkbox\"` | string | Can be `\"True\"`, `\"False\"`\n",
            "title": "Value",
            "type": "string"
          }
        },
        "required": [
          "appointment",
          "clinical_note_field",
          "value"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "Staff": {
        "properties": {
          "active": {
            "description": "",
            "readOnly": true,
            "title": "Active",
            "type": "string"
          },
          "cell_phone": {
            "description": "",
            "readOnly": true,
            "title": "Cell phone",
            "type": "string"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "doctor": {
            "description": "",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "email": {
            "description": "An account registration email will be sent to this address.",
            "readOnly": true,
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "description": "",
            "readOnly": true,
            "title": "First name",
            "type": "string"
          },
          "home_phone": {
            "description": "",
            "readOnly": true,
            "title": "Home phone",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "last_name": {
            "description": "",
            "readOnly": true,
            "title": "Last name",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          },
          "user_id": {
            "description": "",
            "readOnly": true,
            "title": "User id",
            "type": "string"
          },
          "username": {
            "description": "",
            "readOnly": true,
            "title": "Username",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "Task": {
        "properties": {
          "archived": {
            "description": "",
            "title": "Archived",
            "type": "boolean"
          },
          "assigned_by": {
            "description": "ID of `/api/users/` who assigned the task",
            "readOnly": true,
            "title": "Assigned by",
            "type": "string"
          },
          "assignee_group": {
            "description": "Either `assignee_user` or `assignee_group` should be set",
            "title": "Assignee group",
            "type": "integer"
          },
          "assignee_user": {
            "description": "Either `assignee_user` or `assignee_group` should be set",
            "title": "Assignee user",
            "type": "string"
          },
          "associated_items": {
            "description": "Associated task items",
            "items": {
              "description": "",
              "properties": {
                "task": {
                  "description": "",
                  "title": "Task",
                  "type": "integer"
                },
                "type": {
                  "description": "Can be one of `\"Appointment\"`, `\"Patient\"`, `\"Message\"`, `\"Document\"`, `\"Lab order\"`",
                  "enum": [
                    "Document",
                    "Message",
                    "Lab result",
                    "Lab order",
                    "Patient",
                    "Appointment",
                    "Lab document",
                    "Communication"
                  ],
                  "title": "Type",
                  "type": "string"
                },
                "value": {
                  "description": "ID of the specified type object",
                  "title": "Value",
                  "type": "integer"
                }
              },
              "title": "AssociatedTaskItem",
              "type": "object"
            },
            "title": "Associated items",
            "type": "array"
          },
          "category": {
            "description": "",
            "title": "Category",
            "type": "integer"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "created_by": {
            "description": "ID of `/api/users` who created the task",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "due_date": {
            "description": "When the task is due",
            "properties": {
              "time": {
                "description": "Due date time",
                "title": "Time",
                "type": "string"
              }
            },
            "title": "TaskReminder",
            "type": "object"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "notes": {
            "description": "Additional notes of the task",
            "items": {
              "description": "Task note object",
              "properties": {
                "archived": {
                  "description": "",
                  "title": "Archived",
                  "type": "boolean"
                },
                "created_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created at",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "readOnly": true,
                  "title": "Created by",
                  "type": "string"
                },
                "id": {
                  "description": "",
                  "readOnly": true,
                  "title": "ID",
                  "type": "integer"
                },
                "task": {
                  "description": "ID of `/api/tasks`",
                  "title": "Task",
                  "type": "integer"
                },
                "text": {
                  "description": "",
                  "title": "Text",
                  "type": "string"
                },
                "updated_at": {
                  "description": "",
                  "readOnly": true,
                  "title": "Updated at",
                  "type": "string"
                }
              },
              "title": "TaskNote",
              "type": "object"
            },
            "title": "Notes",
            "type": "array"
          },
          "priority": {
            "description": "Can be one of the following 10(Low), 20(Medium), 30(High), 40(Urgent)",
            "enum": [
              "10",
              "20",
              "30",
              "40"
            ],
            "title": "Priority",
            "type": "string"
          },
          "status": {
            "description": "",
            "title": "Status",
            "type": "integer"
          },
          "title": {
            "description": "",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "title",
          "status"
        ],
        "type": "object",
        "x-verbose-required": [
          "notes",
          "associated_items"
        ]
      },
      "TaskCategory": {
        "properties": {
          "archived": {
            "description": "",
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "is_global": {
            "description": "Indicates that the category is a system wide (pre-defined) category",
            "readOnly": true,
            "title": "Is global",
            "type": "string"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "practice_group": {
            "description": "",
            "title": "Practice group",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "name",
          "practice_group"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "TaskNote": {
        "properties": {
          "archived": {
            "description": "If the task note is archived or not",
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "created_by": {
            "description": "ID of the `/api/users` who created the note",
            "readOnly": true,
            "title": "Created by",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "task": {
            "description": "ID of task this note is related with",
            "title": "Task",
            "type": "integer"
          },
          "text": {
            "description": "Content of the task note",
            "title": "Text",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "task",
          "text"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "TaskStatus": {
        "properties": {
          "archived": {
            "description": "",
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "practice_group": {
            "description": "",
            "title": "Practice group",
            "type": "integer"
          },
          "status_category": {
            "description": "Can be one of the following `O`(open), `P`(In progress), `H`(On hold), `C`(Complete), default to `O`(Open)",
            "enum": [
              "O",
              "P",
              "H",
              "C"
            ],
            "title": "Status category",
            "type": "string"
          },
          "task_category": {
            "description": "ID of `/api/task_categories`",
            "title": "Task category",
            "type": "integer"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "name",
          "practice_group"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "TaskTemplate": {
        "properties": {
          "archived": {
            "description": "",
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "default_assignee_group": {
            "description": "",
            "title": "Default assignee group",
            "type": "integer"
          },
          "default_assignee_user": {
            "description": "",
            "title": "Default assignee user",
            "type": "string"
          },
          "default_category": {
            "description": "",
            "title": "Default category",
            "type": "integer"
          },
          "default_due_date_offset": {
            "description": "Offset due date, format should follow `\"[DD] [HH:[MM:]]ss[.uuuuuu]\"`",
            "title": "Default due date offset",
            "type": "string"
          },
          "default_note": {
            "description": "",
            "title": "Default note",
            "type": "string"
          },
          "default_priority": {
            "description": "Can be one of the following 10(Low), 20(Medium), 30(High), 40(Urgent)",
            "enum": [
              "10",
              "20",
              "30",
              "40"
            ],
            "title": "Default priority",
            "type": "string"
          },
          "default_status": {
            "description": "",
            "title": "Default status",
            "type": "integer"
          },
          "default_title": {
            "description": "",
            "title": "Default title",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "name": {
            "description": "",
            "title": "Name",
            "type": "string"
          },
          "practice_group": {
            "description": "",
            "readOnly": true,
            "title": "Practice group",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "TelemedicineAppointment": {
        "description": "The Telehealth Appointment endpoint is an extension of the existing Appointment endpoint.",
        "properties": {
          "appointment": {
            "description": "The Appointment related to the Telehealth Appointment, analagous to the /api/appointments resource id",
            "title": "Appointment",
            "type": "integer"
          },
          "created_at": {
            "description": "UTC Timestamp for when the Telehealth Appointment was created",
            "readOnly": true,
            "title": "Created at",
            "type": "string"
          },
          "duration": {
            "description": "Length of an appointment in minutes",
            "readOnly": true,
            "title": "Duration",
            "type": "integer"
          },
          "overlapping_duration": {
            "description": "The duration that counts only if patient and doctor are in the video room",
            "title": "Overlapping duration",
            "type": "string"
          },
          "sent_patient_email": {
            "description": "Whether a confirmation email was sent to the Patient or not"
          },
          "telehealth_url": {
            "description": "URL used to access Telehealth Appointment",
            "readOnly": true,
            "title": "Telehealth url",
            "type": "string"
          },
          "updated_at": {
            "description": "UTC Timestamp for when the Telehealth Appointment was updated",
            "readOnly": true,
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [
          "appointment"
        ],
        "type": "object",
        "x-verbose-required": []
      },
      "TelemedicineAppointmentEventLog": {
        "properties": {
          "description": {
            "description": "",
            "readOnly": true,
            "title": "Description",
            "type": "string"
          },
          "event_type": {
            "description": "",
            "readOnly": true,
            "title": "Event type",
            "type": "string"
          },
          "timestamp": {
            "description": "",
            "readOnly": true,
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "UserProfile": {
        "properties": {
          "doctor": {
            "description": "For staff members, this is their primary physician's ID. For doctors, it is their own ID.",
            "readOnly": true,
            "title": "Doctor",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "Id",
            "type": "string"
          },
          "is_doctor": {
            "description": "Mutually exclusive with `is_staff`",
            "readOnly": true,
            "title": "Is doctor",
            "type": "string"
          },
          "is_staff": {
            "description": "Mutually exclusive with `is_doctor`",
            "readOnly": true,
            "title": "Is staff",
            "type": "string"
          },
          "permissions": {
            "description": "Permissions the user has.",
            "readOnly": true,
            "title": "Permissions",
            "type": "string"
          },
          "practice_group": {
            "description": "The ID of the practice group this user belongs to. This can be used to identify users in the same practice.",
            "readOnly": true,
            "title": "Practice group",
            "type": "string"
          },
          "username": {
            "description": "",
            "title": "Username",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      },
      "UserProfilesGroup": {
        "properties": {
          "archived": {
            "description": "Group is archived or not",
            "readOnly": true,
            "title": "Archived",
            "type": "boolean"
          },
          "created_at": {
            "description": "",
            "title": "Created at",
            "type": "string"
          },
          "id": {
            "description": "",
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "members": {
            "description": "Users in this user group.",
            "items": {
              "description": "ID of `/api/users`",
              "title": "",
              "type": "string"
            },
            "readOnly": true,
            "title": "Members",
            "type": "array"
          },
          "name": {
            "description": "",
            "readOnly": true,
            "title": "Name",
            "type": "string"
          },
          "practice_group": {
            "description": "Practice group this user group belongs to",
            "readOnly": true,
            "title": "Practice group",
            "type": "string"
          },
          "updated_at": {
            "description": "",
            "title": "Updated at",
            "type": "string"
          }
        },
        "required": [],
        "type": "object",
        "x-verbose-required": []
      }
    },
    "securitySchemes": {
      "drchrono_oauth2": {
        "description": "",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://drchrono.com/o/authorize/",
            "scopes": {
              "billing:patient-payment:read": "View patient payment information",
              "billing:patient-payment:write": "Modify patient payment information",
              "billing:read": "View billing information.",
              "billing:write": "Modify billing information.",
              "calendar:read": "View your appointments.",
              "calendar:write": "Schedule appointments and modify the data associated with them.",
              "clinical:read": "View clinical information, such as vitals, clinical notes, medications and diagnoses.",
              "clinical:write": "Create and modify clinical information, such as vitals, clinical notes, medications and diagnoses.",
              "labs:read": "View patient lab orders and results.",
              "labs:write": "Create and modify patient lab orders and results.",
              "messages:read": "View messages in your message center.",
              "messages:write": "Create and modify messages in your message center.",
              "patients:read": "View detailed patient information.",
              "patients:summary:read": "View summary information about your patients. This includes patients' name, chart_id, age, and gender.",
              "patients:summary:write": "Create new patients and set their name, chart_id, age, and gender.",
              "patients:write": "Create patients and modify detailed patient information.",
              "settings:read": "View resources that requires Settings permission, such as custom fields.",
              "settings:write": "Create resources that requires Settings permission, such as custom fields.",
              "tasks:read": "View tasks in your tasks center",
              "tasks:write": "Create and modify tasks in your tasks center",
              "user:read": "View your basic information.",
              "user:write": "Edit select account information, such as creating new exam rooms."
            },
            "tokenUrl": "https://drchrono.com/o/token/"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "description": "\n\n# API Development Terms and Conditions\n\n\nThese API Development Terms and Conditions (these \"**Terms**\") constitute a binding legal agreement between you (either an individual or an entity, \"**you**\" or \"**Development User**\") and DrChrono, Inc. (\"**DrChrono**,\" \"**we**,\" or \"**us**\") regarding your access to: (a) the DrChrono database via drchrono's standard application programming interface(s) and related information and documentation (the \"**API**,\" and the provision of such access by DrChrono, the \"**Services**\"); and (b) any software development kits and information or documentation related to the Services made available by DrChrono (the \"**Development Software**\").\n\n\n\nPlease read these Terms carefully. **By clicking \"I Accept\" or otherwise using the Services or Development Software, you agree to be bound by these Terms and to use the Services and Development Software in compliance with these Terms. If you are registering for access to, or otherwise accessing or using, the Services and Development Software on behalf of a company or other legal entity, then you and such company or entity represent and warrant that: (i) you have the right and legal authority to bind such company or entity to these Terms; (ii) such company or entity is fully aware of, understands, and agrees to be bound by these Terms (with the terms \"Development User\" and \"you\" as used herein referring also to such company or entity), and (iii) you agree to be bound by these Terms on behalf of such company or entity. If you do not qualify to use the Services or Development Software, or do not agree to these Terms, then you should not and may not register for, access, or use the Services or Development Software.**\n\n\n\nTHE SERVICES AND DEVELOPMENT SOFTWARE MUST BE USED ONLY BY THE DEVELOPMENT USER IN A NON-PRODUCTION ENVIRONMENT, FOR THE PURPOSE OF INTERNAL EVALUATION AND DEVELOPMENT USE ONLY AND SOLELY IN ACCORDANCE WITH ALL LIMITATIONS SET FORTH IN THESE TERMS OR ON THE SIGN-UP PAGE, OR OTHERWISE COMMUNICATED TO DEVELOPMENT USER BY DRCHRONO (\"**DEVELOPMENT PURPOSES**\"). DEVELOPMENT USER SHALL NOT TRANSMIT, UPLOAD, INPUT OR OTHERWISE DISCLOSE TO DRCHRONO THROUGH THE SERVICES OR DEVELOPMENT SOFTWARE MADE AVAILABLE IN CONNECTION WITH THIS AGREEMENT ANY DATA CONCERNING ACTUAL PERSONS, INCLUDING WITHOUT LIMITATION ANY PERSONALLY IDENTIFIABLE INFORMATION, PROTECTED HEALTH INFORMATION, HEALTH DATA OR OTHER DATA SUBJECT TO HIPAA.\n\n\n\nIf you wish to purchase a production use license to the Services or to transmit personally identifiable information, protected health information, health data, or other data subject to HIPAA through the API or Service, please contact DrChrono at [api@drchrono.com](mailto:api@drchrono.com).\n\n\n\n1.  **Access to the Services and Development Software**\n\nSubject to Development User's compliance with these Terms: (i) DrChrono hereby agrees that Development User has the right to access and use the Services during the Term (as defined below) for Development Purposes only, and only in accordance with drchrono's applicable user documentation and written instructions; and (ii) DrChrono hereby grants Development User, during the Term, a limited, non-sublicensable, non-transferable, non-exclusive license to use the Development Software solely for the purposes of (a) allowing Development User to use the Services and Development Software in connection with one or more Development User-controlled software applications, products, websites, or online services that communicate with the Services (\"Development User Applications\") and (b) using such Development User Applications to send queries to DrChrono using the API and retrieve data (\"Sample Data\") through the API, in each case (a) and (b) solely for Development Purposes, not for any commercial or production use and subject to the limitations imposed by access to the API in \"Restricted Mode.\"\n\n\n\n2.  **Changes to Development Software**\n\nDrChrono shall have no obligation under these Terms or otherwise to provide the Services or Development Software. Development User understands that DrChrono may change, suspend, or discontinue any aspect of the API or Services, or may impose limits on Development User's usage of, or disable certain features or restrict access to parts or all of, the API or the Services, at any time without notice or liability. If DrChrono provides Development User with any upgrades, patches, enhancements, fixes or modifications to the Development Software, then the same will become part of the applicable part(s) of the Development Software, and subject to these Terms.\n\n\n\n3.  **Ownership; Feedback**\n\n    1.  <u>Ownership</u>. As between the parties, DrChrono retains all of its right, title, and interest in and to the Services, the results of the Services (including, without limitation, Sample Data), the Development Software, and all software, products, works, and other intellectual property and moral rights related thereto or created, used, or provided by DrChrono for the purposes of these Terms, including any copies and derivative works of the foregoing. No rights or licenses are granted to Development User by DrChrono except as expressly and unambiguously set forth in these Terms.\n    2.  <u>Feedback</u>. Development User may from time to time provide suggestions, comments or other feedback to DrChrono with respect to the Development Software, Sample Data and/or the Services (collectively, \"**Feedback**\"). Notwithstanding anything to the contrary, Feedback, even if designated as confidential by Development User, shall not create any confidentiality obligation for drchrono. Development User shall, and hereby does, grant to DrChrono a nonexclusive, worldwide, perpetual, irrevocable, transferable, sublicensable, royalty-free, fully paid up license to use and exploit the Feedback for any purpose. For purposes of clarity, nothing in these Terms will be interpreted to restrict or impair drchrono's right to develop, acquire, license, market, promote or distribute products, software or technologies that perform the same or similar functions as the Development User Applications, or otherwise compete with any products, software or technologies that Development User may develop, produce, market, or distribute.\n\n\n\n4.  **Restrictions**\n\n    1.  <u>Generally</u>. Except as expressly set forth in these Terms, Development User shall not (and shall not permit any third party to), directly or indirectly: (i) reverse engineer, decompile, disassemble, or otherwise attempt to discover the source code, object code, or underlying structure, ideas, or algorithms of the Services, or Development Software (except to the limited extent applicable laws specifically prohibit such restriction); (ii) modify, translate, or create derivative works based on the Services or Development Software; (iii) copy, rent, lease, distribute, pledge, assign, or otherwise transfer or encumber rights to the Services or Development Software; (iv) use the Services or Development Software for any purpose other than Development Purposes; (v) remove or otherwise alter any proprietary notices or labels from the Services or Development Software, or any portion thereof; (vi) modify or extend the Services or Development Software to any extent; (vii) separately use any portion of any Services or Development Software apart from Development User's use of such Services or Development Software as a whole as part of the Development User Application for Development Purposes; (viii) contaminate, incorporate, integrate, link or bundle any portion of the Services or Development Software with any software code governed by open source, community source, freeware, shareware, or other public license or distribution model software; (ix) use the Services or Development Software to build an application or product that is competitive with any DrChrono product or service; (x) interfere or attempt to interfere with the proper working of the Services or any activities conducted on the Services; or (xi) bypass any measures DrChrono may use to prevent or restrict access to the Services (or other accounts, computer systems or networks connected to the Services). Development User shall not (and shall not permit any third party to), directly or indirectly, take any action or (including without limitation uploading, downloading, posting, submitting or otherwise distributing or facilitating distribution of any material on or through the Services), that: (a) infringes any patent, trademark, trade secret, copyright, right of publicity or other right of any other person or entity; (b) is unlawful, threatening, abusive, harassing, defamatory, libelous, deceptive, fraudulent, invasive of another's privacy, tortious, obscene, offensive, or profane; (c) constitutes unauthorized or unsolicited advertising, junk or bulk e-mail (\"**spamming**\"); (d) contains software viruses or any other computer codes, files, or programs that are designed or intended to, or otherwise disrupt, damage, limit or interfere with the proper function of any software, hardware, or telecommunications equipment or to damage or obtain unauthorized access to any system, data, password or other information of DrChrono or any third party (except where such upload, post or submission is made for the purpose of using the Services to generate Sample Data from such uploaded, posted or submitted material); or (e) impersonates any person or entity, including any employee or representative of drchrono.\n    2.  <u>Compliance with Laws</u>. Development User is responsible for all activity it undertakes in connection with the Services. Development User will use the Services in compliance with all applicable local, state, national and foreign laws, treaties and regulations.\n    3.  <u>Received Data</u>. Development User will not (i) input into the Services or Development Software any data concerning actual persons (including protected health information and personally identifiable information), (ii) use any Sample Data, data or other information received from DrChrono or the Services, including any derivatives and any aggregated or modified versions of such Sample Data, data or other information, (collectively, the \"**Received Data**\") for any purpose other than Development Purposes, or (iii) disclose any Received Data to any third party without the express written permission of drchrono.\n\n\n\n5.  **Term; Termination**\n    1.  <u>Term</u>. These Terms, and the permissions granted to Development User in Section 1, shall continue until terminated in accordance with Section 5.2 (the \"**Term**\").\n    2.  <u>Termination</u>. DrChrono may immediately terminate these Terms, in whole or in part, for any reason or no reason. Development User may terminate these Terms at any time by: (a) deleting its account; (b) destroying all copies of the Development Software in Development User's possession or control; and (c) ceasing all use of the Services.\n    3.  <u>Effect of Termination</u>. Upon termination or expiration of these Terms, all rights and licenses granted to Development User hereunder shall immediately cease and Development User shall immediately remove all copies of the Development Software on computer systems under its control. The following sections shall survive any expiration or termination of these Terms: Sections 3, 4, 5.3, 6, 7, 8, 9, 10 and 11.\n\n\n\n6.  **Indemnification**\n\nDevelopment User shall defend, indemnify, and hold harmless DrChrono, its affiliates and each of its and its affiliates' shareholders, officers, directors, employees, contractors, agents, partners, suppliers, representatives, licensors and content providers (collectively, the \"**DrChrono Indemnitees\")** from all liabilities, claims, and expenses (including reasonable attorneys' fees and costs), that arise from or relate to (i) the Development User Applications, information submitted by Development User to the API, or Development User's use or misuse of, or access to, the Services, Development Software, or Sample Data (including, without limitation, Development User's submission of data that is subject to HIPAA in violation of these Terms), (ii) a breach or alleged breach of these Terms by Development User, or (iii) alleged infringement by Development User or the Development User Applications of any intellectual property or other right of any person or entity. DrChrono reserves the right to assume the exclusive defense and control of any matter otherwise subject to indemnification by Development User, in which event Development User shall assist and cooperate with DrChrono in asserting any available defenses.\n\n\n\n7.  **Disclaimer of Warranties**\n\nTO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, THE SERVICES (INCLUDING, WITHOUT LIMITATION, ANY CONTENT), THE SAMPLE DATA AND THE DEVELOPMENT SOFTWARE ARE PROVIDED \"AS IS\" AND \"AS AVAILABLE\" AND ARE WITHOUT REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, STATUTORY OR OTHERWISE INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, TITLE AND FITNESS FOR A PARTICULAR PURPOSE, ANY WARRANTIES IMPLIED BY ANY COURSE OF PERFORMANCE, USAGE OF TRADE, OR COURSE OF DEALING, AND ANY WARRANTY OF CONTINUOUS, UNINTERRUPTED OR ERROR-FREE OPERATION ALL OF WHICH ARE EXPRESSLY DISCLAIMED. TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, DRCHRONO AND ITS AFFILIATES, SHAREHOLDERS, OFFICERS, DIRECTORS, EMPLOYEES, CONTRACTORS, AGENTS, PARTNERS, SUPPLIERS, REPRESENTATIVES, LICENSORS AND CONTENT PROVIDERS DO NOT WARRANT THAT: (A) THE SERVICES, SAMPLE DATA AND DEVELOPMENT SOFTWARE WILL BE SECURE OR AVAILABLE AT ANY PARTICULAR TIME OR LOCATION; (B) ANY DEFECTS OR ERRORS WILL BE CORRECTED; (C) ANY CONTENT OR SOFTWARE AVAILABLE THROUGH THE SERVICES, THE SAMPLE DATA OR THE DEVELOPMENT SOFTWARE IS FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS; OR (D) THE RESULTS OF USING THE SERVICES, THE SAMPLE DATA OR THE DEVELOPMENT SOFTWARE WILL BE ACCURATE, WILL BE FREE OF MALWARE, AND/OR MEET DEVELOPMENT USER'S REQUIREMENTS. TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, ANY USE OF THE SERVICES, THE SAMPLE DATA AND THE DEVELOPMENT SOFTWARE IS SOLELY AT DEVELOPMENT USER'S OWN RISK. NOTWITHSTANDING THE FORGOING DRCHRONO DOES NOT DISCLAIM ANY WARRANTY OR OTHER RIGHT THAT DRCHRONO IS PROHIBITED FROM DISCLAIMING UNDER APPLICABLE LAW.\n\n\n\n8.  **Limitation of Liability**\n\nTO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL DRCHRONO OR ITS AFFILIATES, SHAREHOLDERS, OFFICERS, DIRECTORS, EMPLOYEES, CONTRACTORS, AGENTS, PARTNERS, SUPPLIERS, REPRESENTATIVE, LICENSORS OR CONTENT PROVIDERS, BE LIABLE UNDER CONTRACT, TORT, STRICT LIABILITY, NEGLIGENCE OR ANY OTHER LEGAL OR EQUITABLE THEORY WITH RESPECT TO THE SUBJECT MATTER OF THESE TERMS (I) FOR ANY LOSS OF PROFITS, COST SAVINGS, DATA, REVENUE OR MACHINE USE, LOSSES CAUSED BY MALWARE, INTERRUPTION OF USE, LOSS OR CORRUPTION OF DATA, FAILURE TO PROVIDE SERVICES OR INFORMATION, INTERRUPTION OF USE, LOSS OR CORRUPTION OR INACCURACY OF DATA, COST OF PROCUREMENT OF SUBSTITUTE GOODS, RIGHTS OR SERVICES, OR SPECIAL, INDIRECT, INCIDENTAL, RELIANCE, PUNITIVE, OR CONSEQUENTIAL DAMAGES OF ANY KIND WHATSOEVER, HOWEVER ARISING, (II) FOR ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE (REGARDLESS OF THE SOURCE OF ORIGINATION), OR (III) FOR ANY DAMAGES IN EXCESS OF (IN THE AGGREGATE) ONE HUNDRED DOLLARS ($100), IN EACH CASE (I) THROUGH (III) EVEN IF DRCHRONO HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL DRCHRONO ASSUME LIABILITY FOR DAMAGES, DELAYS OR ANY OTHER ERRORS MADE OR CAUSED BY THIRD PARTIES EVEN IF SUCH THIRD PARTY IS A VENDOR RECOMMENDED BY DRCHRONO. SOME STATES DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THE ABOVE LIMITATIONS AND EXCLUSIONS MAY NOT APPLY. EACH PROVISION OF THESE TERMS THAT PROVIDES FOR A LIMITATION OF LIABILITY, DISCLAIMER OF WARRANTIES, OR EXCLUSION OF DAMAGES IS INTENDED TO AND DOES ALLOCATE THE RISKS BETWEEN THE PARTIES UNDER THESE TERMS. THIS ALLOCATION IS AN ESSENTIAL ELEMENT OF THE BASIS OF THE BARGAIN BETWEEN THE PARTIES. EACH OF THESE PROVISIONS IS SEVERABLE AND INDEPENDENT OF ALL OTHER PROVISIONS OF THESE TERMS. THE LIMITATIONS IN SECTION 7 AND 8 WILL APPLY EVEN IF ANY LIMITED REMEDY FAILS OF ITS ESSENTIAL PURPOSE.\n\n\n\n9.  **Confidentiality**\n\nDuring the Term, DrChrono may provide Development User with confidential and/or proprietary materials and information (\"**Confidential Information**\"). All materials and information provided by DrChrono to Development User and identified at the time of disclosure as \"Confidential\" or bearing a similar legend, and all other information that Development User reasonably should have known was the confidential information of DrChrono given the nature of the data and/or the circumstances surrounding disclosure, shall be considered Confidential Information hereunder; for the avoidance of doubt, all information provided by DrChrono in connection with the Services and Development Software is Confidential Information, including without limitation any credentials used to access the API, all documentation, and these Terms. Development User shall maintain the confidentiality of the Confidential Information and shall not disclose such information to any third party without the prior written consent of drchrono. Development User shall only use the Confidential Information internally for the purpose of exercising its rights and performing its obligations under these Terms. The obligations in this Section 9 shall not apply to any information that is generally available to the public prior to disclosure. Development User may disclose Confidential Information as required by law or court order; provided that, Development User provides DrChrono with prompt written notice thereof and uses its best efforts to limit disclosure. At any time, upon drchrono's request, Development User shall return to DrChrono all Confidential Information in its possession, including, without limitation, all copies and extracts thereof.\n\n\n\n10.  **Notices**\n\nAny notice or communication from one party to the other shall be in writing and either personally delivered or sent via confirmed facsimile, recognized express delivery courier or certified or registered mail, postage prepaid and return receipt requested, addressed to such other party at the address provided by Development User during the sign-up process (in the case of notice to Development User) and 328 Gibraltar Dr, Sunnyvale, CA 94089 (in the case of notice to drchrono); provided, however, that DrChrono may also provide notice to Development User by email at the email address provided by Development User during the sign-up process. All notices shall be in English and effective upon receipt.\n\n\n\n11.  **Miscellaneous**\n\n    1.  <u>Authority</u>. Development User represents and warrants to DrChrono that (i) Development User has the right and authority to enter into these Terms, to grant all rights herein granted and to fully perform its obligations hereunder, and (ii) Development User's performance of its obligations under these Terms will not violate the terms of any other agreement to which Development User is a party.\n    2.  <u>Modifications</u>. We reserve the right to change these Terms on a going-forward basis at any time. Please check these Terms periodically for changes. If a change to these Terms materially modifies your rights or obligations, you will be required to accept the modified Terms in order to continue to use the Services and Development Software. Material modifications are effective upon your acceptance of the modified Terms. Immaterial modifications are effective upon publication. Except as expressly permitted in this Section 11.2, these Terms may be amended only by a written agreement signed by authorized representatives of the parties to these Terms. Disputes arising under these Terms will be resolved in accordance with the version of these Terms that was in effect at the time the dispute arose.\n    3.  <u>Entire Agreement</u>. These Terms constitute the entire agreement between the parties with regard to the subject matter hereof. These Terms supersede all prior negotiations, understandings or agreements (oral or written) between the parties relating to this subject matter and all past dealing or industry custom. Except as set forth in Section 11.2, No waiver, consent, modification or change to these Terms shall bind either party unless in writing and signed by the party against which enforcement is sought, and then only in the specific instance and for the specific purpose given.\n    4.  <u>Force Majeure</u>. DrChrono shall not be liable for any failure to perform its obligations hereunder where such failure results from any cause beyond drchrono's reasonable control, including, without limitation, the elements; fire; flood; severe weather; earthquake; vandalism; accidents; sabotage; power failure; denial of service attacks or similar attacks; Internet failure; acts of God and the public enemy; acts of war; acts of terrorism; riots; civil or public disturbances; strikes lock-outs or labor disruptions; or any laws, orders, rules, regulations, acts or restraints of any government or governmental body or authority, civil or military, including the orders and judgments of courts.\n    5.  <u>Assignment</u>. Development User will not transfer or assign these Terms, directly or indirectly, to another person without drchrono's prior written consent. Any attempted assignment in violation of this Section 11.5 shall be null and void. Subject to the foregoing, these Terms are binding upon DrChrono and Development User and their permitted successors and assignees.\n    6.  <u>No Third Party Beneficiaries</u>. Except as otherwise expressly provided herein, these Terms are for the benefit of the parties hereto and not for any other person or entity. These Terms shall not provide any non-party with any remedy, claim, liability, reimbursement, claim of action or other right in excess of those existing without reference hereto.\n    7.  <u>Relationship of the Parties</u>. No agency, partnership, joint venture, or employment relationship is created as a result of these Terms and neither party has any authority of any kind to bind the other in any respect.\n    8.  <u>Trademarks</u>. Nothing in these Terms shall be construed to grant to either party any right, title or interest (including, without limitation, any implied license) in or to any trademarks, trade names, service marks, and logos of the other party.\n    9.  <u>Governing Law</u>. These Terms will be interpreted and construed in accordance with the laws of the State of California and the United States of America, without regard to conflict of law principles. All disputes arising out of these Terms will be subject to the exclusive jurisdiction of the state and federal courts located in Santa Clara County, California, and each party hereby consents to the personal jurisdiction thereof.\n    10.  <u>Severability</u>. If any provision of these Terms is found invalid or unenforceable, the parties agree to replace the offending provision with an enforceable provision that most nearly achieves the intent and economic effect of the unenforceable provision and all other terms shall remain in full force and effect.\n    11.  <u>Interpretation</u>. The headings of paragraphs and subparagraphs are intended for convenience only and should not be given any effect in construing the contents of the respective paragraphs and subparagraphs. These Terms will be construed and interpreted fairly, in accordance with the plain meaning of their terms and there will be no presumption or inference against the party drafting these Terms in construing or interpreting the same.\n    12.  <u>Waiver</u>. The waiver by either party of any breach or default by the other party of any provision of these Terms shall not be construed as a waiver of any succeeding breach of the same or any other provision, nor shall any delay or omission on the part of either party to exercise or avail itself of any right, power or privilege that it has, or may have hereunder, operate as a waiver of any right, power or privilege by such party.\n    13.  <u>Remedies</u>. Except as specifically provided otherwise, each right and remedy in these Terms is in addition to any other right and remedy, at law or in equity, and the exercise of one right or remedy will not be deemed a waiver of any other right or remedy. The prevailing party shall be entitled to recover from the other its costs, expenses and reasonable attorneys' fees incurred in connection with any action or proceeding to enforce or interpret these Terms or in obtaining and enforcing any judgment or order.\n\n\n# Introduction\n\nThis document is intended as a detailed reference for the precise behavior of\nthe DrChrono API. If this is your first time using the API, start with our <a href=\"/api-docs-old/tutorial\">tutorial</a>.\nIf you are upgrading from a previous version, take a look at the changelog section.\n\n### Requests\n\nAll requests must be made using the base URL `https:///drchrono.com`.\nFor each endpoint, up to six different kinds of requests may be permitted:\n\nPath | Method | Side Effects | Success Status | Failure Status | Response Content\n---- | ------ | ------------ | -------------- | -------------- | ---------------\n`:endpoint` | `GET` | None | `200` | `403` | Paginated list of all endpoint resources that the requester can access\n`:endpoint/:id` | `GET` | None | `200` | `403` or `404` | Object with requested ID\n`:endpoint` | `POST` | Create object | `201` | `400`, `403`, or `409` | Object(s) created\n`:endpoint/:id` | `PUT` | Update entire object | `204` | `400`, `403`, or `409` | Empty\n`:endpoint/:id` | `PATCH` | Update only included values of object | `204` | `400`, `403`, or `409` | Empty\n`:endpoint/:id` | `DELETE` | Delete object | `204` | `400` or `403` | Empty\n\n### Responses\n\nAll responses are in JSON format. Generally input may use the `application/json`, `application/x-www-form-urlencoded`, or `form/multipart` content types.\nThe list of objects returned by a `GET` request to `:endpoint` is paginated and has the following format:\n\n     {\n       \"previous\": URL or null,                    // URL of the previous page\n       \"results\": array of objects,                // these results follow the same format as `:endpoint/:id`\n       \"next\": URL or null                         // URL of the next page (same as the requested URL, but with the page query parameter included)\n     }\n\nMost page sizes default to 250, but can be lowered by setting the `page_size` query parameter. The 'api/appointments' endpoint is an exception to this rule as it has a max size of 20.\n\nSome endpoints may return a `302` redirect response. Most libraries handle this\nincorrectly by resending the response with different headers or a different HTTP method.\nYou will need to resend the original request with the right HTTP method and headers\nto the new \"Location\" specified by the `302` response.\n\n### Permissions\n\nAPI access is managed using scopes and permissions. Scopes are granted to an API\nApplication when a user authorizes and permissions are granted by a primary user\nto other users in their Practice Group. The scopes are granted during the OAuth\nprocess, whereas the permissions have to be granted from DrChrono web app. In order\nfor an app to access information on behalf of a DrChrono user, the user must authorize\nthe app for the requested scopes, and the user must have the appropriate permissions set.\nEach endpoint in this documentation will specify which scopes and permissions are\nneeded for access. Scopes are labeled `drchrono_oauth2` in the AUTHORIZATIONS section\nof each endpoint.\n\n### Data Types\n\nThe data types referred to in this documentation, for both requests and responses,\nare listed below:\n\nType | Example | Description\n---- | ------- | -----------\nboolean | `true` | a binary variable, having two possible values of `true` and `false`\ninteger | `123` | represents some range of mathmatical integers\nstring | `HelloWorld` | sequence of characters\nURL | `\"http://example.com/index.html\"` | An absolute URL, including protocol\nobject | `{\"key\": \"value\"}` | A nested object. All values that are type \"object\" will have a clickable dropdown of the object's format\narray | `[1,2]` | A value may have type \"array of :type\"\ndate | `\"2021-02-14\"` | An ISO 8601 encoded date\ndate range | `\"2021-02-17/2021-02-24\"` | A start and end date separated by a slash\nfile | `\"https://rackcdn.com/file.ext\"` | When uploading, this is provided as a standard `multipart/form-data` file\nbase64encoded file | `\"https://rackcdn.com/file.ext\"` | When uploading, this is provided as a base64 encoded file within JSON\ntime | `\"12:34:56\"` | An ISO 8601 encoded time\ntimestamp | `\"2021-02-14T13:40:39\"` | AN ISO 8601 encoded timestamp, with no as_system_timezone\ncolor | `\"#ABCDEF\"` or `\"rgb(12, 34, 56)\"` | A CSS color specified in either of these formats\ndecimal | `\"123.45\"` | A numeric value truncated to two decimal places. It may be passed to an endpoint as an integer, float, or string, but will always be returned as a string.\n\n### Verbose Parameter\n\nFor some endpoints, certain fields will be excluded in the response to a `GET` request\nunless the `verbose` query parameter is passed with the value `true`. These fields\nhave a particularly large performance penalty. Passing `verbose=true` will include\nthese keys in the response, but will reduce the default and maximum page sizes to 50.\n\n### Rate Limits\n\nApplications are subject to an hourly rate limit, which will reset at the top of each hour.\nRequests over this limit will receive a response with code `429`. By default, applications are\nlimited to 500 calls per hour. Contact api@drchrono.com or your account representative\nto request an increased rate limit.\n\n### Endpoint Levels\n\n`Level 1 API Call(s)` and `Level 2 API(s)` are defined in the following table and are based on the listed `Endpoint`; the Endpoint's corresponding `Level` number listed denotes whether that Endpoint constitutes a Level 1 API Call vs. a Level 2 API Call. DrChrono's definition of Level 1 API Calls and Level 2 API Calls as listed in the following table are subject to change at DrChrono's sole discretion.\n\nENDPOINT | Level\n---------- | -----\n`/api/allergies` | 1\n`/api/appointments` | 1\n`/api/appointment_profiles` | 1\n`/api/appointment_templates` | 1\n`/api/billing_profiles` | 1\n`/api/care_plans` | 1\n`/api/clinical_note_templates` | 1\n`/api/comm_logs` | 1\n`/api/consent_forms` | 1\n`/api/custom_appointment_fields` | 1\n`/api/custom_demographics` | 1\n`/api/custom_vitals` | 1\n`/api/doctors` | 1\n`/api/documents` | 1\n`/api/iframe_integration` | 1\n`/api/implantable_devices` | 1\n`/api/inventory_categories` | 1\n`/api/inventory_vaccines` | 1\n`/api/medications` | 1\n`/api/offices` | 1\n`/api/patients` | 1\n`/api/patients/:id/ccda` | 1\n`/api/patients/:id/qrda1` | 1\n`/api/patients/:id/onpatient_access` | 1\n`/api/patient_communications` | 1\n`/api/patient_flag_types` | 1\n`/api/patient_interventions` | 1\n`/api/patient_physical_exams` | 1\n`/api/patient_risk_assessments` | 1\n`/api/patients_summary` | 1\n`/api/problems` | 1\n`/api/reminder_profiles` | 1\n`/api/telehealth_appointments` | 1\n`/api/users` | 1\n`/api/user_groups` | 1\n`/o/authorize` | 1\n`/o/revoke_token` | 1\n`/o/token` | 1\n`/api/amendments` | 2\n`/api/claim_billing_notes` | 2\n`/api/clinical_notes` | 2\n`/api/clinical_note_field_types` | 2\n`/api/clinical_note_field_values` | 2\n`/api/custom_insurance_plan_names` | 2\n`/api/eligibility_checks` | 2\n`/api/eobs`| 2\n`/api/fee_schedules` | 2\n`/api/insurances` | 2\n`/api/lab_documents` | 2\n`/api/lab_orders` | 2\n`/api/lab_orders_summary` | 2\n`/api/lab_tests` | 2\n`/api/lab_results` | 2\n`/api/line_items` | 2\n`/api/medications/:id/append_to_pharmacy_note` | 2\n`/api/messages` | 2\n`/api/offices/:id/add_exam_room` | 2\n`/api/pateint_lab_results` | 2\n`/api/patient_messages` | 2\n`/api/patient_payments` | 2\n`/api/patient_payment_log` | 2\n`/api/patient_vaccine_records` | 2\n`/api/prescription_messages` | 2\n`/api/procedures` | 2\n`/api/sublabs` | 2\n`/api/tasks` | 2\n`/api/task_categories` | 2\n`/api/task_notes` | 2\n`/api/task_templates` | 2\n`/api/task_statuses` | 2\n`/api/transactions` | 2\n\n## Value-Add Services\n\nThe DrChrono Partner Marketplace (https://partners.drchrono.com/) is our app store\nwhere customers can uncover integrated solutions to support all areas of their\npractice workflows and business needs. The DrChrono Partner Program is designed\nto acknowledge the DrChrono Marketplace partners, integrated with the DrChrono\nplatform, achieving a seamless customer experience within DrChrono to the highest\nstandards.\n\nAs a member of the DrChrono Partner Program, you will join a community of partners\nacross the globe that have been working with DrChrono Partnership team on\nintegrations that range from applications pushing the envelope of \"the practice\nof the future\" to well established companies looking for a more seamless workflow\nbetween our DrChrono EHR and their applications.\n\nAll DrChrono Partner Program members at the Growth tier or above will receive the\nfollowing resources at no-additional cost to the partner:\n\nResource | Details\n-------- | -------\nPartner Manager | Your partner manager guides you through the partner program and provides you with the tools and resources you will need to sell your solution and services to DrChrono customers and build a long term successful customer life cycle.\nPriority API Support | As a DrChrono partner, you will have access to an API Support Specialist, who will work with you to resolve your API related questions and expand your service offering via architecting more in-depth integrated solutions.\nPartner Finance Manager | As a DrChrono partner, you will have access to a partner finance manager who will be your point of contact for monthly invoices and payments.\n\nTo help drive growth of integrations, DrChrono offers certain value-added services\nfor purchase by all developers in the DrChrono Partner Program. Purchase of these\nservices is not required to develop and deploy production-ready applications on\nthe DrChrono Partner Marketplace. Access to value-added services will be\ndependent on your partner program tier.\n\nValue-added services currently available for purchase and associated pricing:\n\nService Name | Price\n------------ | -----\nPress Releases | Free\nMarketplace Features | Free\nPartner Newsletter Spotlight | Free\nEmail | Free\nPublished Web Content | Free\nWebinar | Free\n\nThe above pricing is subject to change; changes will be reflected in the table\nabove. Capacity may be limited. These fees apply to developers using Certified\nAPIs. Pricing may vary for developers using non-Certified APIs. The purchase of\nmultiple Services may result in a volume-based discount. For more information\nabout specific services please reach out to partners@drchrono.com.\n\n# Authorization\n\n## Initial authorization\n\nThere are three main steps in the OAuth 2.0 authentication workflow:\n\n1. Redirect the provider to the authorization page.\n2. The provider authorizes your application and is redirected back to\n   your web application.\n3. Your application exchanges the `authorization_code` that came with\n   the redirect for an `access_token` and `refresh_token`.\n\n### Step 1: Redirect to drchrono\n\nThe first step is redirecting your user to drchrono, typically with a button\nlabeled \"Connect to drchrono\" or \"Login with drchrono\".  This is just a link that\ntakes your user to the following URL:\n\n    https://drchrono.com/o/authorize/?redirect_uri=REDIRECT_URI_ENCODED&response_type=code&client_id=CLIENT_ID_ENCODED&scope=SCOPES_ENCODED\n\n- `REDIRECT_URI_ENCODED` is the URL-encoded version of the redirect URI (as registered for your application and used in later steps).\n- `CLIENT_ID_ENCODED` is the URL-encoded version of your application's client ID.\n- `SCOPES_ENCODED` is a URL-encoded version of a space-separated list of scopes, which can be found in each endpoint or omitted to default to all scopes.\n\nThe `scope` parameter consists of an optional, space-separated list of scopes your application is requesting.\nIf omitted, all scopes will be requested.\n\nScopes are of the form `BASE_SCOPE:[read|write]` where `BASE_SCOPE` is any of `user`, `calendar`, `patients`, `patients:summary`, `billing`, `clinical` and `labs`.\nYou should request only the scopes you need.\nFor instance, an application which sends \"Happy Birthday!\" emails to a doctor's patients on their birthdays would use the scope parameter `\"patients:summary:read\"`,\nwhile one that allows patients to schedule appointments online would need at least\n`\"patients:summary:read patients:summary:write calendar:read calendar:write clinical:read clinical:write\"`.\n\n### Step 2: Provider authorization\n\nAfter logging in (if necessary), the provider will be presented with a screen\nwith your application's name and the list of permissions you requested (via the\n`scope` parameter).\n\nWhen they click the \"Authorize\" button, they will be redirected to your redirect\nURI with a `code` query parameter appended, which contains an authorization code to be\nused in step 3.  If they click the \"Cancel\" button, they will be redirected to\nyour redirect URI with `error=access_denied` instead.\n\nNote: This authorization code expires extremely quickly, so you must perform\nstep 3 immediately, ideally before rendering the resulting page for the end\nuser.\n\n### Step 3: Token exchange\n\nThe `code` obtained from step 2 is usable exactly once to obtain an access token\nand refresh token.  Here is an example token exchange in Python:\n\n    import datetime, pytz, requests\n\n    if 'error' in get_params:\n        raise ValueError('Error authorizing application: %s' % get_params[error])\n\n    response = requests.post('https://drchrono.com/o/token/', data={\n        'code': get_params['code'],\n        'grant_type': 'authorization_code',\n        'redirect_uri': 'http://mytestapp.com/redirect_uri',\n        'client_id': 'abcdefg12345',\n        'client_secret': 'abcdefg12345',\n    })\n    response.raise_for_status()\n    data = response.json()\n\n    # Save these in your database associated with the user\n    access_token = data['access_token']\n    refresh_token = data['refresh_token']\n    expires_timestamp = datetime.datetime.now(pytz.utc) + datetime.timedelta(seconds=data['expires_in'])\n\nYou now have all you need to make API requests authenticated as that provider.\nWhen using this access token, you'll only be able to access the data that the\nuser has access to and that you have been granted permissions for.\n\n## Refreshing an access token\n\nAccess tokens only last 48 hours (given in seconds in the `'expires_in'` key in\nthe token exchange step above), so they occasionally need to be refreshed.  It\nwould be inconvenient to ask the user to re-authorize every time, so instead you\ncan use the refresh token like the original authorization to obtain a new access\ntoken.  Replace the `code` parameter with `refresh_token`, change the value\n`grant_type` from `authorization_code` to `refresh_token`, and omit the\n`redirect_uri` parameter.\n\nExample in Python:\n\n    ...\n    response = requests.post('https://drchrono.com/o/token/', data={\n        'refresh_token': get_refresh_token(),\n        'grant_type': 'refresh_token',\n        'client_id': 'abcdefg12345',\n        'client_secret': 'abcdefg12345',\n    })\n    ...\n\n# Webhooks\n\nIn order to use drchrono API webhooks, you first need to have an API application on file\n(even if it is in Test Model).\nEach API webhook is associated with one API application, go to\n<a href=\"/api-management/\" target=\"_blank\">here</a> to set up both API applications and webhooks!\n\nOnce you registered an API application, you will see webhook section in each saved API applications.\nCreate a webhook and register some events there and save all the changes, then you are good to go!\n\n## Webhooks setup\n\nAll fields under webhooks section are required.\n\n**Callback URL**\nCallback URl is used to receive all hooks when subscribed events are triggered. This should be an URL under your control.\n\n**Secret token**\nSecret token is used to verify webhooks, this is very important, please set something with high entropy. Also we will\ntalk more about this later.\n\n**Events**\n\nEvents is used to register events you want to receiver notification when they happen. Currently we support following events.\n\nEvent name | Event description\n---------- | -----------------\n`APPOINTMENT_CREATE` | We will deliver a hook any time an appointment is created\n`APPOINTMENT_MODIFY` | We will deliver a hook any time an appointment is modified\n`APPOINTMENT_DELETE` | We will deliver a hook any time an appointment is deleted\n`APPOINTMENT_BILLING_STATUS_BI` | We will deliver a hook any time an appointment's billing status reaches \"Bill Insurance\"\n`APPOINTMENT_BILLING_STATUS_RTB` | We will deliver a hook any time an appointment's billing status reaches \"Ready to Bill\"\n`CASH_PAYMENT_DELETE` | We will deliver a hook any time a patient payment is deleted\n`CLINICAL_NOTE_LOCK` | We will deliver a hook any time a clinical note is locked\n`CLINICAL_NOTE_UNLOCK` | We will deliver a hook any time a clinical note is unlocked\n`LINE_ITEM_CREATE` | We will deliver a hook any time a line item is created\n`LINE_ITEM_MODIFY` | We will deliver a hook any time a line item is modified\n`LINE_ITEM_DELETE` | We will deliver a hook any time a line item is deleted\n`LINE_ITEM_TRANSACTION_DELETE` | We will deliver a hook any time a line item transaction is deleted\n`PATIENT_CREATE` | We will deliver a hook any time a patient is created\n`PATIENT_MODIFY` | We will deliver a hook any time a patient is modified\n`PATIENT_ALLERGY_CREATE` | We will deliver a hook any time a patient allergy is created\n`PATIENT_ALLERGY_MODIFY` | We will deliver a hook any time a patient allergy is modified\n`PATIENT_FLAG_CREATE` | We will deliver a hook any time a patient flag is created\n`PATIENT_FLAG_CMODIFY` | We will deliver a hook any time a patient flag is modified\n`PATIENT_PROBLEM_CREATE` | We will deliver a hook any time a patient problem is created\n`PATIENT_PROBLEM_MODIFY` | We will deliver a hook any time a patient problem is modified\n`PATIENT_MEDICATION_CREATE` | We will deliver a hook any time a patient medication is created\n`PATIENT_MEDICATION_MODIFY` | We will deliver a hook any time a patient medication is modified\n`TASK_CREATE` | We will deliver a hook any time a task is created\n`TASK_MODIFY` | We will deliver a hook any time a task is modified and any time creation, modification and deletion of task notes, associated task item\n`TASK_DELETE` | We will deliver a hook any time a task is deleted\n`VACCINE_ADMINISTERED` | We will deliver a hook any time a vaccine consent form is signed\n\n\n## Webhooks verification\n\nIn order to make sure the callback URL in webhook is under your control, we added a verification\nstep before we send any hooks out to you.\n\nVerification can be done by clicking \"Verify webhook\" button in webhooks setup page. After you click\nthe button, we will send a `GET` request to the callback URL, along with a parameter called `msg`.\n\nPlease use your webhook's secret token as hash key and SHA-256 as digest constructor, hash the `msg` value with\n<a href=\"https://tools.ietf.org/html/rfc2104.html\">HMAC algorithm</a>.\nAnd we expect a `200` JSON response, in JSON response body, there should be a key called `secret_token` existing, and its value should be\nequal to the <strong>hashed</strong> `msg`. Otherwise, verification will fail.\n\nHere is an example webhook verification in Python:\n\n    import hashlib, hmac\n\n    def webhook_verify(request):\n        secret_token = hmac.new(WEBHOOK_SECRET_TOKEN, request.GET['msg'], hashlib.sha256).hexdigest()\n        return json_response({\n            'secret_token': secret_token\n        })\n\n<div class=\"alert alert-warning\">\n<b>Note:</b> Verification will be needed when webhook is first created and anytime callback URl is changed.\n</div>\n\n\n## Webhooks header and body\n\n**Header**\n\nKey | Value\n--- | -----\n`X-drchrono-event` | Event that triggered this hook, could be any one event above or `PING`\n`X-drchrono-signature` | Secret token associated with this webhook\n`X-drchrono-delivery` | ID of this delivery\n\n**Body**\n\nKey | Value\n--- | -----\n`receiver` | This will be an JSON representation of the webhook\n`object` | This will be an JSON representation of the object related to the triggered event, this would share same serializer as drchrono API\n\n## Webhooks ping and deliveries\n\nWebhooks ping and deliveries will be sent as `POST` requests.\n\n**PING**:\n\nYou can always ping your webhook to check things, by clicking the \"Ping webhook\" button in webhook setup page. And a hook with header `X-drchrono-event: PING` would be sent to the callback URL.\n\n**Deliveries**:\n\nYou can check recent deliveries by clicking the \"deliveries\" link in webhook setup page. And you can resend a hook by clicking \"redeliver\" button after select a specific delivery.\n\n## Webhooks delivery mechanism\n\nWe will delivery a hook the moment a subscribed event is triggered. We will not record any response header or body you send back after you receive the hook.\nHowever we only consider the response status code. We will consider any `2xx` responses as successfully delivered.\nAny other responses, like `302` would be considered failing.\nAnd we will try to redeliver unsuccessfully delivered hooks 3 times, first redeliver happens at 1 hour after the initial event,\nsecond receliver happens 3 hours after the initial event, and the third redeliver happens 7 hours after the initial event.\nAfter these redeliveries, if the delivery is still unsuccessful, you have to redeliver it by hand.\n\n\n## Webhooks security\n\nYou may want to secure your webhooks to only consider requests send out from drchrono. And this is where <code>secret_token</code> is needed in\nrequest header.\nTry to set the <code>secret_token</code> to something with high entropy, a good example could be taking the output of\n<code>ruby -rsecurerandom -e 'puts SecureRandom.hex(20)'</code>.\nAfter this, you might want to verify all request headers you received on your server with this token.\n\n\n# iframe integration\n\nSome API apps provide additional functionality for interacting with patient data\nnot offered by drchrono, and can benefit by being incorporated into drchrono's\npatient information page via iframe.  We have created a simple API to make this\npossible.\n\nTo make an existing API application accessible via an iframe on the patient\npage, you need to update either \"Patient iframe\" or \"Clinical note iframe\" section in API management page,\nto make the iframe to appear on (either the patient page or the clinical note page),\nwith the URL that the iframe will use for each page, and the height it should\nhave. The application will be reviewed before it is approved to ensure that it\nis functional and secure.\n\n## Register a Doctor\n\niframe applications will appear as choices on the left-hand menu of the patient\npage for doctors registered with your application.  To register a doctor with\nyour application, make a `POST` request to the `/api/iframe_integration`\nendpoint using the access token for the corresponding doctor. This endpoint does not\nexpect any payload.\n\nTo disable your iframe application for a doctor, make a `DELETE` request to the\nsame endpoint.\n\n## Populating the iframe\n\nThere are two places where the iframe can be displayed, either within the\npatient detail page or the clinical note page, shown below respectively:\n\n### Patient Chart\n![Iframe on the patient page](https://app.drchrono.com/site_media/cb-af088f58/public/images/iframe_patient_page.png \"Patient Chart iFrame\")\n\n### Clinical Note\n![Iframe on the clinical note page](https://app.drchrono.com/site_media/cb-af088f58/public/images/iframe_clinical_note.png \"Clincal Note iFrame\")\n\nWhen requesting approval for your iframe app, you must specify a URL for one or\nboth of these pages which will serve as the base URL for your IFrame\ncontents. When a doctor views your iframe, the source URL will have various\nquery parameters appended to it, for example for the patient page the `src`\nparameter of the IFrame will be:\n\n```\n<iframe_url>?doctor_id=<doctor_id>&patient_id=<patient_id>&practice_id=<practice_id>&iat=<iat>&jwt=<jwt>\n```\n\nThe `jwt` parameter is crucial if your application transfers any sort of PHI and\ndoes not implement its own login system.  It encapsulates the other parameters\nin a [JSON web token (JWT)](http://jwt.io) and signs them using SHA-256 HMAC\nwith your `client_secret` as the key.  This verifies that the iframe is being\nloaded within one of drchrono's pages by an authorized user.  In production, you\nshould validate the JWT using an approved library (which are listed on the\n[official site](http://jwt.io)), and only use the parameters extracted from the\nJWT.  Using Python and Django, this might look like:\n\n    import jwt\n\n    CLIENT_SECRET = <client_secret>\n    MAX_TIME_DRIFT_SECONDS = 60\n\n    def validate_parameters(request):\n        token = request.GET['jwt']\n\n        return jwt.decode(token, CLIENT_SECRET, algorithms=['HS256'], leeway=MAX_TIME_DRIFT_SECONDS)\n\nModern browsers' same-origin policy means that data cannot be passed between\nyour application and drchrono's page through the iframe.  Therefore, interaction\nmust happen through the API, using information provided in JWT.\n\n# Versions and deprecation\n\n## Stability Policy\n\nChanges to this API version will be limited to adding endpoints, or adding fields to existing\nendpoints, or adding optional query parameters. Any new fields which are not read-only will be optional.\n\n## Deprecation Policy\n\nThe drchrono API is versioned. Versions can be in the following states:\n\n* **Active:** This is our latest and greatest version of the API. It is actively supported by\nour API team and is improved upon with new features, bug fixes and optimizations that do\nnot break backwards compatibility.\n\n* **Deprecated:** A deprecated API version is considered second best--having been\nsurpassed by our active API version. An API version remains in this state for one year,\nafter which time it falls to the not supported state. A deprecated API version is passively supported;\nwhile it won't be removed until becoming unsupported, it may not receive new features but will likely\nbe subject to security updates and performance improvements.\n\n* **Unsupported:** An API version in the not supported state may be deactivated at any\ntime. An application using an unsupported API version should migrate to an active API version.\n\n## Version Map\n| Version Name | Previous Name | Start Date | Deprecation Date |\n|--------------|---------------|------------|------------------|\n| v2           | v2015_08      | 08/2015    | TBA              |\n| v3           | v2016_06      | 06/2016    |                  |\n| v4           | N/A           | 09/2018    |                  |\n\nIf you are looking for documentation for an older version\n\n- [V4(Hunt Valley)](/api-docs-old/v4/documentation) (old V4 documentation)\n- [V3(Sunnyvale)](/api-docs-old/v3/documentation)\n- [V2(Mountain View)](/api-docs-old/v2/documentation)\n\n# Changelog\n\nHere's changelog for different versions\n\n- [V4 Changelog](/api-docs-old/v4/changelog)\n- [V3 changelog](/api-docs-old/v3/changelog)\n\n",
    "title": "",
    "version": "v4 - Hunt Valley",
    "x-logo": {
      "altText": "DrChrono Logo",
      "url": "https://www.drchrono.com/site_media/images/logos/drchrono-black-wpadding.png"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/audit_log": {
      "get": {
        "description": "Retrieve or search audit logs.\n<b>Note:</b> Either `since`, `date` or `date_range` parameter must be specified.\n            ",
        "operationId": "audit_log_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "description": "",
              "title": "user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "action",
            "required": false,
            "schema": {
              "description": "",
              "title": "action",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/AuditLog"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Audit"
        ],
        "x-permissions": null,
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/allergies": {
      "get": {
        "description": "Retrieve or search patient allergies",
        "operationId": "allergies_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientAllergy"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient allergy",
        "operationId": "allergies_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientAllergy"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/allergies/{id}": {
      "get": {
        "description": "Retrieve an existing patient allergy",
        "operationId": "allergies_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientAllergy"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient allergy",
        "operationId": "allergies_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient allergy",
        "operationId": "allergies_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/amendments": {
      "get": {
        "description": "Retrieve or search patient amendments. You can only interact with amendments created by your API application",
        "operationId": "amendments_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientAmendment"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient amendments to a patient's clinical records",
        "operationId": "amendments_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientAmendment"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/amendments/{id}": {
      "delete": {
        "description": "Delete an existing patient amendment, you can only interact with amendments created by your API application",
        "operationId": "amendments_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing patient amendment, you can only interact with amendments created by your API application",
        "operationId": "amendments_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientAmendment"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient amendment, you can only interact with amendments created by your API application",
        "operationId": "amendments_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient amendment, you can only interact with amendments created by your API application",
        "operationId": "amendments_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/appointment_profiles": {
      "get": {
        "description": "Retrieve or search appointment profiles for a doctor's calendar",
        "operationId": "appointment_profiles_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentProfile"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create appointment profiles for a doctor's calendar",
        "operationId": "appointment_profiles_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentProfile"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      }
    },
    "/api/appointment_profiles/{id}": {
      "delete": {
        "description": "Delete an existing appointment profile",
        "operationId": "appointment_profiles_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing appointment profile",
        "operationId": "appointment_profiles_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentProfile"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing appointment profile",
        "operationId": "appointment_profiles_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing appointment profile",
        "operationId": "appointment_profiles_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      }
    },
    "/api/appointment_templates": {
      "get": {
        "description": "Retrieve or search appointment templates for a doctor's calendar",
        "operationId": "appointment_templates_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "description": "",
              "title": "profile",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentTemplate"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create appointment templates for a doctor's calendar",
        "operationId": "appointment_templates_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "description": "",
              "title": "profile",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentTemplate"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      }
    },
    "/api/appointment_templates/{id}": {
      "delete": {
        "description": "Delete an existing appointment template",
        "operationId": "appointment_templates_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "description": "",
              "title": "profile",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing appointment template",
        "operationId": "appointment_templates_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "description": "",
              "title": "profile",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentTemplate"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing appointment template",
        "operationId": "appointment_templates_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "description": "",
              "title": "profile",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing appointment template",
        "operationId": "appointment_templates_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "description": "",
              "title": "profile",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "settings"
        ],
        "x-practice-access": "\"share_appointment_profiles\" need to be set for data access among practice"
      }
    },
    "/api/appointments": {
      "get": {
        "description": "Retrieve or search appointment or breaks.\n<b>Note:</b> Either `since`, `occurred_since`, `date` or `date_range` parameter must be specified.\n          results returned in order of scheduled date.\n            ",
        "operationId": "appointments_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer",
              "minimum": 1,
              "maximum": 250
            }
          },
          {
            "description": "Appointment status name",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "Patient ID",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "Office ID",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "Doctor ID",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "Lower bound inclusive date filter for appointment updated/created date",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "Filter appointments based on scheduled time",
            "in": "query",
            "name": "occurred_since",
            "required": false,
            "schema": {
              "description": "Filter appointments based on scheduled time",
              "title": "occurred_since",
              "type": "string"
            }
          },
          {
            "description": "Inclusive upper and lower bound filter for appointment scheduled date. Format: yyyy-mm-dd/yyyy-mm-dd. Max window size 190 days",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "set to `true` to include clinical_note, custom_fields, custom_vitals, extended_updated_at, reminders, status_transitions, vitals but limit page_size to 25",
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "",
              "title": "verbose",
              "type": "boolean"
            }
          },
          {
            "description": "Specific date filter for appointment scheduled date",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          },
          {
            "description": "set to `true` to ignore virtual appointments that have not yet been materialized",
            "in": "query",
            "name": "ignore_virtual",
            "required": false,
            "schema": {
              "description": "Do not include virtual appointments that have not yet been materialized.  This is useful when you need to get a list of appointments that are materialized and ready to be used.",
              "title": "ignore_virtual",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Appointment"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create a new appointment or break on doctor's calendar",
        "operationId": "appointments_create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "409": {
            "content": {},
            "description": "Scheduled time overlaps with an existing appointment"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/appointments/{id}": {
      "delete": {
        "description": "Delete an existing appointment or break",
        "operationId": "appointments_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Appointment ID. Can be in the form of date_id where date is the day of the appointment and ID is the recurring appointment ID. If not recurring this is just the ID number.",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing appointment or break",
        "operationId": "appointments_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing appointment or break",
        "operationId": "appointments_partial_update",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Appointment ID",
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "409": {
            "content": {},
            "description": "Scheduled time overlaps with an existing appointment"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing appointment or break",
        "operationId": "appointments_update",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Appointment ID",
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "409": {
            "content": {},
            "description": "Scheduled time overlaps with an existing appointment"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/appointments_list": {
      "get": {
        "operationId": "appointments_list_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Appointment"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "operationId": "appointments_list_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "Order results by a specific field. Valid options include [scheduled_time, updated_at]. Default: scheduled_time.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "409": {
            "content": {},
            "description": "Scheduled time overlaps with an existing appointment"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/appointments_list/{id}": {
      "delete": {
        "operationId": "appointments_list_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "operationId": "appointments_list_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "appointments_list_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "409": {
            "content": {},
            "description": "Scheduled time overlaps with an existing appointment"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "appointments_list_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "409": {
            "content": {},
            "description": "Scheduled time overlaps with an existing appointment"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/billing_profiles": {
      "get": {
        "description": "Retrieve or search billing profiles",
        "operationId": "billing_profiles_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/BillingProfile"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_billing_profiles\" need to be set for data access among practice"
      }
    },
    "/api/billing_profiles/{id}": {
      "get": {
        "description": "Retrieve an existing billing profiles",
        "operationId": "billing_profiles_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfile"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_billing_profiles\" need to be set for data access among practice"
      }
    },
    "/api/care_plans": {
      "get": {
        "description": "Retrieve or search care plans",
        "operationId": "care_plans_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "plan_type",
            "required": false,
            "schema": {
              "description": "",
              "title": "plan_type",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CarePlan"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/care_plans/{id}": {
      "get": {
        "description": "Retrieve an existing care plan",
        "operationId": "care_plans_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "plan_type",
            "required": false,
            "schema": {
              "description": "",
              "title": "plan_type",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarePlan"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/care_team_members": {
      "get": {
        "operationId": "care_team_members_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CareTeamMember"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/care_team_members/{id}": {
      "get": {
        "operationId": "care_team_members_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareTeamMember"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/claim_billing_notes": {
      "get": {
        "description": "Retrieve or search billing notes",
        "operationId": "claim_billing_notes_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/ClaimBillingNotes"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create a new billing note",
        "operationId": "claim_billing_notes_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimBillingNotes"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/claim_billing_notes/{id}": {
      "get": {
        "description": "Retrieve an existing billing note",
        "operationId": "claim_billing_notes_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimBillingNotes"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_field_types": {
      "get": {
        "description": "Retrieve or search clinical note field types",
        "operationId": "clinical_note_field_types_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/SoapNoteLineItemFieldType"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_field_types/{id}": {
      "get": {
        "description": "Retrieve an existing clinial note field type",
        "operationId": "clinical_note_field_types_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoapNoteLineItemFieldType"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_field_values": {
      "get": {
        "description": "Retrieve or search clinical note field values",
        "operationId": "clinical_note_field_values_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_field",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_field",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/SoapNoteLineItemFieldValue"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create clinical note field value",
        "operationId": "clinical_note_field_values_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_field",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_field",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoapNoteLineItemFieldValue"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_field_values/{id}": {
      "get": {
        "description": "Retrieve an existing clinical note field value",
        "operationId": "clinical_note_field_values_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_field",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_field",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoapNoteLineItemFieldValue"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing clinical note field value",
        "operationId": "clinical_note_field_values_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_field",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_field",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing clinical note field value",
        "operationId": "clinical_note_field_values_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_field",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_field",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "",
              "title": "clinical_note_template",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_templates": {
      "get": {
        "description": "Retrieve or search clinical note templates",
        "operationId": "clinical_note_templates_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/SoapNoteCustomReport"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_templates/{id}": {
      "get": {
        "description": "Retrieve an existing clinical note tempalte",
        "operationId": "clinical_note_templates_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoapNoteCustomReport"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/clinical_notes": {
      "get": {
        "operationId": "clinical_notes_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/ClinicalNote"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/clinical_notes/{id}": {
      "get": {
        "operationId": "clinical_notes_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalNote"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/comm_logs": {
      "get": {
        "description": "Retrieve or search communicatioin (phone call) logs",
        "operationId": "comm_logs_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PhoneCallLog"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create communication (phone call) logs",
        "operationId": "comm_logs_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallLog"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/comm_logs/{id}": {
      "get": {
        "description": "Retrieve an existing communication (phone call) logs",
        "operationId": "comm_logs_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallLog"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing communication (phone call) logs",
        "operationId": "comm_logs_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing communication (phone call) logs",
        "operationId": "comm_logs_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/consent_forms": {
      "get": {
        "description": "Retrieve or search patient consent forms",
        "operationId": "consent_forms_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/ConsentForm"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create a patient consent form",
        "operationId": "consent_forms_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentForm"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      }
    },
    "/api/consent_forms/{id}": {
      "get": {
        "description": "Retrieve an existing patient consent form",
        "operationId": "consent_forms_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentForm"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient consent form",
        "operationId": "consent_forms_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient consent form",
        "operationId": "consent_forms_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      }
    },
    "/api/consent_forms/{id}/apply_to_appointment": {
      "post": {
        "description": "Assign (apply) a consent form to appointment",
        "operationId": "consent_forms_apply_to_appointment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      }
    },
    "/api/consent_forms/{id}/unapply_from_appointment": {
      "post": {
        "description": "Unassign (unapply) a consent form from appointment",
        "operationId": "consent_forms_unapply_from_appointment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_consent_forms\" need to be set for data access among practice"
      }
    },
    "/api/custom_appointment_fields": {
      "get": {
        "description": "Retrieve or search custom appointment fields",
        "operationId": "custom_appointment_fields_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CustomAppointmentFieldType"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create custom appointment fields",
        "operationId": "custom_appointment_fields_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAppointmentFieldType"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/custom_appointment_fields/{id}": {
      "get": {
        "description": "Retrieve an existing custom appointment field",
        "operationId": "custom_appointment_fields_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAppointmentFieldType"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing custom appointment field",
        "operationId": "custom_appointment_fields_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing custom appointment field",
        "operationId": "custom_appointment_fields_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/custom_demographics": {
      "get": {
        "description": "Retrieve or search custom demographics fields",
        "operationId": "custom_demographics_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CustomPatientFieldType"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create custom demographics fields",
        "operationId": "custom_demographics_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPatientFieldType"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/custom_demographics/{id}": {
      "get": {
        "description": "Retrieve an existing custom demographics field",
        "operationId": "custom_demographics_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPatientFieldType"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing custom demographics field",
        "operationId": "custom_demographics_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing custom demographics field",
        "operationId": "custom_demographics_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/custom_insurance_plan_names": {
      "get": {
        "description": "Retrieve or search custom insurance plan names",
        "operationId": "custom_insurance_plan_names_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "description": "",
              "title": "user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "description": "",
              "title": "name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CustomInsurancePlanName"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "settings"
        ],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/custom_insurance_plan_names/{id}": {
      "get": {
        "description": "Retrieve an existing custom insurance plan name",
        "operationId": "custom_insurance_plan_names_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "user",
            "required": false,
            "schema": {
              "description": "",
              "title": "user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "description": "",
              "title": "name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomInsurancePlanName"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "settings"
        ],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/custom_vitals": {
      "get": {
        "description": "Retrieve or search custom vital types",
        "operationId": "custom_vitals_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CustomVitalType"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/custom_vitals/{id}": {
      "get": {
        "description": "Retrieve an existing custom vital type",
        "operationId": "custom_vitals_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomVitalType"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes",
          "settings"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/day_sheet_charges": {
      "get": {
        "description": "Retrieve daysheet charges report for a given date range",
        "operationId": "daysheet_charges_list",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": {
              "description": "Start date of report (M/D/YYYY)",
              "title": "start_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": {
              "description": "End date of report (M/D/YYYY)",
              "title": "end_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "charges_date_type",
            "required": false,
            "schema": {
              "description": "Filters report by scheduled time or date of entry if not provided. Can be one of ('scheduled_time', ' ')",
              "title": "charges_date_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "report_type",
            "required": false,
            "schema": {
              "description": "Filters report by given value. Can be one of ('reimbursement_analysis', ' ')",
              "title": "report_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "claim_type",
            "required": false,
            "schema": {
              "description": "Filters report by professional or institutional claims. Can be one of ('institutional', 'professional', ' ')",
              "title": "claim_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "patient_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given patient ID",
              "title": "patient_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given office",
              "title": "office",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "examroom_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given examroom ID",
              "title": "examroom_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pg_mode",
            "required": false,
            "schema": {
              "description": "Runs report for all providers in the practice group",
              "title": "pg_mode",
              "type": "boolean"
            }
          }
        ],
        "security": [
          {
            "drchrono_oauth2": [
              "billing"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "access-patient-payments"
        ]
      }
    },
    "/api/day_sheet_credits": {
      "get": {
        "description": "Retrieve daysheet credits/adjustments report for a given date range",
        "operationId": "daysheet_credits_list",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": {
              "description": "Start date of report (M/D/YYYY)",
              "title": "start_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": {
              "description": "End date of report (M/D/YYYY)",
              "title": "end_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "credits_date_type",
            "required": false,
            "schema": {
              "description": "Filters report by posted date or deposit date. Defaults to date of entry if not provided. Can be one of ('credit', 'debit', ' ')",
              "title": "credits_date_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "report_type",
            "required": false,
            "schema": {
              "description": "Filters report by given value. Can be one of ('reimbursement_analysis', ' ')",
              "title": "report_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "claim_type",
            "required": false,
            "schema": {
              "description": "Filters report by professional or institutional claims. Can be one of ('institutional', 'professional', ' ')",
              "title": "claim_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "patient_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given patient ID",
              "title": "patient_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given office",
              "title": "office",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "examroom_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given examroom ID",
              "title": "examroom_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pg_mode",
            "required": false,
            "schema": {
              "description": "Runs report for all providers in the practice group",
              "title": "pg_mode",
              "type": "boolean"
            }
          }
        ],
        "security": [
          {
            "drchrono_oauth2": [
              "billing"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "access-patient-payments"
        ]
      }
    },
    "/api/day_sheet_patient_payments": {
      "get": {
        "description": "Retrieve daysheet cash report for a given date range",
        "operationId": "day_sheet_patient_payments_list",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": {
              "description": "Start date of report (M/D/YYYY)",
              "title": "start_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": {
              "description": "End date of report (M/D/YYYY)",
              "title": "end_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "charges_date_type",
            "required": false,
            "schema": {
              "description": "Filters report by scheduled time or date of entry if not provided. Can be one of ('scheduled_time', ' ')",
              "title": "charges_date_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "report_type",
            "required": false,
            "schema": {
              "description": "Filters report by given value. Can be one of ('reimbursement_analysis', ' ')",
              "title": "report_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "claim_type",
            "required": false,
            "schema": {
              "description": "Filters report by professional or institutional claims. Can be one of ('institutional', 'professional', ' ')",
              "title": "claim_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "patient_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given patient ID",
              "title": "patient_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "Filters report by a given office",
              "title": "office",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "examroom_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given examroom ID",
              "title": "examroom_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "legacy",
            "required": false,
            "schema": {
              "description": "Enables backward compatibility for legacy version",
              "title": "legacy",
              "type": "bool"
            }
          }
        ],
        "security": [
          {
            "drchrono_oauth2": [
              "billing"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "access-patient-payments"
        ]
      }
    },
    "/api/day_sheet_totals": {
      "get": {
        "description": "Retrieve daysheet totals report for a given date range",
        "operationId": "daysheet_totals_list",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": {
              "description": "Start date of report (M/D/YYYY)",
              "title": "start_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": {
              "description": "End date of report (M/D/YYYY)",
              "title": "end_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "charges_date_type",
            "required": false,
            "schema": {
              "description": "Filters report by scheduled time or date of entry if not provided. Can be one of ('scheduled_time', ' ')",
              "title": "charges_date_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "report_type",
            "required": false,
            "schema": {
              "description": "Filters report by given value. Can be one of ('reimbursement_analysis', ' ')",
              "title": "report_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "credits_date_type",
            "required": false,
            "schema": {
              "description": "Filters report by date of service if receives value of 'check' otherwise defaults to posted date. Can be one of ('check', ' ')",
              "title": "credits_date_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "group_by",
            "required": false,
            "schema": {
              "description": "Groups data",
              "title": "group_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sub_group_by",
            "required": false,
            "schema": {
              "description": "Sub-groups data",
              "title": "sub_group_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tertiary_group_by",
            "required": false,
            "schema": {
              "description": "Tertiary Groups data",
              "title": "tertiary_group_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cash_view_type",
            "required": false,
            "schema": {
              "description": "Includes moved cash if value of 'simple' is passed. Can be one of ('simple', ' ')",
              "title": "cash_view_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "patient_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given patient ID",
              "title": "patient_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given office",
              "title": "office_id",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "examroom_id",
            "required": false,
            "schema": {
              "description": "Filters report by a given examroom ID",
              "title": "examroom_id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pg_mode",
            "required": false,
            "schema": {
              "description": "Runs report for all providers in the practice group",
              "title": "pg_mode",
              "type": "boolean"
            }
          }
        ],
        "security": [
          {
            "drchrono_oauth2": [
              "billing"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "access-patient-payments"
        ]
      }
    },
    "/api/doctors": {
      "get": {
        "description": "Retrieve or search doctors within practice group",
        "operationId": "doctors_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Doctor"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Administrative"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/doctors/{id}": {
      "get": {
        "description": "Retrieve an existing dcotor",
        "operationId": "doctors_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Doctor"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Administrative"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/documents": {
      "get": {
        "description": "Retrieve or search documents",
        "operationId": "documents_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/ScannedClinicalDocument"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create documents",
        "operationId": "documents_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannedClinicalDocument"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/documents/{id}": {
      "delete": {
        "description": "Delete an existing appointment template",
        "operationId": "documents_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing appointment template",
        "operationId": "documents_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannedClinicalDocument"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing appointment template",
        "operationId": "documents_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing appointment template",
        "operationId": "documents_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/eligibility_checks": {
      "get": {
        "description": "Retrieve or search past eligibility checks for patient",
        "operationId": "eligibility_checks_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "query_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "query_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "query_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "query_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Coverage"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling",
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/eligibility_checks/{id}": {
      "get": {
        "description": "Retrieve an existing past eligibility check",
        "operationId": "eligibility_checks_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "query_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "query_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "query_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "query_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coverage"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling",
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/eobs": {
      "get": {
        "description": "Retrieve or search EOB objects",
        "operationId": "eobs_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/EOBObject"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create EOB object",
        "operationId": "eobs_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EOBObject"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/eobs/{id}": {
      "get": {
        "description": "Retrieve an existing EOB object",
        "operationId": "eobs_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EOBObject"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/fee_schedules": {
      "get": {
        "operationId": "fee_schedules_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "description": "",
              "title": "code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "code_type",
            "required": false,
            "schema": {
              "description": "",
              "title": "code_type",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "payer_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "payer_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/DoctorFeeSchedule"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_fee_schedules\" need to be set for data access among practice"
      }
    },
    "/api/fee_schedules/{id}": {
      "get": {
        "operationId": "fee_schedules_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "description": "",
              "title": "code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "code_type",
            "required": false,
            "schema": {
              "description": "",
              "title": "code_type",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "payer_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "payer_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorFeeSchedule"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_fee_schedules\" need to be set for data access among practice"
      }
    },
    "/api/fee_schedules_v2": {
      "get": {
        "operationId": "fee_schedules_v2_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "payer_id",
            "required": false,
            "schema": {
              "description": "CSV of payer_ids",
              "title": "payer_id",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "plan_name",
            "required": false,
            "schema": {
              "description": "Name of the plan",
              "title": "plan_name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "specialities",
            "required": false,
            "schema": {
              "description": "CSV of specialities",
              "title": "specialities",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assignees",
            "required": false,
            "schema": {
              "description": "CSV of assignees",
              "title": "assignees",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assignee_type",
            "required": false,
            "schema": {
              "description": "Type of fee schedule, individual|speciality",
              "title": "assignee_type",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "effective_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ineffective_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/FeeSchedule"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": ""
      }
    },
    "/api/fee_schedules_v2/{id}": {
      "get": {
        "operationId": "fee_schedules_v2_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeSchedule"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": ""
      }
    },
    "/api/implantable_devices": {
      "get": {
        "description": "Retrieve or search implantable devices",
        "operationId": "implantable_devices_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/ImplantableDevice"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/implantable_devices/{id}": {
      "get": {
        "description": "Retrieve an existing implantable device",
        "operationId": "implantable_devices_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImplantableDevice"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/insurances": {
      "get": {
        "operationId": "insurances_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "One of `\"emdeon\"`, `\"gateway\"`, `\"ihcfa\"`",
            "in": "query",
            "name": "payer_type",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "Search term, which can be either a partial name, partial ID or the state.",
            "in": "query",
            "name": "term",
            "required": false,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Insurance"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/insurances/{id}": {
      "get": {
        "operationId": "insurances_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "One of `\"emdeon\"`, `\"gateway\"`, `\"ihcfa\"`",
            "in": "query",
            "name": "payer_type",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "Search term, which can be either a partial name, partial ID or the state.",
            "in": "query",
            "name": "term",
            "required": false,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insurance"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/inventory_categories": {
      "get": {
        "description": "Retrieve or search inventory categories",
        "operationId": "inventory_categories_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/InventoryCategory"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\" need to be set for data access among practice"
      }
    },
    "/api/inventory_categories/{id}": {
      "get": {
        "description": "Retrieve an existing inventory category",
        "operationId": "inventory_categories_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryCategory"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\" need to be set for data access among practice"
      }
    },
    "/api/inventory_vaccines": {
      "get": {
        "description": "Retrieve or search vaccine inventories",
        "operationId": "inventory_vaccines_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/InventoryVaccine"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create vaccine inventory",
        "operationId": "inventory_vaccines_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryVaccine"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\" need to be set for data access among practice"
      }
    },
    "/api/inventory_vaccines/{id}": {
      "get": {
        "description": "Retrieve an existing vaccine inventory",
        "operationId": "inventory_vaccines_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryVaccine"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\" need to be set for data access among practice"
      }
    },
    "/api/lab_documents": {
      "get": {
        "description": "Retrieve or search lab order documents",
        "operationId": "lab_documents_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LabOrderDocument"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create lab order documents. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
        "operationId": "lab_documents_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabOrderDocument"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_documents/{id}": {
      "delete": {
        "description": "Delete an existing lab order document",
        "operationId": "lab_documents_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing lab order document",
        "operationId": "lab_documents_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabOrderDocument"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing lab order document",
        "operationId": "lab_documents_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing lab order document",
        "operationId": "lab_documents_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_orders": {
      "get": {
        "description": "Retrieve or search lab orders",
        "operationId": "lab_orders_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LabOrder"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create lab orders. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
        "operationId": "lab_orders_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabOrder"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_orders/{id}": {
      "delete": {
        "description": "Delete an existing lab order",
        "operationId": "lab_orders_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing lab order",
        "operationId": "lab_orders_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabOrder"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing lab order",
        "operationId": "lab_orders_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing lab order",
        "operationId": "lab_orders_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_orders_summary": {
      "get": {
        "operationId": "lab_orders_summary_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LabOrder"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_orders_summary/{id}": {
      "get": {
        "operationId": "lab_orders_summary_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabOrder"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_results": {
      "get": {
        "description": "Retrieve or search lab results",
        "operationId": "lab_results_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LabResult"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create lab results. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
        "operationId": "lab_results_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResult"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_results/{id}": {
      "delete": {
        "description": "Delete an existing lab result",
        "operationId": "lab_results_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing lab result",
        "operationId": "lab_results_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing lab result",
        "operationId": "lab_results_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing lab result",
        "operationId": "lab_results_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_tests": {
      "get": {
        "description": "Retrieve or search lab tests",
        "operationId": "lab_tests_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LabTest"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create lab tests. An example lab workflow is as following:\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
        "operationId": "lab_tests_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabTest"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/lab_tests/{id}": {
      "delete": {
        "description": "Delete an existing lab test",
        "operationId": "lab_tests_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing lab test",
        "operationId": "lab_tests_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabTest"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing lab test",
        "operationId": "lab_tests_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing lab test",
        "operationId": "lab_tests_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "description": "",
              "title": "order",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/line_items": {
      "get": {
        "description": "Retrieve or search billing line items",
        "operationId": "line_items_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "date of line_item creation",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "Date on which the service was rendered",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/BillingLineItem"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create billing line item for appointments",
        "operationId": "line_items_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingLineItem"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/line_items/{id}": {
      "delete": {
        "operationId": "line_items_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "Date on which the service was rendered",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing billing line item",
        "operationId": "line_items_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "Date on which the service was rendered",
              "title": "service_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date_range",
            "required": false,
            "schema": {
              "description": "Bounded date range in which the service was rendered",
              "title": "service_date_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingLineItem"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "line_items_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "Date on which the service was rendered",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "line_items_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "Date on which the service was rendered",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/line_items_list": {
      "get": {
        "description": "Retrieve the list of billing line items",
        "operationId": "line_items_list_list",
        "parameters": [
          {
            "description": "The UUID token for the batch of patients.  This is returned in the response of the create endpoint.\n",
            "in": "query",
            "name": "uuid",
            "required": false,
            "schema": {
              "description": "",
              "title": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "results": {
                      "description": "result data. only presented when the status is \"completed\"",
                      "items": {
                        "$ref": "#/components/schemas/BillingLineItem"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"In progress\", \"Complete\", \"Failed\", \"Canceled\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the batch of billing line items.",
                      "title": "uuid",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create a billing line items list request",
        "operationId": "line_items_list_create",
        "parameters": [
          {
            "description": "Order results by a specific field. Valid options include [id, updated_at]. Default: id.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "Date of billing line item creation",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "Patient associated with the billing line item",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "Office associated with the billing line item",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "Date on which the service was rendered",
              "title": "service_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date_range",
            "required": false,
            "schema": {
              "description": "Bounded date range in which the service was rendered",
              "title": "service_date_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "UUID of the batch of billing line items.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"In progress\", \"Complete\", \"Failed\", \"Canceled\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "description": "Contains link to load the batch by UUID"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/line_item_deletions": {
      "get": {
        "operationId": "line_item_deletions_list",
        "description": "Retrieve or search billing line item deletions. When a billing line item is deleted, a record of its original ID and the appointment it was attached to will be logged and is accessible from this resource.\n",
        "parameters": [
          {
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "The datetime to query by",
              "title": "since",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "appointment_id",
            "required": false,
            "schema": {
              "description": "The original appointment ID to filter results by",
              "title": "appointment_id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated result",
                  "properties": {
                    "results": {
                      "description": "Result data",
                      "items": {
                        "$ref": "#/components/schemas/BillingLineItemDeletion"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/medications": {
      "get": {
        "description": "Retrieve or search patient medications",
        "operationId": "medications_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientDrug"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient medications",
        "operationId": "medications_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDrug"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/medications/{id}": {
      "get": {
        "description": "Retrieve an existing patient medications",
        "operationId": "medications_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDrug"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient medications",
        "operationId": "medications_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient medications",
        "operationId": "medications_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/medications/{id}/append_to_pharmacy_note": {
      "patch": {
        "description": "Append a message to the \"pharmacy_note\" section of the prescription, in a new paragraph",
        "operationId": "medications_append_to_pharmacy_note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/messages": {
      "get": {
        "description": "Retrieve or search messages in doctor's message center",
        "operationId": "messages_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "responsible_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "responsible_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "updated_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "updated_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "received_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "received_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "description": "",
              "title": "owner",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/DoctorMessage"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create messages in doctor's message center",
        "operationId": "messages_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "responsible_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "responsible_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "updated_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "updated_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "received_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "received_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "description": "",
              "title": "owner",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorMessage"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      }
    },
    "/api/messages/{id}": {
      "delete": {
        "description": "Delete an existing message in doctor's message center",
        "operationId": "messages_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "responsible_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "responsible_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "updated_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "updated_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "received_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "received_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "description": "",
              "title": "owner",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing message in doctor's message center",
        "operationId": "messages_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "responsible_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "responsible_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "updated_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "updated_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "received_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "received_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "description": "",
              "title": "owner",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorMessage"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing message in doctor's message center",
        "operationId": "messages_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "responsible_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "responsible_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "updated_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "updated_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "received_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "received_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "description": "",
              "title": "owner",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing message in doctor's message center",
        "operationId": "messages_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "responsible_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "responsible_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "updated_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "updated_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "received_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "received_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "description": "",
              "title": "owner",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "",
              "title": "type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      }
    },
    "/api/offices": {
      "get": {
        "description": "Retrieve or search offices",
        "operationId": "offices_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Office"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/offices/{id}": {
      "get": {
        "description": "Retrieve an existing office",
        "operationId": "offices_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Office"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing office",
        "operationId": "offices_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing office",
        "operationId": "offices_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/offices/{id}/add_exam_room": {
      "post": {
        "description": "Add an exam room to the office",
        "operationId": "offices_add_exam_room",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Office"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "user:read",
              "user:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/patient_communications": {
      "get": {
        "description": "Retrieve or search patient communications for CQM",
        "operationId": "patient_communications_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientCommunication"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient communication for CQM",
        "operationId": "patient_communications_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientCommunication"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_authorizations": {
      "get": {
        "description": "Retrieve or search patient authorizations",
        "operationId": "patient_authorizations_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientAuthorization"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": null,
        "tags": [
          "Billing"
        ],
        "x-permissions": null,
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_communications/{id}": {
      "get": {
        "description": "Retrieve an existing patient communication for CQM",
        "operationId": "patient_communications_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientCommunication"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient communication for CQM",
        "operationId": "patient_communications_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient communication for CQM",
        "operationId": "patient_communications_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_flag_types": {
      "get": {
        "description": "Retrieve or search patient flag types",
        "operationId": "patient_flag_types_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientFlagType"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient flag types",
        "operationId": "patient_flag_types_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientFlagType"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_flag_types/{id}": {
      "get": {
        "description": "Retrieve an existing patient flag type",
        "operationId": "patient_flag_types_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientFlagType"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient flag type",
        "operationId": "patient_flag_types_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient flag type",
        "operationId": "patient_flag_types_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "settings:read",
              "settings:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "settings"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_interventions": {
      "get": {
        "description": "Retrieve or search patient interventions for CQM",
        "operationId": "patient_interventions_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientIntervention"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient intervention for CQM",
        "operationId": "patient_interventions_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientIntervention"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_interventions/{id}": {
      "get": {
        "description": "Retrieve an existing patient intervention for CQM",
        "operationId": "patient_interventions_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientIntervention"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient intervention for CQM",
        "operationId": "patient_interventions_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient intervention for CQM",
        "operationId": "patient_interventions_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_lab_results": {
      "get": {
        "operationId": "patient_lab_results_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ordering_doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "ordering_doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientLabResultSet"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "operationId": "patient_lab_results_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "ordering_doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "ordering_doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientLabResultSet"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_lab_results/{id}": {
      "delete": {
        "operationId": "patient_lab_results_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ordering_doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "ordering_doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "operationId": "patient_lab_results_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ordering_doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "ordering_doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientLabResultSet"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "patient_lab_results_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ordering_doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "ordering_doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "patient_lab_results_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ordering_doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "ordering_doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write",
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_messages": {
      "get": {
        "operationId": "patient_messages_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientMessage"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "post": {
        "operationId": "patient_messages_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientMessage"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      }
    },
    "/api/patient_messages/{id}": {
      "get": {
        "operationId": "patient_messages_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientMessage"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "patient_messages_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "patient_messages_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write",
              "messages:read",
              "messages:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients",
          "message-center"
        ],
        "x-practice-access": "\"share_communications\" need to be set for data access among practice"
      }
    },
    "/api/patient_payment_log": {
      "get": {
        "description": "Retrieve or search patient payment logs",
        "operationId": "patient_payment_log_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CashPaymentLog"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_payment_log/{id}": {
      "get": {
        "description": "Retrieve an existing patient payment log",
        "operationId": "patient_payment_log_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashPaymentLog"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_payments": {
      "get": {
        "description": "Retrieve or search patient payments",
        "operationId": "patient_payments_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/CashPayment"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:patient-payment:read",
              "billing:patient-payment:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "access-patient-payments",
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient payment",
        "operationId": "patient_payments_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashPayment"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:patient-payment:read",
              "billing:patient-payment:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "access-patient-payments",
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_payments/{id}": {
      "get": {
        "description": "Retrieve an existing patient payment",
        "operationId": "patient_payments_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashPayment"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:patient-payment:read",
              "billing:patient-payment:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "access-patient-payments",
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_physical_exams": {
      "get": {
        "description": "Retrieve or search patient physical exams for CQM",
        "operationId": "patient_physical_exams_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientPhysicalExam"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient physical exam for CQM",
        "operationId": "patient_physical_exams_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPhysicalExam"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_physical_exams/{id}": {
      "get": {
        "description": "Retrieve an existing patient physical exam for CQM",
        "operationId": "patient_physical_exams_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPhysicalExam"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient physical exam for CQM",
        "operationId": "patient_physical_exams_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient physical exam for CQM",
        "operationId": "patient_physical_exams_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_risk_assessments": {
      "get": {
        "operationId": "patient_risk_assessments_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientRiskAssessment"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "operationId": "patient_risk_assessments_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientRiskAssessment"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_risk_assessments/{id}": {
      "get": {
        "operationId": "patient_risk_assessments_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientRiskAssessment"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "patient_risk_assessments_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "patient_risk_assessments_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_vaccine_records": {
      "get": {
        "description": "Retrieve or search patient vaccine records",
        "operationId": "patient_vaccine_records_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientVaccineRecord"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\", \"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient vaccine records",
        "operationId": "patient_vaccine_records_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientVaccineRecord"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\", \"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patient_vaccine_records/{id}": {
      "get": {
        "description": "Retrieve an existing patient vaccine records",
        "operationId": "patient_vaccine_records_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientVaccineRecord"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\", \"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient vaccine records",
        "operationId": "patient_vaccine_records_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\", \"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient vaccine records",
        "operationId": "patient_vaccine_records_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cvx_code",
            "required": false,
            "schema": {
              "description": "",
              "title": "cvx_code",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_inventory\", \"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients": {
      "get": {
        "description": "Retrieve or search patients",
        "operationId": "patients_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Patient"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient",
        "operationId": "patients_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/clinical_note_field_values_list": {
      "get": {
        "description": "Retrieve or search clinical note values (soap notes) in batches. Results returned in order of ID or by updated_at.",
        "operationId": "clinical_note_field_values_list_list",
        "parameters": [
          {
            "description": "The UUID token for the batch of requested data. This is returned in the response of the `create` endpoint.\n",
            "in": "query",
            "name": "uuid",
            "required": false,
            "schema": {
              "description": "",
              "title": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "results": {
                      "description": "result data. only presented when the status is \"Complete\"",
                      "items": {
                        "$ref": "#/components/schemas/SoapNoteLineItemFieldValue"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"Pending\", \"Complete\", \"In progress\", \"Error\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "pagination": {
                      "type": "object",
                      "title": "pagination",
                      "description": "information on the total pages, current page and total count.",
                      "properties": {
                        "count": {
                          "description": "the count of all records in the result set.",
                          "title": "count",
                          "type": "int"
                        },
                        "pages": {
                          "description": "the total pages of all pages in the result set.",
                          "title": "pages",
                          "type": "int"
                        },
                        "page": {
                          "description": "the current page (starting with 1) in the total pages.",
                          "title": "page",
                          "type": "int"
                        }
                      }
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create clinical note field value list request.  Use the UUID returned in the response to retrieve the batch of records. Results returned in order of ID.\n",
        "operationId": "clinical_note_field_values_list_create",
        "parameters": [
          {
            "description": "Order results by a specific field. Valid options include [id, updated_at]. Default: id.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page. Value between 1 and 20000.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "description": "Number of page to return. Value between 1 and max number of pages in result set.",
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "Inclusive lower bound on updated_at",
              "title": "since",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "Appointment ID filter",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "clinical_note_template",
            "required": false,
            "schema": {
              "description": "ID of clinical note report template",
              "title": "clinical_note_template",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request. Upon creation this will be \"In progress\"",
                      "title": "status",
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "title": "description",
                      "description": "Contains link to load the batch by UUID"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/eligibility_checks_list": {
      "get": {
        "description": "Retrieve or search eligibility checks in batches. Results returned in order of ID or updated_at.",
        "operationId": "eligibility_checks_list_list",
        "parameters": [
          {
            "description": "The UUID token for the batch of clinical notes.  This is returned in the response of the `create` endpoint.\n",
            "in": "query",
            "name": "uuid",
            "required": false,
            "schema": {
              "description": "",
              "title": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "results": {
                      "description": "result data. only presented when the status is \"Complete\"",
                      "items": {
                        "$ref": "#/components/schemas/Coverage"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"Pending\", \"Complete\", \"In progress\", \"Error\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the batch.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "pagination": {
                      "type": "object",
                      "title": "pagination",
                      "description": "information on the total pages, current page and total count.",
                      "properties": {
                        "count": {
                          "description": "the count of all records in the result set.",
                          "title": "count",
                          "type": "int"
                        },
                        "pages": {
                          "description": "the total pages of all pages in the result set.",
                          "title": "pages",
                          "type": "int"
                        },
                        "page": {
                          "description": "the current page (starting with 1) in the total pages.",
                          "title": "page",
                          "type": "int"
                        }
                      }
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "patients:read"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create eligibility checks list request.  Use the UUID returned in the response to retrieve the batch of records. Results returned in order of id or updated_at.\n",
        "operationId": "eligibility_checks_list_create",
        "parameters": [
          {
            "description": "Order results by a specific field. Valid options include [id, updated_at]. Default: id.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "description": "Number of results to return per page. Value between 1 and 1000.",
            "schema": {
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Number of page to return. Value between 1 and max number of pages in result set.",
            "schema": {
              "title": "page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "since",
            "required": false,
            "description": "Inclusive lower bound on record updated/created time",
            "schema": {
              "title": "since",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "patient",
            "required": false,
            "description": "Patient ID filter",
            "schema": {
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "appointment_date_range",
            "required": false,
            "description": "Inclusive bounded date range on appointment scheduled date",
            "schema": {
              "title": "appointment_date_range",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "appointment_date",
            "required": false,
            "description": "Filter on specific appointment scheduled date",
            "schema": {
              "title": "appointment_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "query_date_range",
            "required": false,
            "description": "Inclusive bounded date range on eligibility check date",
            "schema": {
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "query_date",
            "required": false,
            "description": "Filter on specific eligibility check date",
            "schema": {
              "title": "query_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "service_types",
            "required": false,
            "description": "Filter for checks included within a comma-separated list of service type codes (STCs)",
            "schema": {
              "title": "service_types",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "description": "When True includes full coverage details",
            "schema": {
              "title": "verbose",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request. Upon creation this will be \"In progress\"",
                      "title": "status",
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "description": "Contains link to load the batch by UUID"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/clinical_notes_list": {
      "get": {
        "description": "Retrieve or search clinical notes in batches. Results returned in order of ID.",
        "operationId": "clinical_notes_list_list",
        "parameters": [
          {
            "description": "The UUID token for the batch of clinical notes.  This is returned in the response of the `create` endpoint.\n",
            "in": "query",
            "name": "uuid",
            "required": false,
            "schema": {
              "description": "",
              "title": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "results": {
                      "description": "result data. only presented when the status is \"Complete\"",
                      "items": {
                        "$ref": "#/components/schemas/ClinicalNote"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"Pending\", \"Complete\", \"In progress\", \"Error\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "pagination": {
                      "type": "object",
                      "title": "pagination",
                      "description": "information on the total pages, current page and total count.",
                      "properties": {
                        "count": {
                          "description": "the count of all records in the result set.",
                          "title": "count",
                          "type": "int"
                        },
                        "pages": {
                          "description": "the total pages of all pages in the result set.",
                          "title": "pages",
                          "type": "int"
                        },
                        "page": {
                          "description": "the current page (starting with 1) in the total pages.",
                          "title": "page",
                          "type": "int"
                        }
                      }
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create clinical note list request.  Use the UUID returned in the response to retrieve the batch of records. Results returned in order of ID.\n",
        "operationId": "clinical_notes_list_create",
        "parameters": [
          {
            "description": "Order results by a specific field. Valid options include [id, updated_at]. Default: id.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page. Value between 1 and 1000.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "description": "Number of page to return. Value between 1 and max number of pages in result set.",
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "description": "Patient ID filter",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "Patient ID filter",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "Office ID filter",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "description": "Office ID filter",
              "title": "office",
              "type": "integer"
            }
          },
          {
            "description": "Doctor ID filter",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "Doctor ID filter",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "Inclusive lower bound on clinical note updated/created time.",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "Inclusive lower bound on clinical note updated/created time.",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "Inclusive bounded date range on appointment scheduled date",
            "in": "query",
            "name": "date_range",
            "required": false,
            "schema": {
              "description": "Inclusive bounded date range on appointment scheduled date",
              "title": "date_range",
              "type": "string"
            }
          },
          {
            "description": "Filter on specific appointment scheduled date",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "description": "Filter on specific appointment scheduled date",
              "title": "date",
              "type": "string"
            }
          },
          {
            "description": "When `true` includes yellow notes",
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "When `true` includes yellow notes",
              "title": "verbose",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request. Upon creation this will be \"In progress\"",
                      "title": "status",
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "description": "Contains link to load the batch by UUID"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_clinical_templates\" need to be set for data access among practice"
      }
    },
    "/api/patients_list": {
      "description": "",
      "get": {
        "description": "Retrieve or search patients in batches. This resource returns identical data to `GET /api/patients` but uses an asynchronous batch-based approach to data delivery. This is an efficient choice for large historical record loading use cases. Retrieve the results/status of a previously created patient_list request using the UUID returned in the response. Results are ordered by patient ID number.\n",
        "operationId": "patients_list_list",
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "required": true,
            "description": "The UUID token for submitted batch request. This is returned in the response of the create request.\n",
            "schema": {
              "description": "",
              "title": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "title": "",
                  "type": "object",
                  "properties": {
                    "results": {
                      "description": "result data. only presented when the status is \"Complete\"",
                      "items": {
                        "$ref": "#/components/schemas/Patient"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"In progress\", \"Complete\", \"Error\".",
                      "title": "status",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the batch request.",
                      "title": "uuid",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request."
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found. The UUID is not found, or, it has expired. UUIDs have a 1 hour lifetime."
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice",
        "x-verbose-required": [
          "auto_accident_insurance",
          "custom_demographics",
          "patient_flags",
          "patient_flags_attached",
          "primary_insurance",
          "referring_doctor",
          "secondary_insurance",
          "tertiary_insurance",
          "workers_comp_insurance"
        ]
      },
      "post": {
        "description": "Submit patient list request.  Use the UUID returned in the response to retrieve the batch of patients.\n",
        "operationId": "patients_list_create",
        "parameters": [
          {
            "description": "Order results by a specific field. Valid options include [id, updated_at]. Default: id.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page. Number between 1 and 1000.",
              "title": "Page size",
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "Filter the list for the patient's first name.",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "Filter the list for the patient's last name.",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "Filter the list for the patient's preferred language.",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for the patient's gender.",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for when the patient was created or updated.  The value should be a date in the format YYYY-MM-DD.  For example, to filter for patients created or updated on or after 2019-01-01, use the value 2019-01-01.\n",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for the patient's date of birth.  The value should be a date in the format YYYY-MM-DD.  For example, to filter for patients born on 2019-01-01, use the value 2019-01-01.\n",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for the patients' race.",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for the patients' chart id.",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for the patients' email.",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "Filter the list for the patients' ethnicity.",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          },
          {
            "description": "when `true` include additional verbose fields in the response.",
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"In progress\", \"Complete\", \"Error\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "description": "Contains link to load the batch by UUID"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients/{id}": {
      "delete": {
        "description": "Delete an existing patient",
        "operationId": "patients_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing patient",
        "operationId": "patients_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient",
        "operationId": "patients_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient",
        "operationId": "patients_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients/{id}/ccda": {
      "get": {
        "description": "Retrieve patient CCDA",
        "operationId": "patients_ccda",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/xml": {
                "schema": {
                  "description": "",
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients/{id}/onpatient_access": {
      "delete": {
        "description": "Revoke sent onpatient invites",
        "operationId": "patients_onpatient_access_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve or search existing onpatient access invites",
        "operationId": "patients_onpatient_access_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Send new onpatient invite to patient",
        "operationId": "patients_onpatient_access_create",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients/{id}/qrda1": {
      "get": {
        "description": "Retrieve patient QRDA1",
        "operationId": "patients_qrda1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "preferred_language",
            "required": false,
            "schema": {
              "description": "",
              "title": "preferred_language",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "race",
            "required": false,
            "schema": {
              "description": "",
              "title": "race",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "chart_id",
            "required": false,
            "schema": {
              "description": "",
              "title": "chart_id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "",
              "title": "email",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ethnicity",
            "required": false,
            "schema": {
              "description": "",
              "title": "ethnicity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/xml": {
                "schema": {
                  "description": "",
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:read",
              "patients:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients_summary": {
      "get": {
        "operationId": "patients_summary_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Patient"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:summary:read",
              "patients:summary:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "operationId": "patients_summary_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:summary:read",
              "patients:summary:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/patients_summary/{id}": {
      "delete": {
        "operationId": "patients_summary_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:summary:read",
              "patients:summary:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "get": {
        "operationId": "patients_summary_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:summary:read",
              "patients:summary:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "patients_summary_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:summary:read",
              "patients:summary:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "patients_summary_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "first_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "description": "",
              "title": "last_name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "description": "",
              "title": "gender",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "schema": {
              "description": "",
              "title": "date_of_birth",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "patients:summary:read",
              "patients:summary:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "manage-patients"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/prescription_messages": {
      "get": {
        "description": "Retrieve or search prescription messages",
        "operationId": "prescription_messages_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_message",
            "required": false,
            "schema": {
              "description": "",
              "title": "parent_message",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PrescriptionMessage"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/prescription_messages/{id}": {
      "get": {
        "description": "Retrieve an existing prescription message",
        "operationId": "prescription_messages_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_message",
            "required": false,
            "schema": {
              "description": "",
              "title": "parent_message",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionMessage"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/problems": {
      "get": {
        "description": "Retrieve or search patient problems",
        "operationId": "problems_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/PatientProblem"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create patient problems",
        "operationId": "problems_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientProblem"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/problems/{id}": {
      "get": {
        "description": "Retrieve an existing patient problems",
        "operationId": "problems_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientProblem"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing patient problems",
        "operationId": "problems_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing patient problems",
        "operationId": "problems_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/procedures": {
      "get": {
        "operationId": "procedures_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Procedure"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/procedures/{id}": {
      "get": {
        "operationId": "procedures_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "patient",
            "required": false,
            "schema": {
              "description": "",
              "title": "patient",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "mu_date_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "mu_date_range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "service_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "service_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Procedure"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/reminder_profiles": {
      "get": {
        "description": "Retrieve or search reminder profiles",
        "operationId": "reminder_profiles_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/ReminderProfile"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_reminder_profile\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create reminder profile",
        "operationId": "reminder_profiles_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderProfile"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_reminder_profile\" need to be set for data access among practice"
      }
    },
    "/api/reminder_profiles/{id}": {
      "delete": {
        "description": "Delete an existing reminder profile",
        "operationId": "reminder_profiles_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_reminder_profile\" need to be set for data access among practice"
      },
      "get": {
        "description": "Retrieve an existing reminder profile",
        "operationId": "reminder_profiles_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderProfile"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_reminder_profile\" need to be set for data access among practice"
      },
      "patch": {
        "description": "Update an existing reminder profile",
        "operationId": "reminder_profiles_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_reminder_profile\" need to be set for data access among practice"
      },
      "put": {
        "description": "Update an existing reminder profile",
        "operationId": "reminder_profiles_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling"
        ],
        "x-practice-access": "\"share_reminder_profile\" need to be set for data access among practice"
      }
    },
    "/api/staff": {
      "get": {
        "operationId": "staff_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Staff"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": []
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/staff/{id}": {
      "get": {
        "operationId": "staff_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Staff"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": []
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/sublabs": {
      "get": {
        "description": "Retrieve or search sub vendors",
        "operationId": "sublabs_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LabVendorLocation"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "description": "Create sub-vendors\n\n- When you get orders, submit them via `/api/lab_orders`, such that doctors can see them in drchrono.\n\n- When results come in, submit the result document PDF via `/api/lab_documents` and submit the results data via `/api/lab_results`\n\n- Update `/api/lab_orders` status\n",
        "operationId": "sublabs_create",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabVendorLocation"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/sublabs/{id}": {
      "delete": {
        "description": "Delete an existing sub vendor",
        "operationId": "sublabs_delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "A unique integer value identifying this lab vendor location.",
              "title": "ID",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "get": {
        "description": "Retrieve an existing sub vendor",
        "operationId": "sublabs_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "A unique integer value identifying this lab vendor location.",
              "title": "ID",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabVendorLocation"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing sub vendor",
        "operationId": "sublabs_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "A unique integer value identifying this lab vendor location.",
              "title": "ID",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing sub vendor",
        "operationId": "sublabs_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "A unique integer value identifying this lab vendor location.",
              "title": "ID",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "labs:read",
              "labs:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_categories": {
      "get": {
        "description": "Retrieve or search task categories",
        "operationId": "task_categories_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/TaskCategory"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "description": "Create a task category",
        "operationId": "task_categories_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCategory"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_categories/{id}": {
      "get": {
        "description": "Retrieve an existing task category",
        "operationId": "task_categories_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCategory"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing task category",
        "operationId": "task_categories_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing task category",
        "operationId": "task_categories_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_notes": {
      "get": {
        "description": "Retrieve or search task notes",
        "operationId": "task_notes_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "task",
            "required": false,
            "schema": {
              "description": "",
              "title": "task",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/TaskNote"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "description": "Create a task note",
        "operationId": "task_notes_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "task",
            "required": false,
            "schema": {
              "description": "",
              "title": "task",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskNote"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_notes/{id}": {
      "get": {
        "description": "Retrieve an existing task note",
        "operationId": "task_notes_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "task",
            "required": false,
            "schema": {
              "description": "",
              "title": "task",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskNote"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing task note",
        "operationId": "task_notes_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "task",
            "required": false,
            "schema": {
              "description": "",
              "title": "task",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing task note",
        "operationId": "task_notes_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "task",
            "required": false,
            "schema": {
              "description": "",
              "title": "task",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_statuses": {
      "get": {
        "description": "Retrieve or search task statuses",
        "operationId": "task_statuses_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/TaskStatus"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "description": "Create a task status",
        "operationId": "task_statuses_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_statuses/{id}": {
      "get": {
        "description": "Retrieve an existing task status",
        "operationId": "task_statuses_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing task status",
        "operationId": "task_statuses_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing task status",
        "operationId": "task_statuses_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_templates": {
      "get": {
        "description": "Retrieve or search task templates",
        "operationId": "task_templates_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/TaskTemplate"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "description": "Create a task template",
        "operationId": "task_templates_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/task_templates/{id}": {
      "get": {
        "description": "Retrieve an existing task template",
        "operationId": "task_templates_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing task template",
        "operationId": "task_templates_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing task template",
        "operationId": "task_templates_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/tasks": {
      "get": {
        "description": "Retrieve or search tasks",
        "operationId": "tasks_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_unknown",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_unknown",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "description": "Create a task",
        "operationId": "tasks_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_unknown",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_unknown",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "description": "Retrieve an existing task",
        "operationId": "tasks_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_unknown",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_unknown",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "patch": {
        "description": "Update an existing task",
        "operationId": "tasks_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_unknown",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_unknown",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      },
      "put": {
        "description": "Update an existing task",
        "operationId": "tasks_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "",
              "title": "status",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "description": "",
              "title": "category",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_unknown",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_unknown",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_since",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_user",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_user",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assignee_group",
            "required": false,
            "schema": {
              "description": "",
              "title": "assignee_group",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_at_range",
            "required": false,
            "schema": {
              "description": "",
              "title": "due_at_range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "tasks:read",
              "tasks:write"
            ]
          }
        ],
        "tags": [
          "Practice Management"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/telehealth_appointment_history": {
      "get": {
        "operationId": "telehealth_appointment_history_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/TelemedicineAppointmentEventLog"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "Data access among practice is available"
      },
      "post": {
        "operationId": "telehealth_appointment_history_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicineAppointmentEventLog"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/telehealth_appointment_history/{id}": {
      "get": {
        "operationId": "telehealth_appointment_history_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicineAppointmentEventLog"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/telehealth_appointments": {
      "get": {
        "operationId": "telehealth_appointments_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/TelemedicineAppointment"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "operationId": "telehealth_appointments_create",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicineAppointment"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/telehealth_appointments/{id}": {
      "get": {
        "operationId": "telehealth_appointments_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicineAppointment"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "patch": {
        "operationId": "telehealth_appointments_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "put": {
        "operationId": "telehealth_appointments_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "calendar:read",
              "calendar:write",
              "clinical:read",
              "clinical:write"
            ]
          }
        ],
        "tags": [
          "Clinical"
        ],
        "x-permissions": [
          "scheduling",
          "clinical-notes"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/transactions": {
      "get": {
        "description": "Retrieve or search insurance transactions associated with billing line items",
        "operationId": "transactions_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "line_item",
            "required": false,
            "schema": {
              "description": "",
              "title": "line_item",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/LineItemTransaction"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/transactions/{id}": {
      "get": {
        "description": "Retrieve an existing insurance transaction",
        "operationId": "transactions_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "line_item",
            "required": false,
            "schema": {
              "description": "",
              "title": "line_item",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "posted_date",
            "required": false,
            "schema": {
              "description": "",
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "appointment",
            "required": false,
            "schema": {
              "description": "",
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "description": "",
              "title": "since",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemTransaction"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/transactions_list": {
      "get": {
        "description": "Retrieve or search transactions in batches. Results returned in order of ID or updated_at.",
        "operationId": "transactions_list_list",
        "parameters": [
          {
            "description": "The UUID token for the batch of transactions.  This is returned in the response of the `create` endpoint.\n",
            "in": "query",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "The UUID token for the batch of transactions",
              "title": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "results": {
                      "description": "result data. only presented when the status is \"Complete\"",
                      "items": {
                        "$ref": "#/components/schemas/LineItemTransaction"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the request.  Possible values are \"Pending\", \"Complete\", \"In progress\", \"Error\".\n",
                      "title": "status",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the batch.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "pagination": {
                      "type": "object",
                      "title": "pagination",
                      "description": "information on the total pages, current page and total count.",
                      "properties": {
                        "count": {
                          "description": "the count of all records in the result set.",
                          "title": "count",
                          "type": "int"
                        },
                        "pages": {
                          "description": "the total pages of all pages in the result set.",
                          "title": "pages",
                          "type": "int"
                        },
                        "page": {
                          "description": "the current page (starting with 1) in the total pages.",
                          "title": "page",
                          "type": "int"
                        }
                      }
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      },
      "post": {
        "description": "Create transactions list request.  Use the UUID returned in the response to retrieve the batch of records. Results returned in order of id or updated_at.\n",
        "operationId": "transactions_list_create",
        "parameters": [
          {
            "description": "Order results by a specific field. Valid options include [id, updated_at]. Default: id.",
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "title": "order_by",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "description": "Number of results to return per page. Value between 1 and 1000.",
            "schema": {
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Number of page to return. Value between 1 and max number of pages in result set.",
            "schema": {
              "title": "page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "line_item",
            "required": false,
            "description": "Line item ID",
            "schema": {
              "title": "line_item",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "posted_date",
            "required": false,
            "description": "Posted date",
            "schema": {
              "title": "posted_date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "appointment",
            "required": false,
            "description": "appointment",
            "schema": {
              "title": "appointment",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "since",
            "required": false,
            "description": "since",
            "schema": {
              "title": "since",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "doctor",
            "required": false,
            "description": "doctor",
            "schema": {
              "title": "doctor",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "description": "When True includes full details",
            "schema": {
              "title": "verbose",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "UUID of the batch of patients.",
                      "title": "uuid",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request. Upon creation this will be \"In progress\"",
                      "title": "status",
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "description": "Contains link to load the batch by UUID"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": [
              "billing:read",
              "billing:write"
            ]
          }
        ],
        "tags": [
          "Billing"
        ],
        "x-permissions": [
          "billing",
          "show-billing-tab"
        ],
        "x-practice-access": "\"share_patients\" need to be set for data access among practice"
      }
    },
    "/api/user_groups": {
      "get": {
        "description": "Retrieve or search user groups",
        "operationId": "user_groups_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/UserProfilesGroup"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": []
          }
        ],
        "tags": [
          "Administrative"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/user_groups/{id}": {
      "get": {
        "description": "Retrieve an existing user group",
        "operationId": "user_groups_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfilesGroup"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": []
          }
        ],
        "tags": [
          "Administrative"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/users": {
      "get": {
        "description": "Retrieve or search users, `/api/users/current` can be used to identify logged in user, it will redirect to `/api/users/{current_user_id}`",
        "operationId": "users_list",
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "description": "The pagination cursor value.",
              "title": "Cursor",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "description": "Number of results to return per page.",
              "title": "Page size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated Result",
                  "properties": {
                    "data": {
                      "description": "result data",
                      "items": {
                        "$ref": "#/components/schemas/UserProfile"
                      },
                      "title": "data",
                      "type": "array"
                    },
                    "next": {
                      "description": "Next Paginated page",
                      "title": "next",
                      "type": "string"
                    },
                    "previous": {
                      "description": "Previous paginated page",
                      "title": "previous",
                      "type": "string"
                    }
                  },
                  "title": "",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": []
          }
        ],
        "tags": [
          "Administrative"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "/api/users/{id}": {
      "get": {
        "description": "Retrieve an existing user, `/api/users/current` can be used to identify logged in user, it will redirect to `/api/users/{current_user_id}`",
        "operationId": "users_read",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "",
              "title": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doctor",
            "required": false,
            "schema": {
              "description": "",
              "title": "doctor",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Permission Denied"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "405": {
            "content": {},
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "drchrono_oauth2": []
          }
        ],
        "tags": [
          "Administrative"
        ],
        "x-permissions": [],
        "x-practice-access": "Data access among practice is available"
      }
    },
    "description": "The Telehealth Appointment endpoint is an extension of the existing Appointment endpoint.",
    "properties": {
      "appointment": {
        "description": "The Appointment related to the Telehealth Appointment, analagous to the /api/appointments resource id"
      },
      "created_at": {
        "description": "UTC Timestamp for when the Telehealth Appointment was created"
      },
      "duration": {
        "description": "Length of an appointment in minutes"
      },
      "overlapping_duration": {
        "description": "The duration that counts only if patient and doctor are in the video room"
      },
      "sent_patient_email": {
        "description": "Whether a confirmation email was sent to the Patient or not"
      },
      "telehealth_url": {
        "description": "URL used to access Telehealth Appointment"
      },
      "updated_at": {
        "description": "UTC Timestamp for when the Telehealth Appointment was updated"
      }
    }
  },
  "servers": [
    {
      "description": "Proxy server",
      "url": "https://drchrono-com.dataman.ai"
    }
  ],
  "tags": [
    {
      "description": "Create and manage administrative resources",
      "name": "Administrative"
    },
    {
      "description": "Search Audit Logs",
      "name": "Audit"
    },
    {
      "description": "Create and manage clinical resources",
      "name": "Clinical"
    },
    {
      "description": "Create and manage billing resources",
      "name": "Billing"
    },
    {
      "description": "Create and manage practice management resources",
      "name": "Practice Management"
    }
  ],
  "x-origin-servers": [
    {
      "url": "https://app.drchrono.com"
    }
  ]
}