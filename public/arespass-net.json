{
  "openapi": "3.0.0",
  "info": {
    "title": "Arespass",
    "description": "Analyzes a password and calculates its entropy.",
    "version": "1.0"
  },
  "servers": [
    {
      "description": "Proxy server",
      "url": "https://arespass-net.dataman.ai"
    }
  ],
  "paths": {
    "/ec": {
      "get": {
        "summary": "The entropy calculator - alias ec -, analyzes a password and calculates its entropy.\n\nEntropy calculator requests are billed.\n",
        "parameters": [
          {
            "in": "query",
            "name": "password",
            "description": "**The password to be analyzed.**\n\nMinimum length is 4 characters; maximum length is 128 characters.\n\nBeware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.\n\nFor more information about this issue, please refer to RFC 3986 (\"*Uniform Resource Identifier (URI): Generic Syntax*\"), sections 2.1, 2.2 and 2.4.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "outputFormat",
            "description": "**The format of the returned analysis.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "penalty",
            "description": "**The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nThe character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.\n\nThe default value is *0.25*.\n",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "reqId",
            "description": "**An identifier for this request.**\n\nThe request identifier is a string that must match the regular expression */(?i)^[a-z0-9]{8,16}$/*.\n\nThis identifier is echoed in the returned response. Its value has no effect on the password analysis.\n\nIf this parameter is unset, a randomly generated identifier will be automatically assigned to this request.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The password analysis, including the calculated entropy.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ec"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ec"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ec"
                }
              }
            }
          },
          "400": {
            "description": "**At least one error was found in the request parameters.**\n"
          },
          "405": {
            "description": "**HTTP method POST is not allowed.**\n"
          },
          "500": {
            "description": "**Unexpected server error.**\n"
          }
        }
      }
    },
    "/about": {
      "get": {
        "summary": "Metadata about this API&#58; version number, release date and available languages.\n\nMetadata requests are NOT billed.\n",
        "parameters": [
          {
            "in": "query",
            "name": "outputFormat",
            "description": "**The format of the returned metadata.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**The metadata about this API&#58; version number, release date and available languages.**\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/about"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/about"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "$ref": "#/components/schemas/about"
                }
              }
            }
          },
          "400": {
            "description": "**At least one error was found in the request parameters.**\n"
          },
          "405": {
            "description": "**HTTP method POST is not allowed.**\n"
          },
          "500": {
            "description": "**Unexpected server error.**                \n"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ec": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "**A human-readable summary of the password analysis.**\n\nThis human readable summary is not intended to be parsed.\n"
            }
          },
          "password": {
            "type": "string",
            "description": "The analyzed password."
          },
          "l33tPassword": {
            "type": "string",
            "description": "The analyzed password after the l33t substitution."
          },
          "passwordLength": {
            "type": "integer",
            "description": "The number of characters the password has."
          },
          "penalty": {
            "type": "number",
            "description": "**The penalty applied to each character that has been found to be part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nIts value is equal to the value of the input parameter *penalty*.\n"
          },
          "entropy": {
            "type": "number",
            "description": "**The entropy calculated for the input password.**\n\nIt is measured in bits.\n"
          },
          "idealEntropy": {
            "type": "number",
            "description": "**The Shannon entropy.**\n\nThe Shannon entropy is the entropy calculated if no penalizations - words, number sequence, alphabet sequence, etc - were found in the password.\n\nIt is measured in bits.\n"
          },
          "efficiency": {
            "type": "number",
            "description": "**The ratio entropy / idealEntropy.**\n\nIt is a float number in the range [0, 1].\n"
          },
          "entropyDistribution": {
            "type": "array",
            "description": "**The distribution of the calculated entropy among the password characters.**\n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "percentage": {
                  "type": "number",
                  "description": "The amount of entropy contributed by this character, expressed as percentage of the total.",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "nonUniformEntropyDistributionPenalty": {
            "type": "number",
            "description": "**The penalty applied to the whole password because of irregular entropy distribution.**\n\nThis penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
          },
          "detectedKeyboard": {
            "type": "string",
            "description": "**The detected keyboard, QWERTY or Dvorak.**\n"
          },
          "keyboardSequence": {
            "type": "array",
            "description": "**The penalty applied to each character that has been found to be part of a keyboard sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "penalty": {
                  "type": "number",
                  "description": "The penalty applied to this character if it is part of a keyboard sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "numberSequence": {
            "type": "array",
            "description": "**The penalty applied to each character that has been found to be part of a number sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "penalty": {
                  "type": "number",
                  "description": "The penalty applied to this character if it is part of a number sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "words": {
            "type": "array",
            "description": "**The penalty applied to each character that has been found to be part of a word.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "penalty": {
                  "type": "number",
                  "description": "The penalty applied to this character if it is part of a word.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.                \n",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "repeatedChars": {
            "type": "array",
            "description": "**The penalty applied to each character that are repeated**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.          \n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "penalty": {
                  "type": "number",
                  "description": "The penalty applied to this character if it is repeated.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "alphabetSequence": {
            "type": "array",
            "description": "**The penalty applied to each character that has been found to be part of an alphabet sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "penalty": {
                  "type": "number",
                  "description": "The penalty applied to this character if it is part of an alphabet sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "total": {
            "type": "array",
            "description": "**The total penalty applied to each character.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
            "items": {
              "type": "object",
              "properties": {
                "char": {
                  "type": "string",
                  "description": "The n-th character.",
                  "xml": {
                    "attribute": true
                  }
                },
                "l33tchar": {
                  "type": "string",
                  "description": "The n-th character after the l33t transformation.",
                  "xml": {
                    "attribute": true
                  }
                },
                "penalty": {
                  "type": "number",
                  "description": "The total penalty applied to each character.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.                \n",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          },
          "apiVersion": {
            "type": "string",
            "description": "**This API version number.**\n"
          },
          "requestId": {
            "type": "string",
            "description": "**The identifier of the request that corresponds to this response.**\n"
          },
          "requestTimestamp": {
            "type": "number",
            "description": "**The timestamp for this response.**\n\nMilliseconds from the epoch of 1970-01-01T00:00:00Z.\n"
          }
        }
      },
      "about": {
        "type": "object",
        "description": "**This API version number**.\n",
        "properties": {
          "apiVersion": {
            "type": "object",
            "properties": {
              "majorNumber": {
                "type": "integer",
                "description": "This API version major number.",
                "xml": {
                  "attribute": true
                }
              },
              "minorNumber": {
                "type": "integer",
                "description": "This API version minor number.",
                "xml": {
                  "attribute": true
                }
              }
            }
          },
          "apiReleaseDateIso8601": {
            "type": "string",
            "description": "**The release date of this API, ISO 8601 format.**\n"
          },
          "availableLanguagesIso639_1": {
            "type": "string",
            "description": "**The list of available languages.**\n\nEach language is identified by its ISO 639-1, two-letter code.\n\nThe list elements are comma-separated and sorted in ascending order.\n"
          }
        }
      }
    }
  },
  "x-origin-servers": [
    {
      "url": "http://arespass.net/v1.0"
    }
  ]
}